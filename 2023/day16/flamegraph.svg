<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1478" onload="init(evt)" viewBox="0 0 1200 1478" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1478" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1461.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1461.00"> </text><svg id="frames" x="10" width="1180" total_samples="4547"><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.02%)</title><rect x="0.0440%" y="1333" width="0.0220%" height="15" fill="rgb(227,0,7)" fg:x="2" fg:w="1"/><text x="0.2940%" y="1343.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.02%)</title><rect x="0.0440%" y="1317" width="0.0220%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="1"/><text x="0.2940%" y="1327.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.02%)</title><rect x="0.0440%" y="1301" width="0.0220%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="1"/><text x="0.2940%" y="1311.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.02%)</title><rect x="0.0440%" y="1285" width="0.0220%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="1"/><text x="0.2940%" y="1295.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.02%)</title><rect x="0.0440%" y="1269" width="0.0220%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="1"/><text x="0.2940%" y="1279.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.02%)</title><rect x="0.0440%" y="1253" width="0.0220%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="1"/><text x="0.2940%" y="1263.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.02%)</title><rect x="0.0440%" y="1237" width="0.0220%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="1"/><text x="0.2940%" y="1247.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.04%)</title><rect x="0.0440%" y="1365" width="0.0440%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="2"/><text x="0.2940%" y="1375.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.04%)</title><rect x="0.0440%" y="1349" width="0.0440%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="2"/><text x="0.2940%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="0.0660%" y="1333" width="0.0220%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="1"/><text x="0.3160%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="0.0660%" y="1317" width="0.0220%" height="15" fill="rgb(250,228,42)" fg:x="3" fg:w="1"/><text x="0.3160%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="0.0660%" y="1301" width="0.0220%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="1"/><text x="0.3160%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="0.0660%" y="1285" width="0.0220%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="1"/><text x="0.3160%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="0.0660%" y="1269" width="0.0220%" height="15" fill="rgb(206,188,39)" fg:x="3" fg:w="1"/><text x="0.3160%" y="1279.50"></text></g><g><title>[ld-linux-x86-64.so.2] (6 samples, 0.13%)</title><rect x="0.0220%" y="1381" width="0.1320%" height="15" fill="rgb(217,207,13)" fg:x="1" fg:w="6"/><text x="0.2720%" y="1391.50"></text></g><g><title>[unknown] (3 samples, 0.07%)</title><rect x="0.0880%" y="1365" width="0.0660%" height="15" fill="rgb(231,73,38)" fg:x="4" fg:w="3"/><text x="0.3380%" y="1375.50"></text></g><g><title>[unknown] (3 samples, 0.07%)</title><rect x="0.0880%" y="1349" width="0.0660%" height="15" fill="rgb(225,20,46)" fg:x="4" fg:w="3"/><text x="0.3380%" y="1359.50"></text></g><g><title>[unknown] (3 samples, 0.07%)</title><rect x="0.0880%" y="1333" width="0.0660%" height="15" fill="rgb(210,31,41)" fg:x="4" fg:w="3"/><text x="0.3380%" y="1343.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="0.1100%" y="1317" width="0.0440%" height="15" fill="rgb(221,200,47)" fg:x="5" fg:w="2"/><text x="0.3600%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="0.1320%" y="1301" width="0.0220%" height="15" fill="rgb(226,26,5)" fg:x="6" fg:w="1"/><text x="0.3820%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="0.1320%" y="1285" width="0.0220%" height="15" fill="rgb(249,33,26)" fg:x="6" fg:w="1"/><text x="0.3820%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="0.1320%" y="1269" width="0.0220%" height="15" fill="rgb(235,183,28)" fg:x="6" fg:w="1"/><text x="0.3820%" y="1279.50"></text></g><g><title>[ld-linux-x86-64.so.2] (8 samples, 0.18%)</title><rect x="0.0000%" y="1397" width="0.1759%" height="15" fill="rgb(221,5,38)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="0.1539%" y="1381" width="0.0220%" height="15" fill="rgb(247,18,42)" fg:x="7" fg:w="1"/><text x="0.4039%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="0.1539%" y="1365" width="0.0220%" height="15" fill="rgb(241,131,45)" fg:x="7" fg:w="1"/><text x="0.4039%" y="1375.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="0.1539%" y="1349" width="0.0220%" height="15" fill="rgb(249,31,29)" fg:x="7" fg:w="1"/><text x="0.4039%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="0.1539%" y="1333" width="0.0220%" height="15" fill="rgb(225,111,53)" fg:x="7" fg:w="1"/><text x="0.4039%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="0.1539%" y="1317" width="0.0220%" height="15" fill="rgb(238,160,17)" fg:x="7" fg:w="1"/><text x="0.4039%" y="1327.50"></text></g><g><title>[unknown] (28 samples, 0.62%)</title><rect x="0.1979%" y="1365" width="0.6158%" height="15" fill="rgb(214,148,48)" fg:x="9" fg:w="28"/><text x="0.4479%" y="1375.50"></text></g><g><title>[unknown] (27 samples, 0.59%)</title><rect x="0.2199%" y="1349" width="0.5938%" height="15" fill="rgb(232,36,49)" fg:x="10" fg:w="27"/><text x="0.4699%" y="1359.50"></text></g><g><title>[unknown] (22 samples, 0.48%)</title><rect x="0.3299%" y="1333" width="0.4838%" height="15" fill="rgb(209,103,24)" fg:x="15" fg:w="22"/><text x="0.5799%" y="1343.50"></text></g><g><title>[unknown] (19 samples, 0.42%)</title><rect x="0.3959%" y="1317" width="0.4179%" height="15" fill="rgb(229,88,8)" fg:x="18" fg:w="19"/><text x="0.6459%" y="1327.50"></text></g><g><title>[unknown] (13 samples, 0.29%)</title><rect x="0.5278%" y="1301" width="0.2859%" height="15" fill="rgb(213,181,19)" fg:x="24" fg:w="13"/><text x="0.7778%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="0.7917%" y="1285" width="0.0220%" height="15" fill="rgb(254,191,54)" fg:x="36" fg:w="1"/><text x="1.0417%" y="1295.50"></text></g><g><title>__ctype_init (1 samples, 0.02%)</title><rect x="0.8137%" y="1365" width="0.0220%" height="15" fill="rgb(241,83,37)" fg:x="37" fg:w="1"/><text x="1.0637%" y="1375.50"></text></g><g><title>pthread_self (2 samples, 0.04%)</title><rect x="0.9457%" y="1269" width="0.0440%" height="15" fill="rgb(233,36,39)" fg:x="43" fg:w="2"/><text x="1.1957%" y="1279.50"></text></g><g><title>prctl (5 samples, 0.11%)</title><rect x="0.9897%" y="1253" width="0.1100%" height="15" fill="rgb(226,3,54)" fg:x="45" fg:w="5"/><text x="1.2397%" y="1263.50"></text></g><g><title>[unknown] (4 samples, 0.09%)</title><rect x="1.0117%" y="1237" width="0.0880%" height="15" fill="rgb(245,192,40)" fg:x="46" fg:w="4"/><text x="1.2617%" y="1247.50"></text></g><g><title>[unknown] (4 samples, 0.09%)</title><rect x="1.0117%" y="1221" width="0.0880%" height="15" fill="rgb(238,167,29)" fg:x="46" fg:w="4"/><text x="1.2617%" y="1231.50"></text></g><g><title>[unknown] (4 samples, 0.09%)</title><rect x="1.0117%" y="1205" width="0.0880%" height="15" fill="rgb(232,182,51)" fg:x="46" fg:w="4"/><text x="1.2617%" y="1215.50"></text></g><g><title>[unknown] (4 samples, 0.09%)</title><rect x="1.0117%" y="1189" width="0.0880%" height="15" fill="rgb(231,60,39)" fg:x="46" fg:w="4"/><text x="1.2617%" y="1199.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="1.0556%" y="1173" width="0.0440%" height="15" fill="rgb(208,69,12)" fg:x="48" fg:w="2"/><text x="1.3056%" y="1183.50"></text></g><g><title>std::sys::unix::thread::Thread::set_name (9 samples, 0.20%)</title><rect x="0.9457%" y="1285" width="0.1979%" height="15" fill="rgb(235,93,37)" fg:x="43" fg:w="9"/><text x="1.1957%" y="1295.50"></text></g><g><title>pthread_setname_np (7 samples, 0.15%)</title><rect x="0.9897%" y="1269" width="0.1539%" height="15" fill="rgb(213,116,39)" fg:x="45" fg:w="7"/><text x="1.2397%" y="1279.50"></text></g><g><title>strlen@plt (2 samples, 0.04%)</title><rect x="1.0996%" y="1253" width="0.0440%" height="15" fill="rgb(222,207,29)" fg:x="50" fg:w="2"/><text x="1.3496%" y="1263.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (14 samples, 0.31%)</title><rect x="0.8577%" y="1349" width="0.3079%" height="15" fill="rgb(206,96,30)" fg:x="39" fg:w="14"/><text x="1.1077%" y="1359.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (13 samples, 0.29%)</title><rect x="0.8797%" y="1333" width="0.2859%" height="15" fill="rgb(218,138,4)" fg:x="40" fg:w="13"/><text x="1.1297%" y="1343.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (13 samples, 0.29%)</title><rect x="0.8797%" y="1317" width="0.2859%" height="15" fill="rgb(250,191,14)" fg:x="40" fg:w="13"/><text x="1.1297%" y="1327.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (10 samples, 0.22%)</title><rect x="0.9457%" y="1301" width="0.2199%" height="15" fill="rgb(239,60,40)" fg:x="43" fg:w="10"/><text x="1.1957%" y="1311.50"></text></g><g><title>std::thread::Thread::cname (1 samples, 0.02%)</title><rect x="1.1436%" y="1285" width="0.0220%" height="15" fill="rgb(206,27,48)" fg:x="52" fg:w="1"/><text x="1.3936%" y="1295.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_deref (1 samples, 0.02%)</title><rect x="1.1436%" y="1269" width="0.0220%" height="15" fill="rgb(225,35,8)" fg:x="52" fg:w="1"/><text x="1.3936%" y="1279.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="1.1436%" y="1253" width="0.0220%" height="15" fill="rgb(250,213,24)" fg:x="52" fg:w="1"/><text x="1.3936%" y="1263.50"></text></g><g><title>sigaltstack (13 samples, 0.29%)</title><rect x="1.1656%" y="1317" width="0.2859%" height="15" fill="rgb(247,123,22)" fg:x="53" fg:w="13"/><text x="1.4156%" y="1327.50"></text></g><g><title>[unknown] (13 samples, 0.29%)</title><rect x="1.1656%" y="1301" width="0.2859%" height="15" fill="rgb(231,138,38)" fg:x="53" fg:w="13"/><text x="1.4156%" y="1311.50"></text></g><g><title>[unknown] (12 samples, 0.26%)</title><rect x="1.1876%" y="1285" width="0.2639%" height="15" fill="rgb(231,145,46)" fg:x="54" fg:w="12"/><text x="1.4376%" y="1295.50"></text></g><g><title>[unknown] (9 samples, 0.20%)</title><rect x="1.2536%" y="1269" width="0.1979%" height="15" fill="rgb(251,118,11)" fg:x="57" fg:w="9"/><text x="1.5036%" y="1279.50"></text></g><g><title>[unknown] (6 samples, 0.13%)</title><rect x="1.3196%" y="1253" width="0.1320%" height="15" fill="rgb(217,147,25)" fg:x="60" fg:w="6"/><text x="1.5696%" y="1263.50"></text></g><g><title>[unknown] (3 samples, 0.07%)</title><rect x="1.3855%" y="1237" width="0.0660%" height="15" fill="rgb(247,81,37)" fg:x="63" fg:w="3"/><text x="1.6355%" y="1247.50"></text></g><g><title>__mmap (14 samples, 0.31%)</title><rect x="1.4515%" y="1285" width="0.3079%" height="15" fill="rgb(209,12,38)" fg:x="66" fg:w="14"/><text x="1.7015%" y="1295.50"></text></g><g><title>[unknown] (11 samples, 0.24%)</title><rect x="1.5175%" y="1269" width="0.2419%" height="15" fill="rgb(227,1,9)" fg:x="69" fg:w="11"/><text x="1.7675%" y="1279.50"></text></g><g><title>[unknown] (10 samples, 0.22%)</title><rect x="1.5395%" y="1253" width="0.2199%" height="15" fill="rgb(248,47,43)" fg:x="70" fg:w="10"/><text x="1.7895%" y="1263.50"></text></g><g><title>[unknown] (10 samples, 0.22%)</title><rect x="1.5395%" y="1237" width="0.2199%" height="15" fill="rgb(221,10,30)" fg:x="70" fg:w="10"/><text x="1.7895%" y="1247.50"></text></g><g><title>[unknown] (6 samples, 0.13%)</title><rect x="1.6274%" y="1221" width="0.1320%" height="15" fill="rgb(210,229,1)" fg:x="74" fg:w="6"/><text x="1.8774%" y="1231.50"></text></g><g><title>[unknown] (3 samples, 0.07%)</title><rect x="1.6934%" y="1205" width="0.0660%" height="15" fill="rgb(222,148,37)" fg:x="77" fg:w="3"/><text x="1.9434%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="1.7374%" y="1189" width="0.0220%" height="15" fill="rgb(234,67,33)" fg:x="79" fg:w="1"/><text x="1.9874%" y="1199.50"></text></g><g><title>__mprotect (6 samples, 0.13%)</title><rect x="1.7594%" y="1285" width="0.1320%" height="15" fill="rgb(247,98,35)" fg:x="80" fg:w="6"/><text x="2.0094%" y="1295.50"></text></g><g><title>[unknown] (6 samples, 0.13%)</title><rect x="1.7594%" y="1269" width="0.1320%" height="15" fill="rgb(247,138,52)" fg:x="80" fg:w="6"/><text x="2.0094%" y="1279.50"></text></g><g><title>[unknown] (6 samples, 0.13%)</title><rect x="1.7594%" y="1253" width="0.1320%" height="15" fill="rgb(213,79,30)" fg:x="80" fg:w="6"/><text x="2.0094%" y="1263.50"></text></g><g><title>[unknown] (6 samples, 0.13%)</title><rect x="1.7594%" y="1237" width="0.1320%" height="15" fill="rgb(246,177,23)" fg:x="80" fg:w="6"/><text x="2.0094%" y="1247.50"></text></g><g><title>[unknown] (6 samples, 0.13%)</title><rect x="1.7594%" y="1221" width="0.1320%" height="15" fill="rgb(230,62,27)" fg:x="80" fg:w="6"/><text x="2.0094%" y="1231.50"></text></g><g><title>[unknown] (4 samples, 0.09%)</title><rect x="1.8034%" y="1205" width="0.0880%" height="15" fill="rgb(216,154,8)" fg:x="82" fg:w="4"/><text x="2.0534%" y="1215.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="1.8474%" y="1189" width="0.0440%" height="15" fill="rgb(244,35,45)" fg:x="84" fg:w="2"/><text x="2.0974%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="1.8694%" y="1173" width="0.0220%" height="15" fill="rgb(251,115,12)" fg:x="85" fg:w="1"/><text x="2.1194%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="1.8694%" y="1157" width="0.0220%" height="15" fill="rgb(240,54,50)" fg:x="85" fg:w="1"/><text x="2.1194%" y="1167.50"></text></g><g><title>sigaltstack (3 samples, 0.07%)</title><rect x="1.8914%" y="1285" width="0.0660%" height="15" fill="rgb(233,84,52)" fg:x="86" fg:w="3"/><text x="2.1414%" y="1295.50"></text></g><g><title>[unknown] (3 samples, 0.07%)</title><rect x="1.8914%" y="1269" width="0.0660%" height="15" fill="rgb(207,117,47)" fg:x="86" fg:w="3"/><text x="2.1414%" y="1279.50"></text></g><g><title>[libc.so.6] (89 samples, 1.96%)</title><rect x="0.1759%" y="1381" width="1.9573%" height="15" fill="rgb(249,43,39)" fg:x="8" fg:w="89"/><text x="0.4259%" y="1391.50">[..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (59 samples, 1.30%)</title><rect x="0.8357%" y="1365" width="1.2976%" height="15" fill="rgb(209,38,44)" fg:x="38" fg:w="59"/><text x="1.0857%" y="1375.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (44 samples, 0.97%)</title><rect x="1.1656%" y="1349" width="0.9677%" height="15" fill="rgb(236,212,23)" fg:x="53" fg:w="44"/><text x="1.4156%" y="1359.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (44 samples, 0.97%)</title><rect x="1.1656%" y="1333" width="0.9677%" height="15" fill="rgb(242,79,21)" fg:x="53" fg:w="44"/><text x="1.4156%" y="1343.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (31 samples, 0.68%)</title><rect x="1.4515%" y="1317" width="0.6818%" height="15" fill="rgb(211,96,35)" fg:x="66" fg:w="31"/><text x="1.7015%" y="1327.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (31 samples, 0.68%)</title><rect x="1.4515%" y="1301" width="0.6818%" height="15" fill="rgb(253,215,40)" fg:x="66" fg:w="31"/><text x="1.7015%" y="1311.50"></text></g><g><title>std::sys::unix::os::page_size (8 samples, 0.18%)</title><rect x="1.9573%" y="1285" width="0.1759%" height="15" fill="rgb(211,81,21)" fg:x="89" fg:w="8"/><text x="2.2073%" y="1295.50"></text></g><g><title>__sysconf (8 samples, 0.18%)</title><rect x="1.9573%" y="1269" width="0.1759%" height="15" fill="rgb(208,190,38)" fg:x="89" fg:w="8"/><text x="2.2073%" y="1279.50"></text></g><g><title>__getpagesize (4 samples, 0.09%)</title><rect x="2.0453%" y="1253" width="0.0880%" height="15" fill="rgb(235,213,38)" fg:x="93" fg:w="4"/><text x="2.2953%" y="1263.50"></text></g><g><title>[libc.so.6] (90 samples, 1.98%)</title><rect x="0.1759%" y="1397" width="1.9793%" height="15" fill="rgb(237,122,38)" fg:x="8" fg:w="90"/><text x="0.4259%" y="1407.50">[..</text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="2.1333%" y="1381" width="0.0220%" height="15" fill="rgb(244,218,35)" fg:x="97" fg:w="1"/><text x="2.3833%" y="1391.50"></text></g><g><title>[unknown] (19 samples, 0.42%)</title><rect x="2.1553%" y="1397" width="0.4179%" height="15" fill="rgb(240,68,47)" fg:x="98" fg:w="19"/><text x="2.4053%" y="1407.50"></text></g><g><title>[unknown] (7 samples, 0.15%)</title><rect x="2.4192%" y="1381" width="0.1539%" height="15" fill="rgb(210,16,53)" fg:x="110" fg:w="7"/><text x="2.6692%" y="1391.50"></text></g><g><title>[unknown] (4 samples, 0.09%)</title><rect x="2.4852%" y="1365" width="0.0880%" height="15" fill="rgb(235,124,12)" fg:x="113" fg:w="4"/><text x="2.7352%" y="1375.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="2.5511%" y="1349" width="0.0220%" height="15" fill="rgb(224,169,11)" fg:x="116" fg:w="1"/><text x="2.8011%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::blocking::pool::Shared&gt;&gt; (1 samples, 0.02%)</title><rect x="2.5731%" y="997" width="0.0220%" height="15" fill="rgb(250,166,2)" fg:x="117" fg:w="1"/><text x="2.8231%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::blocking::pool::Shared&gt;&gt; (1 samples, 0.02%)</title><rect x="2.5731%" y="981" width="0.0220%" height="15" fill="rgb(242,216,29)" fg:x="117" fg:w="1"/><text x="2.8231%" y="991.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="2.5731%" y="965" width="0.0220%" height="15" fill="rgb(230,116,27)" fg:x="117" fg:w="1"/><text x="2.8231%" y="975.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.02%)</title><rect x="2.5731%" y="949" width="0.0220%" height="15" fill="rgb(228,99,48)" fg:x="117" fg:w="1"/><text x="2.8231%" y="959.50"></text></g><g><title>syscall (1 samples, 0.02%)</title><rect x="2.5731%" y="933" width="0.0220%" height="15" fill="rgb(253,11,6)" fg:x="117" fg:w="1"/><text x="2.8231%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="2.5731%" y="917" width="0.0220%" height="15" fill="rgb(247,143,39)" fg:x="117" fg:w="1"/><text x="2.8231%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="2.5731%" y="901" width="0.0220%" height="15" fill="rgb(236,97,10)" fg:x="117" fg:w="1"/><text x="2.8231%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="2.5731%" y="885" width="0.0220%" height="15" fill="rgb(233,208,19)" fg:x="117" fg:w="1"/><text x="2.8231%" y="895.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (2 samples, 0.04%)</title><rect x="2.5951%" y="997" width="0.0440%" height="15" fill="rgb(216,164,2)" fg:x="118" fg:w="2"/><text x="2.8451%" y="1007.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.04%)</title><rect x="2.5951%" y="981" width="0.0440%" height="15" fill="rgb(220,129,5)" fg:x="118" fg:w="2"/><text x="2.8451%" y="991.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.04%)</title><rect x="2.5951%" y="965" width="0.0440%" height="15" fill="rgb(242,17,10)" fg:x="118" fg:w="2"/><text x="2.8451%" y="975.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (2 samples, 0.04%)</title><rect x="2.5951%" y="949" width="0.0440%" height="15" fill="rgb(242,107,0)" fg:x="118" fg:w="2"/><text x="2.8451%" y="959.50"></text></g><g><title>parking_lot_core::parking_lot::park (2 samples, 0.04%)</title><rect x="2.5951%" y="933" width="0.0440%" height="15" fill="rgb(251,28,31)" fg:x="118" fg:w="2"/><text x="2.8451%" y="943.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (2 samples, 0.04%)</title><rect x="2.5951%" y="917" width="0.0440%" height="15" fill="rgb(233,223,10)" fg:x="118" fg:w="2"/><text x="2.8451%" y="927.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (2 samples, 0.04%)</title><rect x="2.5951%" y="901" width="0.0440%" height="15" fill="rgb(215,21,27)" fg:x="118" fg:w="2"/><text x="2.8451%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="2.6171%" y="885" width="0.0220%" height="15" fill="rgb(232,23,21)" fg:x="119" fg:w="1"/><text x="2.8671%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="2.6171%" y="869" width="0.0220%" height="15" fill="rgb(244,5,23)" fg:x="119" fg:w="1"/><text x="2.8671%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="2.6171%" y="853" width="0.0220%" height="15" fill="rgb(226,81,46)" fg:x="119" fg:w="1"/><text x="2.8671%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="2.6171%" y="837" width="0.0220%" height="15" fill="rgb(247,70,30)" fg:x="119" fg:w="1"/><text x="2.8671%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="2.6171%" y="821" width="0.0220%" height="15" fill="rgb(212,68,19)" fg:x="119" fg:w="1"/><text x="2.8671%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="2.6171%" y="805" width="0.0220%" height="15" fill="rgb(240,187,13)" fg:x="119" fg:w="1"/><text x="2.8671%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="2.6611%" y="933" width="0.0220%" height="15" fill="rgb(223,113,26)" fg:x="121" fg:w="1"/><text x="2.9111%" y="943.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (1 samples, 0.02%)</title><rect x="2.6611%" y="917" width="0.0220%" height="15" fill="rgb(206,192,2)" fg:x="121" fg:w="1"/><text x="2.9111%" y="927.50"></text></g><g><title>alloc::ffi::c_str::CString::new (1 samples, 0.02%)</title><rect x="2.6611%" y="901" width="0.0220%" height="15" fill="rgb(241,108,4)" fg:x="121" fg:w="1"/><text x="2.9111%" y="911.50"></text></g><g><title>&lt;T as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.02%)</title><rect x="2.6611%" y="885" width="0.0220%" height="15" fill="rgb(247,173,49)" fg:x="121" fg:w="1"/><text x="2.9111%" y="895.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.02%)</title><rect x="2.6611%" y="869" width="0.0220%" height="15" fill="rgb(224,114,35)" fg:x="121" fg:w="1"/><text x="2.9111%" y="879.50"></text></g><g><title>alloc::string::&lt;impl core::convert::From&lt;alloc::string::String&gt; for alloc::vec::Vec&lt;u8&gt;&gt;::from (1 samples, 0.02%)</title><rect x="2.6611%" y="853" width="0.0220%" height="15" fill="rgb(245,159,27)" fg:x="121" fg:w="1"/><text x="2.9111%" y="863.50"></text></g><g><title>alloc::string::String::into_bytes (1 samples, 0.02%)</title><rect x="2.6611%" y="837" width="0.0220%" height="15" fill="rgb(245,172,44)" fg:x="121" fg:w="1"/><text x="2.9111%" y="847.50"></text></g><g><title>std::sys::unix::thread::Thread::new (1 samples, 0.02%)</title><rect x="2.6831%" y="933" width="0.0220%" height="15" fill="rgb(236,23,11)" fg:x="122" fg:w="1"/><text x="2.9331%" y="943.50"></text></g><g><title>pthread_attr_init (1 samples, 0.02%)</title><rect x="2.6831%" y="917" width="0.0220%" height="15" fill="rgb(205,117,38)" fg:x="122" fg:w="1"/><text x="2.9331%" y="927.50"></text></g><g><title>__getpagesize (1 samples, 0.02%)</title><rect x="2.6831%" y="901" width="0.0220%" height="15" fill="rgb(237,72,25)" fg:x="122" fg:w="1"/><text x="2.9331%" y="911.50"></text></g><g><title>std::thread::Builder::spawn (3 samples, 0.07%)</title><rect x="2.6611%" y="981" width="0.0660%" height="15" fill="rgb(244,70,9)" fg:x="121" fg:w="3"/><text x="2.9111%" y="991.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (3 samples, 0.07%)</title><rect x="2.6611%" y="965" width="0.0660%" height="15" fill="rgb(217,125,39)" fg:x="121" fg:w="3"/><text x="2.9111%" y="975.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_ (3 samples, 0.07%)</title><rect x="2.6611%" y="949" width="0.0660%" height="15" fill="rgb(235,36,10)" fg:x="121" fg:w="3"/><text x="2.9111%" y="959.50"></text></g><g><title>std::thread::Thread::new (1 samples, 0.02%)</title><rect x="2.7051%" y="933" width="0.0220%" height="15" fill="rgb(251,123,47)" fg:x="123" fg:w="1"/><text x="2.9551%" y="943.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new_uninit (1 samples, 0.02%)</title><rect x="2.7051%" y="917" width="0.0220%" height="15" fill="rgb(221,13,13)" fg:x="123" fg:w="1"/><text x="2.9551%" y="927.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::allocate_for_layout (1 samples, 0.02%)</title><rect x="2.7051%" y="901" width="0.0220%" height="15" fill="rgb(238,131,9)" fg:x="123" fg:w="1"/><text x="2.9551%" y="911.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new_uninit::_{{closure}} (1 samples, 0.02%)</title><rect x="2.7051%" y="885" width="0.0220%" height="15" fill="rgb(211,50,8)" fg:x="123" fg:w="1"/><text x="2.9551%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="2.7051%" y="869" width="0.0220%" height="15" fill="rgb(245,182,24)" fg:x="123" fg:w="1"/><text x="2.9551%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="2.7051%" y="853" width="0.0220%" height="15" fill="rgb(242,14,37)" fg:x="123" fg:w="1"/><text x="2.9551%" y="863.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="2.7051%" y="837" width="0.0220%" height="15" fill="rgb(246,228,12)" fg:x="123" fg:w="1"/><text x="2.9551%" y="847.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="2.7051%" y="821" width="0.0220%" height="15" fill="rgb(213,55,15)" fg:x="123" fg:w="1"/><text x="2.9551%" y="831.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="2.7051%" y="805" width="0.0220%" height="15" fill="rgb(209,9,3)" fg:x="123" fg:w="1"/><text x="2.9551%" y="815.50"></text></g><g><title>tokio::runtime::builder::Builder::build (8 samples, 0.18%)</title><rect x="2.5731%" y="1125" width="0.1759%" height="15" fill="rgb(230,59,30)" fg:x="117" fg:w="8"/><text x="2.8231%" y="1135.50"></text></g><g><title>tokio::runtime::builder::Builder::build_threaded_runtime (8 samples, 0.18%)</title><rect x="2.5731%" y="1109" width="0.1759%" height="15" fill="rgb(209,121,21)" fg:x="117" fg:w="8"/><text x="2.8231%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch (8 samples, 0.18%)</title><rect x="2.5731%" y="1093" width="0.1759%" height="15" fill="rgb(220,109,13)" fg:x="117" fg:w="8"/><text x="2.8231%" y="1103.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (8 samples, 0.18%)</title><rect x="2.5731%" y="1077" width="0.1759%" height="15" fill="rgb(232,18,1)" fg:x="117" fg:w="8"/><text x="2.8231%" y="1087.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn_blocking (8 samples, 0.18%)</title><rect x="2.5731%" y="1061" width="0.1759%" height="15" fill="rgb(215,41,42)" fg:x="117" fg:w="8"/><text x="2.8231%" y="1071.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking (8 samples, 0.18%)</title><rect x="2.5731%" y="1045" width="0.1759%" height="15" fill="rgb(224,123,36)" fg:x="117" fg:w="8"/><text x="2.8231%" y="1055.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking_inner (8 samples, 0.18%)</title><rect x="2.5731%" y="1029" width="0.1759%" height="15" fill="rgb(240,125,3)" fg:x="117" fg:w="8"/><text x="2.8231%" y="1039.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (8 samples, 0.18%)</title><rect x="2.5731%" y="1013" width="0.1759%" height="15" fill="rgb(205,98,50)" fg:x="117" fg:w="8"/><text x="2.8231%" y="1023.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread (5 samples, 0.11%)</title><rect x="2.6391%" y="997" width="0.1100%" height="15" fill="rgb(205,185,37)" fg:x="120" fg:w="5"/><text x="2.8891%" y="1007.50"></text></g><g><title>tokio::runtime::builder::Builder::new::_{{closure}} (1 samples, 0.02%)</title><rect x="2.7271%" y="981" width="0.0220%" height="15" fill="rgb(238,207,15)" fg:x="124" fg:w="1"/><text x="2.9771%" y="991.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.02%)</title><rect x="2.7271%" y="965" width="0.0220%" height="15" fill="rgb(213,199,42)" fg:x="124" fg:w="1"/><text x="2.9771%" y="975.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.02%)</title><rect x="2.7271%" y="949" width="0.0220%" height="15" fill="rgb(235,201,11)" fg:x="124" fg:w="1"/><text x="2.9771%" y="959.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.02%)</title><rect x="2.7271%" y="933" width="0.0220%" height="15" fill="rgb(207,46,11)" fg:x="124" fg:w="1"/><text x="2.9771%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.02%)</title><rect x="2.7271%" y="917" width="0.0220%" height="15" fill="rgb(241,35,35)" fg:x="124" fg:w="1"/><text x="2.9771%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.02%)</title><rect x="2.7271%" y="901" width="0.0220%" height="15" fill="rgb(243,32,47)" fg:x="124" fg:w="1"/><text x="2.9771%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="2.7271%" y="885" width="0.0220%" height="15" fill="rgb(247,202,23)" fg:x="124" fg:w="1"/><text x="2.9771%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="2.7271%" y="869" width="0.0220%" height="15" fill="rgb(219,102,11)" fg:x="124" fg:w="1"/><text x="2.9771%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="2.7271%" y="853" width="0.0220%" height="15" fill="rgb(243,110,44)" fg:x="124" fg:w="1"/><text x="2.9771%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="2.7271%" y="837" width="0.0220%" height="15" fill="rgb(222,74,54)" fg:x="124" fg:w="1"/><text x="2.9771%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="2.7271%" y="821" width="0.0220%" height="15" fill="rgb(216,99,12)" fg:x="124" fg:w="1"/><text x="2.9771%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="2.7271%" y="805" width="0.0220%" height="15" fill="rgb(226,22,26)" fg:x="124" fg:w="1"/><text x="2.9771%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="2.7271%" y="789" width="0.0220%" height="15" fill="rgb(217,163,10)" fg:x="124" fg:w="1"/><text x="2.9771%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="2.7271%" y="773" width="0.0220%" height="15" fill="rgb(213,25,53)" fg:x="124" fg:w="1"/><text x="2.9771%" y="783.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="2.7271%" y="757" width="0.0220%" height="15" fill="rgb(252,105,26)" fg:x="124" fg:w="1"/><text x="2.9771%" y="767.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="2.7271%" y="741" width="0.0220%" height="15" fill="rgb(220,39,43)" fg:x="124" fg:w="1"/><text x="2.9771%" y="751.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::push (4 samples, 0.09%)</title><rect x="2.9690%" y="917" width="0.0880%" height="15" fill="rgb(229,68,48)" fg:x="135" fg:w="4"/><text x="3.2190%" y="927.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::sift_up (4 samples, 0.09%)</title><rect x="2.9690%" y="901" width="0.0880%" height="15" fill="rgb(252,8,32)" fg:x="135" fg:w="4"/><text x="3.2190%" y="911.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (4 samples, 0.09%)</title><rect x="2.9690%" y="885" width="0.0880%" height="15" fill="rgb(223,20,43)" fg:x="135" fg:w="4"/><text x="3.2190%" y="895.50"></text></g><g><title>core::ptr::read (4 samples, 0.09%)</title><rect x="2.9690%" y="869" width="0.0880%" height="15" fill="rgb(229,81,49)" fg:x="135" fg:w="4"/><text x="3.2190%" y="879.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or (2 samples, 0.04%)</title><rect x="3.2549%" y="837" width="0.0440%" height="15" fill="rgb(236,28,36)" fg:x="148" fg:w="2"/><text x="3.5049%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::poll::Poll&lt;tokio::runtime::coop::RestoreOnPending&gt;&gt; (2 samples, 0.04%)</title><rect x="3.2549%" y="821" width="0.0440%" height="15" fill="rgb(249,185,26)" fg:x="148" fg:w="2"/><text x="3.5049%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::coop::RestoreOnPending&gt; (2 samples, 0.04%)</title><rect x="3.2549%" y="805" width="0.0440%" height="15" fill="rgb(249,174,33)" fg:x="148" fg:w="2"/><text x="3.5049%" y="815.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="3.2549%" y="789" width="0.0440%" height="15" fill="rgb(233,201,37)" fg:x="148" fg:w="2"/><text x="3.5049%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="3.2769%" y="773" width="0.0220%" height="15" fill="rgb(221,78,26)" fg:x="149" fg:w="1"/><text x="3.5269%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="3.2769%" y="757" width="0.0220%" height="15" fill="rgb(250,127,30)" fg:x="149" fg:w="1"/><text x="3.5269%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="3.2769%" y="741" width="0.0220%" height="15" fill="rgb(230,49,44)" fg:x="149" fg:w="1"/><text x="3.5269%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="3.2769%" y="725" width="0.0220%" height="15" fill="rgb(229,67,23)" fg:x="149" fg:w="1"/><text x="3.5269%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="3.2769%" y="709" width="0.0220%" height="15" fill="rgb(249,83,47)" fg:x="149" fg:w="1"/><text x="3.5269%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="3.2769%" y="693" width="0.0220%" height="15" fill="rgb(215,43,3)" fg:x="149" fg:w="1"/><text x="3.5269%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="3.2769%" y="677" width="0.0220%" height="15" fill="rgb(238,154,13)" fg:x="149" fg:w="1"/><text x="3.5269%" y="687.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (4 samples, 0.09%)</title><rect x="3.2549%" y="853" width="0.0880%" height="15" fill="rgb(219,56,2)" fg:x="148" fg:w="4"/><text x="3.5049%" y="863.50"></text></g><g><title>tokio::runtime::context::budget (2 samples, 0.04%)</title><rect x="3.2989%" y="837" width="0.0440%" height="15" fill="rgb(233,0,4)" fg:x="150" fg:w="2"/><text x="3.5489%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.04%)</title><rect x="3.2989%" y="821" width="0.0440%" height="15" fill="rgb(235,30,7)" fg:x="150" fg:w="2"/><text x="3.5489%" y="831.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (2 samples, 0.04%)</title><rect x="3.2989%" y="805" width="0.0440%" height="15" fill="rgb(250,79,13)" fg:x="150" fg:w="2"/><text x="3.5489%" y="815.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (2 samples, 0.04%)</title><rect x="3.2989%" y="789" width="0.0440%" height="15" fill="rgb(211,146,34)" fg:x="150" fg:w="2"/><text x="3.5489%" y="799.50"></text></g><g><title>tokio::runtime::coop::Budget::decrement (2 samples, 0.04%)</title><rect x="3.2989%" y="773" width="0.0440%" height="15" fill="rgb(228,22,38)" fg:x="150" fg:w="2"/><text x="3.5489%" y="783.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::try_read_output (4 samples, 0.09%)</title><rect x="3.3429%" y="853" width="0.0880%" height="15" fill="rgb(235,168,5)" fg:x="152" fg:w="4"/><text x="3.5929%" y="863.50"></text></g><g><title>tokio::runtime::task::harness::can_read_output (2 samples, 0.04%)</title><rect x="3.3868%" y="837" width="0.0440%" height="15" fill="rgb(221,155,16)" fg:x="154" fg:w="2"/><text x="3.6368%" y="847.50"></text></g><g><title>tokio::runtime::task::state::State::load (2 samples, 0.04%)</title><rect x="3.3868%" y="821" width="0.0440%" height="15" fill="rgb(215,215,53)" fg:x="154" fg:w="2"/><text x="3.6368%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.04%)</title><rect x="3.3868%" y="805" width="0.0440%" height="15" fill="rgb(223,4,10)" fg:x="154" fg:w="2"/><text x="3.6368%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.04%)</title><rect x="3.3868%" y="789" width="0.0440%" height="15" fill="rgb(234,103,6)" fg:x="154" fg:w="2"/><text x="3.6368%" y="799.50"></text></g><g><title>&lt;futures_util::stream::futures_ordered::OrderWrapper&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 0.37%)</title><rect x="3.1889%" y="885" width="0.3739%" height="15" fill="rgb(227,97,0)" fg:x="145" fg:w="17"/><text x="3.4389%" y="895.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.35%)</title><rect x="3.2109%" y="869" width="0.3519%" height="15" fill="rgb(234,150,53)" fg:x="146" fg:w="16"/><text x="3.4609%" y="879.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::try_read_output (6 samples, 0.13%)</title><rect x="3.4308%" y="853" width="0.1320%" height="15" fill="rgb(228,201,54)" fg:x="156" fg:w="6"/><text x="3.6808%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_util::stream::futures_unordered::task::Task&lt;futures_util::stream::futures_ordered::OrderWrapper&lt;tokio::runtime::task::join::JoinHandle&lt;day16::maze_walker::MazeResult&gt;&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="3.5628%" y="837" width="0.0220%" height="15" fill="rgb(222,22,37)" fg:x="162" fg:w="1"/><text x="3.8128%" y="847.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="3.5628%" y="821" width="0.0220%" height="15" fill="rgb(237,53,32)" fg:x="162" fg:w="1"/><text x="3.8128%" y="831.50"></text></g><g><title>cfree (1 samples, 0.02%)</title><rect x="3.5628%" y="805" width="0.0220%" height="15" fill="rgb(233,25,53)" fg:x="162" fg:w="1"/><text x="3.8128%" y="815.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="3.5628%" y="789" width="0.0220%" height="15" fill="rgb(210,40,34)" fg:x="162" fg:w="1"/><text x="3.8128%" y="799.50"></text></g><g><title>cfree (3 samples, 0.07%)</title><rect x="3.5848%" y="773" width="0.0660%" height="15" fill="rgb(241,220,44)" fg:x="163" fg:w="3"/><text x="3.8348%" y="783.50"></text></g><g><title>[libc.so.6] (3 samples, 0.07%)</title><rect x="3.5848%" y="757" width="0.0660%" height="15" fill="rgb(235,28,35)" fg:x="163" fg:w="3"/><text x="3.8348%" y="767.50"></text></g><g><title>[libc.so.6] (3 samples, 0.07%)</title><rect x="3.5848%" y="741" width="0.0660%" height="15" fill="rgb(210,56,17)" fg:x="163" fg:w="3"/><text x="3.8348%" y="751.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="3.6288%" y="725" width="0.0220%" height="15" fill="rgb(224,130,29)" fg:x="165" fg:w="1"/><text x="3.8788%" y="735.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (1 samples, 0.02%)</title><rect x="3.6508%" y="773" width="0.0220%" height="15" fill="rgb(235,212,8)" fg:x="166" fg:w="1"/><text x="3.9008%" y="783.50"></text></g><g><title>core::mem::drop (1 samples, 0.02%)</title><rect x="3.6508%" y="757" width="0.0220%" height="15" fill="rgb(223,33,50)" fg:x="166" fg:w="1"/><text x="3.9008%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;day16::main::{{closure}}::{{closure}}::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="3.6508%" y="741" width="0.0220%" height="15" fill="rgb(219,149,13)" fg:x="166" fg:w="1"/><text x="3.9008%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;day16::main::{{closure}}::{{closure}}::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="3.6508%" y="725" width="0.0220%" height="15" fill="rgb(250,156,29)" fg:x="166" fg:w="1"/><text x="3.9008%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Core&lt;day16::main::{{closure}}::{{closure}}::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="3.6508%" y="709" width="0.0220%" height="15" fill="rgb(216,193,19)" fg:x="166" fg:w="1"/><text x="3.9008%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt; (1 samples, 0.02%)</title><rect x="3.6508%" y="693" width="0.0220%" height="15" fill="rgb(216,135,14)" fg:x="166" fg:w="1"/><text x="3.9008%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="3.6508%" y="677" width="0.0220%" height="15" fill="rgb(241,47,5)" fg:x="166" fg:w="1"/><text x="3.9008%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (1 samples, 0.02%)</title><rect x="3.7167%" y="629" width="0.0220%" height="15" fill="rgb(233,42,35)" fg:x="169" fg:w="1"/><text x="3.9667%" y="639.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="3.7167%" y="613" width="0.0220%" height="15" fill="rgb(231,13,6)" fg:x="169" fg:w="1"/><text x="3.9667%" y="623.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (1 samples, 0.02%)</title><rect x="3.7167%" y="597" width="0.0220%" height="15" fill="rgb(207,181,40)" fg:x="169" fg:w="1"/><text x="3.9667%" y="607.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.02%)</title><rect x="3.7167%" y="581" width="0.0220%" height="15" fill="rgb(254,173,49)" fg:x="169" fg:w="1"/><text x="3.9667%" y="591.50"></text></g><g><title>tokio::runtime::context::set_current_task_id::_{{closure}} (1 samples, 0.02%)</title><rect x="3.7167%" y="565" width="0.0220%" height="15" fill="rgb(221,1,38)" fg:x="169" fg:w="1"/><text x="3.9667%" y="575.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="3.7167%" y="549" width="0.0220%" height="15" fill="rgb(206,124,46)" fg:x="169" fg:w="1"/><text x="3.9667%" y="559.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="3.7167%" y="533" width="0.0220%" height="15" fill="rgb(249,21,11)" fg:x="169" fg:w="1"/><text x="3.9667%" y="543.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="3.7167%" y="517" width="0.0220%" height="15" fill="rgb(222,201,40)" fg:x="169" fg:w="1"/><text x="3.9667%" y="527.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.02%)</title><rect x="3.7387%" y="629" width="0.0220%" height="15" fill="rgb(235,61,29)" fg:x="170" fg:w="1"/><text x="3.9887%" y="639.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::_{{closure}} (1 samples, 0.02%)</title><rect x="3.7387%" y="613" width="0.0220%" height="15" fill="rgb(219,207,3)" fg:x="170" fg:w="1"/><text x="3.9887%" y="623.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (2 samples, 0.04%)</title><rect x="3.7607%" y="581" width="0.0440%" height="15" fill="rgb(222,56,46)" fg:x="171" fg:w="2"/><text x="4.0107%" y="591.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (2 samples, 0.04%)</title><rect x="3.7607%" y="565" width="0.0440%" height="15" fill="rgb(239,76,54)" fg:x="171" fg:w="2"/><text x="4.0107%" y="575.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.15%)</title><rect x="3.6728%" y="757" width="0.1539%" height="15" fill="rgb(231,124,27)" fg:x="167" fg:w="7"/><text x="3.9228%" y="767.50"></text></g><g><title>std::panicking::try (7 samples, 0.15%)</title><rect x="3.6728%" y="741" width="0.1539%" height="15" fill="rgb(249,195,6)" fg:x="167" fg:w="7"/><text x="3.9228%" y="751.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.15%)</title><rect x="3.6728%" y="725" width="0.1539%" height="15" fill="rgb(237,174,47)" fg:x="167" fg:w="7"/><text x="3.9228%" y="735.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7 samples, 0.15%)</title><rect x="3.6728%" y="709" width="0.1539%" height="15" fill="rgb(206,201,31)" fg:x="167" fg:w="7"/><text x="3.9228%" y="719.50"></text></g><g><title>core::ops::function::FnOnce::call_once (7 samples, 0.15%)</title><rect x="3.6728%" y="693" width="0.1539%" height="15" fill="rgb(231,57,52)" fg:x="167" fg:w="7"/><text x="3.9228%" y="703.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow::_{{closure}} (7 samples, 0.15%)</title><rect x="3.6728%" y="677" width="0.1539%" height="15" fill="rgb(248,177,22)" fg:x="167" fg:w="7"/><text x="3.9228%" y="687.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output (7 samples, 0.15%)</title><rect x="3.6728%" y="661" width="0.1539%" height="15" fill="rgb(215,211,37)" fg:x="167" fg:w="7"/><text x="3.9228%" y="671.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (7 samples, 0.15%)</title><rect x="3.6728%" y="645" width="0.1539%" height="15" fill="rgb(241,128,51)" fg:x="167" fg:w="7"/><text x="3.9228%" y="655.50"></text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (3 samples, 0.07%)</title><rect x="3.7607%" y="629" width="0.0660%" height="15" fill="rgb(227,165,31)" fg:x="171" fg:w="3"/><text x="4.0107%" y="639.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (3 samples, 0.07%)</title><rect x="3.7607%" y="613" width="0.0660%" height="15" fill="rgb(228,167,24)" fg:x="171" fg:w="3"/><text x="4.0107%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.07%)</title><rect x="3.7607%" y="597" width="0.0660%" height="15" fill="rgb(228,143,12)" fg:x="171" fg:w="3"/><text x="4.0107%" y="607.50"></text></g><g><title>tokio::runtime::context::set_current_task_id::_{{closure}} (1 samples, 0.02%)</title><rect x="3.8047%" y="581" width="0.0220%" height="15" fill="rgb(249,149,8)" fg:x="173" fg:w="1"/><text x="4.0547%" y="591.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="3.8047%" y="565" width="0.0220%" height="15" fill="rgb(243,35,44)" fg:x="173" fg:w="1"/><text x="4.0547%" y="575.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="3.8047%" y="549" width="0.0220%" height="15" fill="rgb(246,89,9)" fg:x="173" fg:w="1"/><text x="4.0547%" y="559.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="3.8047%" y="533" width="0.0220%" height="15" fill="rgb(233,213,13)" fg:x="173" fg:w="1"/><text x="4.0547%" y="543.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (8 samples, 0.18%)</title><rect x="3.6728%" y="773" width="0.1759%" height="15" fill="rgb(233,141,41)" fg:x="167" fg:w="8"/><text x="3.9228%" y="783.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (1 samples, 0.02%)</title><rect x="3.8267%" y="757" width="0.0220%" height="15" fill="rgb(239,167,4)" fg:x="174" fg:w="1"/><text x="4.0767%" y="767.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::state (1 samples, 0.02%)</title><rect x="3.8487%" y="773" width="0.0220%" height="15" fill="rgb(209,217,16)" fg:x="175" fg:w="1"/><text x="4.0987%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;futures_util::stream::futures_ordered::OrderWrapper&lt;tokio::runtime::task::join::JoinHandle&lt;day16::maze_walker::MazeResult&gt;&gt;&gt;&gt; (15 samples, 0.33%)</title><rect x="3.5628%" y="885" width="0.3299%" height="15" fill="rgb(219,88,35)" fg:x="162" fg:w="15"/><text x="3.8128%" y="895.50"></text></g><g><title>&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;Fut&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.33%)</title><rect x="3.5628%" y="869" width="0.3299%" height="15" fill="rgb(220,193,23)" fg:x="162" fg:w="15"/><text x="3.8128%" y="879.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::release_task (15 samples, 0.33%)</title><rect x="3.5628%" y="853" width="0.3299%" height="15" fill="rgb(230,90,52)" fg:x="162" fg:w="15"/><text x="3.8128%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;futures_util::stream::futures_ordered::OrderWrapper&lt;tokio::runtime::task::join::JoinHandle&lt;day16::maze_walker::MazeResult&gt;&gt;&gt;&gt; (14 samples, 0.31%)</title><rect x="3.5848%" y="837" width="0.3079%" height="15" fill="rgb(252,106,19)" fg:x="163" fg:w="14"/><text x="3.8348%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::futures_ordered::OrderWrapper&lt;tokio::runtime::task::join::JoinHandle&lt;day16::maze_walker::MazeResult&gt;&gt;&gt; (14 samples, 0.31%)</title><rect x="3.5848%" y="821" width="0.3079%" height="15" fill="rgb(206,74,20)" fg:x="163" fg:w="14"/><text x="3.8348%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::join::JoinHandle&lt;day16::maze_walker::MazeResult&gt;&gt; (14 samples, 0.31%)</title><rect x="3.5848%" y="805" width="0.3079%" height="15" fill="rgb(230,138,44)" fg:x="163" fg:w="14"/><text x="3.8348%" y="815.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.31%)</title><rect x="3.5848%" y="789" width="0.3079%" height="15" fill="rgb(235,182,43)" fg:x="163" fg:w="14"/><text x="3.8348%" y="799.50"></text></g><g><title>tokio::runtime::task::state::State::drop_join_handle_fast (1 samples, 0.02%)</title><rect x="3.8707%" y="773" width="0.0220%" height="15" fill="rgb(242,16,51)" fg:x="176" fg:w="1"/><text x="4.1207%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.02%)</title><rect x="3.8707%" y="757" width="0.0220%" height="15" fill="rgb(248,9,4)" fg:x="176" fg:w="1"/><text x="4.1207%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.02%)</title><rect x="3.8707%" y="741" width="0.0220%" height="15" fill="rgb(210,31,22)" fg:x="176" fg:w="1"/><text x="4.1207%" y="751.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::register (3 samples, 0.07%)</title><rect x="3.8927%" y="885" width="0.0660%" height="15" fill="rgb(239,54,39)" fg:x="177" fg:w="3"/><text x="4.1427%" y="895.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="3.9147%" y="869" width="0.0440%" height="15" fill="rgb(230,99,41)" fg:x="178" fg:w="2"/><text x="4.1647%" y="879.50"></text></g><g><title>tokio::runtime::park::clone (2 samples, 0.04%)</title><rect x="3.9147%" y="853" width="0.0440%" height="15" fill="rgb(253,106,12)" fg:x="178" fg:w="2"/><text x="4.1647%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::increment_strong_count (2 samples, 0.04%)</title><rect x="3.9147%" y="837" width="0.0440%" height="15" fill="rgb(213,46,41)" fg:x="178" fg:w="2"/><text x="4.1647%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::increment_strong_count_in (2 samples, 0.04%)</title><rect x="3.9147%" y="821" width="0.0440%" height="15" fill="rgb(215,133,35)" fg:x="178" fg:w="2"/><text x="4.1647%" y="831.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="3.9147%" y="805" width="0.0440%" height="15" fill="rgb(213,28,5)" fg:x="178" fg:w="2"/><text x="4.1647%" y="815.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="3.9147%" y="789" width="0.0440%" height="15" fill="rgb(215,77,49)" fg:x="178" fg:w="2"/><text x="4.1647%" y="799.50"></text></g><g><title>&lt;futures_util::future::join_all::JoinAll&lt;F&gt; as core::future::future::Future&gt;::poll (54 samples, 1.19%)</title><rect x="2.8150%" y="965" width="1.1876%" height="15" fill="rgb(248,100,22)" fg:x="128" fg:w="54"/><text x="3.0650%" y="975.50"></text></g><g><title>&lt;futures_util::stream::stream::collect::Collect&lt;St,C&gt; as core::future::future::Future&gt;::poll (54 samples, 1.19%)</title><rect x="2.8150%" y="949" width="1.1876%" height="15" fill="rgb(208,67,9)" fg:x="128" fg:w="54"/><text x="3.0650%" y="959.50"></text></g><g><title>&lt;futures_util::stream::futures_ordered::FuturesOrdered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (50 samples, 1.10%)</title><rect x="2.9030%" y="933" width="1.0996%" height="15" fill="rgb(219,133,21)" fg:x="132" fg:w="50"/><text x="3.1530%" y="943.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (43 samples, 0.95%)</title><rect x="3.0570%" y="917" width="0.9457%" height="15" fill="rgb(246,46,29)" fg:x="139" fg:w="43"/><text x="3.3070%" y="927.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (43 samples, 0.95%)</title><rect x="3.0570%" y="901" width="0.9457%" height="15" fill="rgb(246,185,52)" fg:x="139" fg:w="43"/><text x="3.3070%" y="911.50"></text></g><g><title>futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;Fut&gt;::dequeue (2 samples, 0.04%)</title><rect x="3.9587%" y="885" width="0.0440%" height="15" fill="rgb(252,136,11)" fg:x="180" fg:w="2"/><text x="4.2087%" y="895.50"></text></g><g><title>futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;Fut&gt;::stub (1 samples, 0.02%)</title><rect x="3.9806%" y="869" width="0.0220%" height="15" fill="rgb(219,138,53)" fg:x="181" fg:w="1"/><text x="4.2306%" y="879.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::as_ptr (1 samples, 0.02%)</title><rect x="3.9806%" y="853" width="0.0220%" height="15" fill="rgb(211,51,23)" fg:x="181" fg:w="1"/><text x="4.2306%" y="863.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="4.0246%" y="693" width="0.0220%" height="15" fill="rgb(247,221,28)" fg:x="183" fg:w="1"/><text x="4.2746%" y="703.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="4.0246%" y="677" width="0.0220%" height="15" fill="rgb(251,222,45)" fg:x="183" fg:w="1"/><text x="4.2746%" y="687.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="4.0246%" y="661" width="0.0220%" height="15" fill="rgb(217,162,53)" fg:x="183" fg:w="1"/><text x="4.2746%" y="671.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="4.0246%" y="645" width="0.0220%" height="15" fill="rgb(229,93,14)" fg:x="183" fg:w="1"/><text x="4.2746%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="4.0246%" y="629" width="0.0220%" height="15" fill="rgb(209,67,49)" fg:x="183" fg:w="1"/><text x="4.2746%" y="639.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.02%)</title><rect x="4.0246%" y="613" width="0.0220%" height="15" fill="rgb(213,87,29)" fg:x="183" fg:w="1"/><text x="4.2746%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1 samples, 0.02%)</title><rect x="4.0246%" y="597" width="0.0220%" height="15" fill="rgb(205,151,52)" fg:x="183" fg:w="1"/><text x="4.2746%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.02%)</title><rect x="4.0246%" y="581" width="0.0220%" height="15" fill="rgb(253,215,39)" fg:x="183" fg:w="1"/><text x="4.2746%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.13%)</title><rect x="4.1346%" y="533" width="0.1320%" height="15" fill="rgb(221,220,41)" fg:x="188" fg:w="6"/><text x="4.3846%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.07%)</title><rect x="4.2006%" y="517" width="0.0660%" height="15" fill="rgb(218,133,21)" fg:x="191" fg:w="3"/><text x="4.4506%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.13%)</title><rect x="4.2885%" y="517" width="0.1320%" height="15" fill="rgb(221,193,43)" fg:x="195" fg:w="6"/><text x="4.5385%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (17 samples, 0.37%)</title><rect x="4.0686%" y="581" width="0.3739%" height="15" fill="rgb(240,128,52)" fg:x="185" fg:w="17"/><text x="4.3186%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (17 samples, 0.37%)</title><rect x="4.0686%" y="565" width="0.3739%" height="15" fill="rgb(253,114,12)" fg:x="185" fg:w="17"/><text x="4.3186%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (17 samples, 0.37%)</title><rect x="4.0686%" y="549" width="0.3739%" height="15" fill="rgb(215,223,47)" fg:x="185" fg:w="17"/><text x="4.3186%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8 samples, 0.18%)</title><rect x="4.2665%" y="533" width="0.1759%" height="15" fill="rgb(248,225,23)" fg:x="194" fg:w="8"/><text x="4.5165%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="4.4205%" y="517" width="0.0220%" height="15" fill="rgb(250,108,0)" fg:x="201" fg:w="1"/><text x="4.6705%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="4.5744%" y="469" width="0.0220%" height="15" fill="rgb(228,208,7)" fg:x="208" fg:w="1"/><text x="4.8244%" y="479.50"></text></g><g><title>hashbrown::map::make_hash (26 samples, 0.57%)</title><rect x="4.0466%" y="613" width="0.5718%" height="15" fill="rgb(244,45,10)" fg:x="184" fg:w="26"/><text x="4.2966%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (26 samples, 0.57%)</title><rect x="4.0466%" y="597" width="0.5718%" height="15" fill="rgb(207,125,25)" fg:x="184" fg:w="26"/><text x="4.2966%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (8 samples, 0.18%)</title><rect x="4.4425%" y="581" width="0.1759%" height="15" fill="rgb(210,195,18)" fg:x="202" fg:w="8"/><text x="4.6925%" y="591.50"></text></g><g><title>&lt;day16::Position as core::hash::Hash&gt;::hash (8 samples, 0.18%)</title><rect x="4.4425%" y="565" width="0.1759%" height="15" fill="rgb(249,80,12)" fg:x="202" fg:w="8"/><text x="4.6925%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (8 samples, 0.18%)</title><rect x="4.4425%" y="549" width="0.1759%" height="15" fill="rgb(221,65,9)" fg:x="202" fg:w="8"/><text x="4.6925%" y="559.50"></text></g><g><title>core::hash::Hasher::write_usize (8 samples, 0.18%)</title><rect x="4.4425%" y="533" width="0.1759%" height="15" fill="rgb(235,49,36)" fg:x="202" fg:w="8"/><text x="4.6925%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.18%)</title><rect x="4.4425%" y="517" width="0.1759%" height="15" fill="rgb(225,32,20)" fg:x="202" fg:w="8"/><text x="4.6925%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8 samples, 0.18%)</title><rect x="4.4425%" y="501" width="0.1759%" height="15" fill="rgb(215,141,46)" fg:x="202" fg:w="8"/><text x="4.6925%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.18%)</title><rect x="4.4425%" y="485" width="0.1759%" height="15" fill="rgb(250,160,47)" fg:x="202" fg:w="8"/><text x="4.6925%" y="495.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="4.5964%" y="469" width="0.0220%" height="15" fill="rgb(216,222,40)" fg:x="209" fg:w="1"/><text x="4.8464%" y="479.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (3 samples, 0.07%)</title><rect x="4.8384%" y="565" width="0.0660%" height="15" fill="rgb(234,217,39)" fg:x="220" fg:w="3"/><text x="5.0884%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.18%)</title><rect x="4.7724%" y="581" width="0.1759%" height="15" fill="rgb(207,178,40)" fg:x="217" fg:w="8"/><text x="5.0224%" y="591.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (2 samples, 0.04%)</title><rect x="4.9043%" y="565" width="0.0440%" height="15" fill="rgb(221,136,13)" fg:x="223" fg:w="2"/><text x="5.1543%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (1 samples, 0.02%)</title><rect x="4.9483%" y="581" width="0.0220%" height="15" fill="rgb(249,199,10)" fg:x="225" fg:w="1"/><text x="5.1983%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.02%)</title><rect x="4.9483%" y="565" width="0.0220%" height="15" fill="rgb(249,222,13)" fg:x="225" fg:w="1"/><text x="5.1983%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.02%)</title><rect x="4.9483%" y="549" width="0.0220%" height="15" fill="rgb(244,185,38)" fg:x="225" fg:w="1"/><text x="5.1983%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.02%)</title><rect x="4.9483%" y="533" width="0.0220%" height="15" fill="rgb(236,202,9)" fg:x="225" fg:w="1"/><text x="5.1983%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="4.9483%" y="517" width="0.0220%" height="15" fill="rgb(250,229,37)" fg:x="225" fg:w="1"/><text x="5.1983%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (2 samples, 0.04%)</title><rect x="4.9703%" y="581" width="0.0440%" height="15" fill="rgb(206,174,23)" fg:x="226" fg:w="2"/><text x="5.2203%" y="591.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="4.9923%" y="565" width="0.0220%" height="15" fill="rgb(211,33,43)" fg:x="227" fg:w="1"/><text x="5.2423%" y="575.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (1 samples, 0.02%)</title><rect x="4.9923%" y="549" width="0.0220%" height="15" fill="rgb(245,58,50)" fg:x="227" fg:w="1"/><text x="5.2423%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (4 samples, 0.09%)</title><rect x="5.0143%" y="581" width="0.0880%" height="15" fill="rgb(244,68,36)" fg:x="228" fg:w="4"/><text x="5.2643%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (4 samples, 0.09%)</title><rect x="5.0143%" y="565" width="0.0880%" height="15" fill="rgb(232,229,15)" fg:x="228" fg:w="4"/><text x="5.2643%" y="575.50"></text></g><g><title>hashbrown::raw::is_full (4 samples, 0.09%)</title><rect x="5.0143%" y="549" width="0.0880%" height="15" fill="rgb(254,30,23)" fg:x="228" fg:w="4"/><text x="5.2643%" y="559.50"></text></g><g><title>hashbrown::raw::h2 (5 samples, 0.11%)</title><rect x="5.1023%" y="581" width="0.1100%" height="15" fill="rgb(235,160,14)" fg:x="232" fg:w="5"/><text x="5.3523%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (28 samples, 0.62%)</title><rect x="4.6184%" y="613" width="0.6158%" height="15" fill="rgb(212,155,44)" fg:x="210" fg:w="28"/><text x="4.8684%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_or_find_insert_slot_inner (28 samples, 0.62%)</title><rect x="4.6184%" y="597" width="0.6158%" height="15" fill="rgb(226,2,50)" fg:x="210" fg:w="28"/><text x="4.8684%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="5.2122%" y="581" width="0.0220%" height="15" fill="rgb(234,177,6)" fg:x="237" fg:w="1"/><text x="5.4622%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="5.2122%" y="565" width="0.0220%" height="15" fill="rgb(217,24,9)" fg:x="237" fg:w="1"/><text x="5.4622%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (5 samples, 0.11%)</title><rect x="5.2342%" y="581" width="0.1100%" height="15" fill="rgb(220,13,46)" fg:x="238" fg:w="5"/><text x="5.4842%" y="591.50"></text></g><g><title>core::ptr::write (5 samples, 0.11%)</title><rect x="5.2342%" y="565" width="0.1100%" height="15" fill="rgb(239,221,27)" fg:x="238" fg:w="5"/><text x="5.4842%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (6 samples, 0.13%)</title><rect x="5.2342%" y="597" width="0.1320%" height="15" fill="rgb(222,198,25)" fg:x="238" fg:w="6"/><text x="5.4842%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="5.3442%" y="581" width="0.0220%" height="15" fill="rgb(211,99,13)" fg:x="243" fg:w="1"/><text x="5.5942%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.02%)</title><rect x="5.3442%" y="565" width="0.0220%" height="15" fill="rgb(232,111,31)" fg:x="243" fg:w="1"/><text x="5.5942%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="5.3442%" y="549" width="0.0220%" height="15" fill="rgb(245,82,37)" fg:x="243" fg:w="1"/><text x="5.5942%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by_key (63 samples, 1.39%)</title><rect x="4.0026%" y="965" width="1.3855%" height="15" fill="rgb(227,149,46)" fg:x="182" fg:w="63"/><text x="4.2526%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by (63 samples, 1.39%)</title><rect x="4.0026%" y="949" width="1.3855%" height="15" fill="rgb(218,36,50)" fg:x="182" fg:w="63"/><text x="4.2526%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (63 samples, 1.39%)</title><rect x="4.0026%" y="933" width="1.3855%" height="15" fill="rgb(226,80,48)" fg:x="182" fg:w="63"/><text x="4.2526%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (63 samples, 1.39%)</title><rect x="4.0026%" y="917" width="1.3855%" height="15" fill="rgb(238,224,15)" fg:x="182" fg:w="63"/><text x="4.2526%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (63 samples, 1.39%)</title><rect x="4.0026%" y="901" width="1.3855%" height="15" fill="rgb(241,136,10)" fg:x="182" fg:w="63"/><text x="4.2526%" y="911.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (63 samples, 1.39%)</title><rect x="4.0026%" y="885" width="1.3855%" height="15" fill="rgb(208,32,45)" fg:x="182" fg:w="63"/><text x="4.2526%" y="895.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (63 samples, 1.39%)</title><rect x="4.0026%" y="869" width="1.3855%" height="15" fill="rgb(207,135,9)" fg:x="182" fg:w="63"/><text x="4.2526%" y="879.50"></text></g><g><title>day16::main::_{{closure}}::_{{closure}} (63 samples, 1.39%)</title><rect x="4.0026%" y="853" width="1.3855%" height="15" fill="rgb(206,86,44)" fg:x="182" fg:w="63"/><text x="4.2526%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (63 samples, 1.39%)</title><rect x="4.0026%" y="837" width="1.3855%" height="15" fill="rgb(245,177,15)" fg:x="182" fg:w="63"/><text x="4.2526%" y="847.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (63 samples, 1.39%)</title><rect x="4.0026%" y="821" width="1.3855%" height="15" fill="rgb(206,64,50)" fg:x="182" fg:w="63"/><text x="4.2526%" y="831.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (63 samples, 1.39%)</title><rect x="4.0026%" y="805" width="1.3855%" height="15" fill="rgb(234,36,40)" fg:x="182" fg:w="63"/><text x="4.2526%" y="815.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (63 samples, 1.39%)</title><rect x="4.0026%" y="789" width="1.3855%" height="15" fill="rgb(213,64,8)" fg:x="182" fg:w="63"/><text x="4.2526%" y="799.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (63 samples, 1.39%)</title><rect x="4.0026%" y="773" width="1.3855%" height="15" fill="rgb(210,75,36)" fg:x="182" fg:w="63"/><text x="4.2526%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (63 samples, 1.39%)</title><rect x="4.0026%" y="757" width="1.3855%" height="15" fill="rgb(229,88,21)" fg:x="182" fg:w="63"/><text x="4.2526%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (63 samples, 1.39%)</title><rect x="4.0026%" y="741" width="1.3855%" height="15" fill="rgb(252,204,47)" fg:x="182" fg:w="63"/><text x="4.2526%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (63 samples, 1.39%)</title><rect x="4.0026%" y="725" width="1.3855%" height="15" fill="rgb(208,77,27)" fg:x="182" fg:w="63"/><text x="4.2526%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (63 samples, 1.39%)</title><rect x="4.0026%" y="709" width="1.3855%" height="15" fill="rgb(221,76,26)" fg:x="182" fg:w="63"/><text x="4.2526%" y="719.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (61 samples, 1.34%)</title><rect x="4.0466%" y="693" width="1.3415%" height="15" fill="rgb(225,139,18)" fg:x="184" fg:w="61"/><text x="4.2966%" y="703.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (61 samples, 1.34%)</title><rect x="4.0466%" y="677" width="1.3415%" height="15" fill="rgb(230,137,11)" fg:x="184" fg:w="61"/><text x="4.2966%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (61 samples, 1.34%)</title><rect x="4.0466%" y="661" width="1.3415%" height="15" fill="rgb(212,28,1)" fg:x="184" fg:w="61"/><text x="4.2966%" y="671.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (61 samples, 1.34%)</title><rect x="4.0466%" y="645" width="1.3415%" height="15" fill="rgb(248,164,17)" fg:x="184" fg:w="61"/><text x="4.2966%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (61 samples, 1.34%)</title><rect x="4.0466%" y="629" width="1.3415%" height="15" fill="rgb(222,171,42)" fg:x="184" fg:w="61"/><text x="4.2966%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (7 samples, 0.15%)</title><rect x="5.2342%" y="613" width="0.1539%" height="15" fill="rgb(243,84,45)" fg:x="238" fg:w="7"/><text x="5.4842%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (1 samples, 0.02%)</title><rect x="5.3662%" y="597" width="0.0220%" height="15" fill="rgb(252,49,23)" fg:x="244" fg:w="1"/><text x="5.6162%" y="607.50"></text></g><g><title>tokio::runtime::coop::budget (121 samples, 2.66%)</title><rect x="2.7491%" y="1029" width="2.6611%" height="15" fill="rgb(215,19,7)" fg:x="125" fg:w="121"/><text x="2.9991%" y="1039.50">to..</text></g><g><title>tokio::runtime::coop::with_budget (119 samples, 2.62%)</title><rect x="2.7931%" y="1013" width="2.6171%" height="15" fill="rgb(238,81,41)" fg:x="127" fg:w="119"/><text x="3.0431%" y="1023.50">to..</text></g><g><title>tokio::runtime::park::CachedParkThread::block_on::_{{closure}} (119 samples, 2.62%)</title><rect x="2.7931%" y="997" width="2.6171%" height="15" fill="rgb(210,199,37)" fg:x="127" fg:w="119"/><text x="3.0431%" y="1007.50">to..</text></g><g><title>day16::main::_{{closure}} (119 samples, 2.62%)</title><rect x="2.7931%" y="981" width="2.6171%" height="15" fill="rgb(244,192,49)" fg:x="127" fg:w="119"/><text x="3.0431%" y="991.50">da..</text></g><g><title>day16::fill_grid (1 samples, 0.02%)</title><rect x="5.3882%" y="965" width="0.0220%" height="15" fill="rgb(226,211,11)" fg:x="245" fg:w="1"/><text x="5.6382%" y="975.50"></text></g><g><title>day16::SparseGrid&lt;T&gt;::put (1 samples, 0.02%)</title><rect x="5.3882%" y="949" width="0.0220%" height="15" fill="rgb(236,162,54)" fg:x="245" fg:w="1"/><text x="5.6382%" y="959.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.02%)</title><rect x="5.3882%" y="933" width="0.0220%" height="15" fill="rgb(220,229,9)" fg:x="245" fg:w="1"/><text x="5.6382%" y="943.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="5.3882%" y="917" width="0.0220%" height="15" fill="rgb(250,87,22)" fg:x="245" fg:w="1"/><text x="5.6382%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="5.3882%" y="901" width="0.0220%" height="15" fill="rgb(239,43,17)" fg:x="245" fg:w="1"/><text x="5.6382%" y="911.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="5.3882%" y="885" width="0.0220%" height="15" fill="rgb(231,177,25)" fg:x="245" fg:w="1"/><text x="5.6382%" y="895.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="5.3882%" y="869" width="0.0220%" height="15" fill="rgb(219,179,1)" fg:x="245" fg:w="1"/><text x="5.6382%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.02%)</title><rect x="5.3882%" y="853" width="0.0220%" height="15" fill="rgb(238,219,53)" fg:x="245" fg:w="1"/><text x="5.6382%" y="863.50"></text></g><g><title>&lt;day16::Position as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="5.3882%" y="837" width="0.0220%" height="15" fill="rgb(232,167,36)" fg:x="245" fg:w="1"/><text x="5.6382%" y="847.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.02%)</title><rect x="5.3882%" y="821" width="0.0220%" height="15" fill="rgb(244,19,51)" fg:x="245" fg:w="1"/><text x="5.6382%" y="831.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.02%)</title><rect x="5.3882%" y="805" width="0.0220%" height="15" fill="rgb(224,6,22)" fg:x="245" fg:w="1"/><text x="5.6382%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="5.3882%" y="789" width="0.0220%" height="15" fill="rgb(224,145,5)" fg:x="245" fg:w="1"/><text x="5.6382%" y="799.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="5.3882%" y="773" width="0.0220%" height="15" fill="rgb(234,130,49)" fg:x="245" fg:w="1"/><text x="5.6382%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="5.3882%" y="757" width="0.0220%" height="15" fill="rgb(254,6,2)" fg:x="245" fg:w="1"/><text x="5.6382%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="5.3882%" y="741" width="0.0220%" height="15" fill="rgb(208,96,46)" fg:x="245" fg:w="1"/><text x="5.6382%" y="751.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="5.3882%" y="725" width="0.0220%" height="15" fill="rgb(239,3,39)" fg:x="245" fg:w="1"/><text x="5.6382%" y="735.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::park (1 samples, 0.02%)</title><rect x="5.4102%" y="1029" width="0.0220%" height="15" fill="rgb(233,210,1)" fg:x="246" fg:w="1"/><text x="5.6602%" y="1039.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (7 samples, 0.15%)</title><rect x="5.4322%" y="965" width="0.1539%" height="15" fill="rgb(244,137,37)" fg:x="247" fg:w="7"/><text x="5.6822%" y="975.50"></text></g><g><title>day16 (259 samples, 5.70%)</title><rect x="0.0000%" y="1413" width="5.6961%" height="15" fill="rgb(240,136,2)" fg:x="0" fg:w="259"/><text x="0.2500%" y="1423.50">day16</text></g><g><title>_start (142 samples, 3.12%)</title><rect x="2.5731%" y="1397" width="3.1229%" height="15" fill="rgb(239,18,37)" fg:x="117" fg:w="142"/><text x="2.8231%" y="1407.50">_st..</text></g><g><title>__libc_start_main (142 samples, 3.12%)</title><rect x="2.5731%" y="1381" width="3.1229%" height="15" fill="rgb(218,185,22)" fg:x="117" fg:w="142"/><text x="2.8231%" y="1391.50">__l..</text></g><g><title>[libc.so.6] (142 samples, 3.12%)</title><rect x="2.5731%" y="1365" width="3.1229%" height="15" fill="rgb(225,218,4)" fg:x="117" fg:w="142"/><text x="2.8231%" y="1375.50">[li..</text></g><g><title>main (142 samples, 3.12%)</title><rect x="2.5731%" y="1349" width="3.1229%" height="15" fill="rgb(230,182,32)" fg:x="117" fg:w="142"/><text x="2.8231%" y="1359.50">main</text></g><g><title>std::rt::lang_start_internal (142 samples, 3.12%)</title><rect x="2.5731%" y="1333" width="3.1229%" height="15" fill="rgb(242,56,43)" fg:x="117" fg:w="142"/><text x="2.8231%" y="1343.50">std..</text></g><g><title>std::panic::catch_unwind (142 samples, 3.12%)</title><rect x="2.5731%" y="1317" width="3.1229%" height="15" fill="rgb(233,99,24)" fg:x="117" fg:w="142"/><text x="2.8231%" y="1327.50">std..</text></g><g><title>std::panicking::try (142 samples, 3.12%)</title><rect x="2.5731%" y="1301" width="3.1229%" height="15" fill="rgb(234,209,42)" fg:x="117" fg:w="142"/><text x="2.8231%" y="1311.50">std..</text></g><g><title>std::panicking::try::do_call (142 samples, 3.12%)</title><rect x="2.5731%" y="1285" width="3.1229%" height="15" fill="rgb(227,7,12)" fg:x="117" fg:w="142"/><text x="2.8231%" y="1295.50">std..</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (142 samples, 3.12%)</title><rect x="2.5731%" y="1269" width="3.1229%" height="15" fill="rgb(245,203,43)" fg:x="117" fg:w="142"/><text x="2.8231%" y="1279.50">std..</text></g><g><title>std::panic::catch_unwind (142 samples, 3.12%)</title><rect x="2.5731%" y="1253" width="3.1229%" height="15" fill="rgb(238,205,33)" fg:x="117" fg:w="142"/><text x="2.8231%" y="1263.50">std..</text></g><g><title>std::panicking::try (142 samples, 3.12%)</title><rect x="2.5731%" y="1237" width="3.1229%" height="15" fill="rgb(231,56,7)" fg:x="117" fg:w="142"/><text x="2.8231%" y="1247.50">std..</text></g><g><title>std::panicking::try::do_call (142 samples, 3.12%)</title><rect x="2.5731%" y="1221" width="3.1229%" height="15" fill="rgb(244,186,29)" fg:x="117" fg:w="142"/><text x="2.8231%" y="1231.50">std..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (142 samples, 3.12%)</title><rect x="2.5731%" y="1205" width="3.1229%" height="15" fill="rgb(234,111,31)" fg:x="117" fg:w="142"/><text x="2.8231%" y="1215.50">cor..</text></g><g><title>std::rt::lang_start::_{{closure}} (142 samples, 3.12%)</title><rect x="2.5731%" y="1189" width="3.1229%" height="15" fill="rgb(241,149,10)" fg:x="117" fg:w="142"/><text x="2.8231%" y="1199.50">std..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (142 samples, 3.12%)</title><rect x="2.5731%" y="1173" width="3.1229%" height="15" fill="rgb(249,206,44)" fg:x="117" fg:w="142"/><text x="2.8231%" y="1183.50">std..</text></g><g><title>core::ops::function::FnOnce::call_once (142 samples, 3.12%)</title><rect x="2.5731%" y="1157" width="3.1229%" height="15" fill="rgb(251,153,30)" fg:x="117" fg:w="142"/><text x="2.8231%" y="1167.50">cor..</text></g><g><title>day16::main (142 samples, 3.12%)</title><rect x="2.5731%" y="1141" width="3.1229%" height="15" fill="rgb(239,152,38)" fg:x="117" fg:w="142"/><text x="2.8231%" y="1151.50">day..</text></g><g><title>tokio::runtime::runtime::Runtime::block_on (134 samples, 2.95%)</title><rect x="2.7491%" y="1125" width="2.9470%" height="15" fill="rgb(249,139,47)" fg:x="125" fg:w="134"/><text x="2.9991%" y="1135.50">to..</text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on (134 samples, 2.95%)</title><rect x="2.7491%" y="1109" width="2.9470%" height="15" fill="rgb(244,64,35)" fg:x="125" fg:w="134"/><text x="2.9991%" y="1119.50">to..</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (134 samples, 2.95%)</title><rect x="2.7491%" y="1093" width="2.9470%" height="15" fill="rgb(216,46,15)" fg:x="125" fg:w="134"/><text x="2.9991%" y="1103.50">to..</text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on::_{{closure}} (134 samples, 2.95%)</title><rect x="2.7491%" y="1077" width="2.9470%" height="15" fill="rgb(250,74,19)" fg:x="125" fg:w="134"/><text x="2.9991%" y="1087.50">to..</text></g><g><title>tokio::runtime::context::blocking::BlockingRegionGuard::block_on (134 samples, 2.95%)</title><rect x="2.7491%" y="1061" width="2.9470%" height="15" fill="rgb(249,42,33)" fg:x="125" fg:w="134"/><text x="2.9991%" y="1071.50">to..</text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (134 samples, 2.95%)</title><rect x="2.7491%" y="1045" width="2.9470%" height="15" fill="rgb(242,149,17)" fg:x="125" fg:w="134"/><text x="2.9991%" y="1055.50">to..</text></g><g><title>tokio::runtime::park::Inner::park (12 samples, 0.26%)</title><rect x="5.4322%" y="1029" width="0.2639%" height="15" fill="rgb(244,29,21)" fg:x="247" fg:w="12"/><text x="5.6822%" y="1039.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (12 samples, 0.26%)</title><rect x="5.4322%" y="1013" width="0.2639%" height="15" fill="rgb(220,130,37)" fg:x="247" fg:w="12"/><text x="5.6822%" y="1023.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (12 samples, 0.26%)</title><rect x="5.4322%" y="997" width="0.2639%" height="15" fill="rgb(211,67,2)" fg:x="247" fg:w="12"/><text x="5.6822%" y="1007.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (12 samples, 0.26%)</title><rect x="5.4322%" y="981" width="0.2639%" height="15" fill="rgb(235,68,52)" fg:x="247" fg:w="12"/><text x="5.6822%" y="991.50"></text></g><g><title>parking_lot_core::parking_lot::park (5 samples, 0.11%)</title><rect x="5.5861%" y="965" width="0.1100%" height="15" fill="rgb(246,142,3)" fg:x="254" fg:w="5"/><text x="5.8361%" y="975.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (5 samples, 0.11%)</title><rect x="5.5861%" y="949" width="0.1100%" height="15" fill="rgb(241,25,7)" fg:x="254" fg:w="5"/><text x="5.8361%" y="959.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (5 samples, 0.11%)</title><rect x="5.5861%" y="933" width="0.1100%" height="15" fill="rgb(242,119,39)" fg:x="254" fg:w="5"/><text x="5.8361%" y="943.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (5 samples, 0.11%)</title><rect x="5.5861%" y="917" width="0.1100%" height="15" fill="rgb(241,98,45)" fg:x="254" fg:w="5"/><text x="5.8361%" y="927.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (4 samples, 0.09%)</title><rect x="5.6081%" y="901" width="0.0880%" height="15" fill="rgb(254,28,30)" fg:x="255" fg:w="4"/><text x="5.8581%" y="911.50"></text></g><g><title>syscall (4 samples, 0.09%)</title><rect x="5.6081%" y="885" width="0.0880%" height="15" fill="rgb(241,142,54)" fg:x="255" fg:w="4"/><text x="5.8581%" y="895.50"></text></g><g><title>[unknown] (3 samples, 0.07%)</title><rect x="5.6301%" y="869" width="0.0660%" height="15" fill="rgb(222,85,15)" fg:x="256" fg:w="3"/><text x="5.8801%" y="879.50"></text></g><g><title>[unknown] (3 samples, 0.07%)</title><rect x="5.6301%" y="853" width="0.0660%" height="15" fill="rgb(210,85,47)" fg:x="256" fg:w="3"/><text x="5.8801%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="5.6521%" y="837" width="0.0440%" height="15" fill="rgb(224,206,25)" fg:x="257" fg:w="2"/><text x="5.9021%" y="847.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="5.6521%" y="821" width="0.0440%" height="15" fill="rgb(243,201,19)" fg:x="257" fg:w="2"/><text x="5.9021%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="5.6741%" y="805" width="0.0220%" height="15" fill="rgb(236,59,4)" fg:x="258" fg:w="1"/><text x="5.9241%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="5.6741%" y="789" width="0.0220%" height="15" fill="rgb(254,179,45)" fg:x="258" fg:w="1"/><text x="5.9241%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="5.6741%" y="773" width="0.0220%" height="15" fill="rgb(226,14,10)" fg:x="258" fg:w="1"/><text x="5.9241%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="5.6741%" y="757" width="0.0220%" height="15" fill="rgb(244,27,41)" fg:x="258" fg:w="1"/><text x="5.9241%" y="767.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="5.6961%" y="1365" width="0.0440%" height="15" fill="rgb(235,35,32)" fg:x="259" fg:w="2"/><text x="5.9461%" y="1375.50"></text></g><g><title>cfree (2 samples, 0.04%)</title><rect x="5.6961%" y="1349" width="0.0440%" height="15" fill="rgb(218,68,31)" fg:x="259" fg:w="2"/><text x="5.9461%" y="1359.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="5.6961%" y="1333" width="0.0440%" height="15" fill="rgb(207,120,37)" fg:x="259" fg:w="2"/><text x="5.9461%" y="1343.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="5.6961%" y="1317" width="0.0440%" height="15" fill="rgb(227,98,0)" fg:x="259" fg:w="2"/><text x="5.9461%" y="1327.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (3 samples, 0.07%)</title><rect x="5.8280%" y="1077" width="0.0660%" height="15" fill="rgb(207,7,3)" fg:x="265" fg:w="3"/><text x="6.0780%" y="1087.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_one (3 samples, 0.07%)</title><rect x="5.8280%" y="1061" width="0.0660%" height="15" fill="rgb(206,98,19)" fg:x="265" fg:w="3"/><text x="6.0780%" y="1071.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (2 samples, 0.04%)</title><rect x="5.8500%" y="1045" width="0.0440%" height="15" fill="rgb(217,5,26)" fg:x="266" fg:w="2"/><text x="6.1000%" y="1055.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.04%)</title><rect x="5.8500%" y="1029" width="0.0440%" height="15" fill="rgb(235,190,38)" fg:x="266" fg:w="2"/><text x="6.1000%" y="1039.50"></text></g><g><title>clock_gettime (2 samples, 0.04%)</title><rect x="5.8500%" y="1013" width="0.0440%" height="15" fill="rgb(247,86,24)" fg:x="266" fg:w="2"/><text x="6.1000%" y="1023.50"></text></g><g><title>core::mem::drop (7 samples, 0.15%)</title><rect x="5.8280%" y="1157" width="0.1539%" height="15" fill="rgb(205,101,16)" fg:x="265" fg:w="7"/><text x="6.0780%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::blocking::pool::Shared&gt;&gt; (7 samples, 0.15%)</title><rect x="5.8280%" y="1141" width="0.1539%" height="15" fill="rgb(246,168,33)" fg:x="265" fg:w="7"/><text x="6.0780%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::blocking::pool::Shared&gt;&gt; (7 samples, 0.15%)</title><rect x="5.8280%" y="1125" width="0.1539%" height="15" fill="rgb(231,114,1)" fg:x="265" fg:w="7"/><text x="6.0780%" y="1135.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.15%)</title><rect x="5.8280%" y="1109" width="0.1539%" height="15" fill="rgb(207,184,53)" fg:x="265" fg:w="7"/><text x="6.0780%" y="1119.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (7 samples, 0.15%)</title><rect x="5.8280%" y="1093" width="0.1539%" height="15" fill="rgb(224,95,51)" fg:x="265" fg:w="7"/><text x="6.0780%" y="1103.50"></text></g><g><title>syscall (4 samples, 0.09%)</title><rect x="5.8940%" y="1077" width="0.0880%" height="15" fill="rgb(212,188,45)" fg:x="268" fg:w="4"/><text x="6.1440%" y="1087.50"></text></g><g><title>[unknown] (3 samples, 0.07%)</title><rect x="5.9160%" y="1061" width="0.0660%" height="15" fill="rgb(223,154,38)" fg:x="269" fg:w="3"/><text x="6.1660%" y="1071.50"></text></g><g><title>[unknown] (3 samples, 0.07%)</title><rect x="5.9160%" y="1045" width="0.0660%" height="15" fill="rgb(251,22,52)" fg:x="269" fg:w="3"/><text x="6.1660%" y="1055.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="5.9380%" y="1029" width="0.0440%" height="15" fill="rgb(229,209,22)" fg:x="270" fg:w="2"/><text x="6.1880%" y="1039.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="5.9380%" y="1013" width="0.0440%" height="15" fill="rgb(234,138,34)" fg:x="270" fg:w="2"/><text x="6.1880%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="5.9600%" y="997" width="0.0220%" height="15" fill="rgb(212,95,11)" fg:x="271" fg:w="1"/><text x="6.2100%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="5.9600%" y="981" width="0.0220%" height="15" fill="rgb(240,179,47)" fg:x="271" fg:w="1"/><text x="6.2100%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (3 samples, 0.07%)</title><rect x="6.0040%" y="1093" width="0.0660%" height="15" fill="rgb(240,163,11)" fg:x="273" fg:w="3"/><text x="6.2540%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.07%)</title><rect x="6.0040%" y="1077" width="0.0660%" height="15" fill="rgb(236,37,12)" fg:x="273" fg:w="3"/><text x="6.2540%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="6.0479%" y="1061" width="0.0220%" height="15" fill="rgb(232,164,16)" fg:x="275" fg:w="1"/><text x="6.2979%" y="1071.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (1 samples, 0.02%)</title><rect x="6.0699%" y="1045" width="0.0220%" height="15" fill="rgb(244,205,15)" fg:x="276" fg:w="1"/><text x="6.3199%" y="1055.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (1 samples, 0.02%)</title><rect x="6.0699%" y="1029" width="0.0220%" height="15" fill="rgb(223,117,47)" fg:x="276" fg:w="1"/><text x="6.3199%" y="1039.50"></text></g><g><title>syscall (1 samples, 0.02%)</title><rect x="6.0699%" y="1013" width="0.0220%" height="15" fill="rgb(244,107,35)" fg:x="276" fg:w="1"/><text x="6.3199%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="6.0699%" y="997" width="0.0220%" height="15" fill="rgb(205,140,8)" fg:x="276" fg:w="1"/><text x="6.3199%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="6.0699%" y="981" width="0.0220%" height="15" fill="rgb(228,84,46)" fg:x="276" fg:w="1"/><text x="6.3199%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="6.0699%" y="965" width="0.0220%" height="15" fill="rgb(254,188,9)" fg:x="276" fg:w="1"/><text x="6.3199%" y="975.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.02%)</title><rect x="6.0919%" y="1045" width="0.0220%" height="15" fill="rgb(206,112,54)" fg:x="277" fg:w="1"/><text x="6.3419%" y="1055.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="6.0919%" y="1029" width="0.0220%" height="15" fill="rgb(216,84,49)" fg:x="277" fg:w="1"/><text x="6.3419%" y="1039.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="6.0919%" y="1013" width="0.0220%" height="15" fill="rgb(214,194,35)" fg:x="277" fg:w="1"/><text x="6.3419%" y="1023.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="6.0919%" y="997" width="0.0220%" height="15" fill="rgb(249,28,3)" fg:x="277" fg:w="1"/><text x="6.3419%" y="1007.50"></text></g><g><title>parking_lot_core::parking_lot::get_hashtable (1 samples, 0.02%)</title><rect x="6.1139%" y="1029" width="0.0220%" height="15" fill="rgb(222,56,52)" fg:x="278" fg:w="1"/><text x="6.3639%" y="1039.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (8 samples, 0.18%)</title><rect x="5.9820%" y="1157" width="0.1759%" height="15" fill="rgb(245,217,50)" fg:x="272" fg:w="8"/><text x="6.2320%" y="1167.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (8 samples, 0.18%)</title><rect x="5.9820%" y="1141" width="0.1759%" height="15" fill="rgb(213,201,24)" fg:x="272" fg:w="8"/><text x="6.2320%" y="1151.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (8 samples, 0.18%)</title><rect x="5.9820%" y="1125" width="0.1759%" height="15" fill="rgb(248,116,28)" fg:x="272" fg:w="8"/><text x="6.2320%" y="1135.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (8 samples, 0.18%)</title><rect x="5.9820%" y="1109" width="0.1759%" height="15" fill="rgb(219,72,43)" fg:x="272" fg:w="8"/><text x="6.2320%" y="1119.50"></text></g><g><title>parking_lot_core::parking_lot::park (4 samples, 0.09%)</title><rect x="6.0699%" y="1093" width="0.0880%" height="15" fill="rgb(209,138,14)" fg:x="276" fg:w="4"/><text x="6.3199%" y="1103.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (4 samples, 0.09%)</title><rect x="6.0699%" y="1077" width="0.0880%" height="15" fill="rgb(222,18,33)" fg:x="276" fg:w="4"/><text x="6.3199%" y="1087.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (4 samples, 0.09%)</title><rect x="6.0699%" y="1061" width="0.0880%" height="15" fill="rgb(213,199,7)" fg:x="276" fg:w="4"/><text x="6.3199%" y="1071.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (2 samples, 0.04%)</title><rect x="6.1139%" y="1045" width="0.0440%" height="15" fill="rgb(250,110,10)" fg:x="278" fg:w="2"/><text x="6.3639%" y="1055.50"></text></g><g><title>parking_lot_core::parking_lot::hash (1 samples, 0.02%)</title><rect x="6.1359%" y="1029" width="0.0220%" height="15" fill="rgb(248,123,6)" fg:x="279" fg:w="1"/><text x="6.3859%" y="1039.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="6.2459%" y="501" width="0.0440%" height="15" fill="rgb(206,91,31)" fg:x="284" fg:w="2"/><text x="6.4959%" y="511.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::try_initialize (6 samples, 0.13%)</title><rect x="6.2239%" y="661" width="0.1320%" height="15" fill="rgb(211,154,13)" fg:x="283" fg:w="6"/><text x="6.4739%" y="671.50"></text></g><g><title>std::sys::common::thread_local::lazy::LazyKeyInner&lt;T&gt;::initialize (6 samples, 0.13%)</title><rect x="6.2239%" y="645" width="0.1320%" height="15" fill="rgb(225,148,7)" fg:x="283" fg:w="6"/><text x="6.4739%" y="655.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit::_{{closure}} (6 samples, 0.13%)</title><rect x="6.2239%" y="629" width="0.1320%" height="15" fill="rgb(220,160,43)" fg:x="283" fg:w="6"/><text x="6.4739%" y="639.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__init (6 samples, 0.13%)</title><rect x="6.2239%" y="613" width="0.1320%" height="15" fill="rgb(213,52,39)" fg:x="283" fg:w="6"/><text x="6.4739%" y="623.50"></text></g><g><title>std::sys::unix::rand::hashmap_random_keys (6 samples, 0.13%)</title><rect x="6.2239%" y="597" width="0.1320%" height="15" fill="rgb(243,137,7)" fg:x="283" fg:w="6"/><text x="6.4739%" y="607.50"></text></g><g><title>std::sys::unix::rand::imp::fill_bytes (6 samples, 0.13%)</title><rect x="6.2239%" y="581" width="0.1320%" height="15" fill="rgb(230,79,13)" fg:x="283" fg:w="6"/><text x="6.4739%" y="591.50"></text></g><g><title>std::sys::unix::rand::imp::getrandom_fill_bytes (6 samples, 0.13%)</title><rect x="6.2239%" y="565" width="0.1320%" height="15" fill="rgb(247,105,23)" fg:x="283" fg:w="6"/><text x="6.4739%" y="575.50"></text></g><g><title>std::sys::unix::rand::imp::getrandom (6 samples, 0.13%)</title><rect x="6.2239%" y="549" width="0.1320%" height="15" fill="rgb(223,179,41)" fg:x="283" fg:w="6"/><text x="6.4739%" y="559.50"></text></g><g><title>std::sys::unix::rand::imp::getrandom::getrandom (6 samples, 0.13%)</title><rect x="6.2239%" y="533" width="0.1320%" height="15" fill="rgb(218,9,34)" fg:x="283" fg:w="6"/><text x="6.4739%" y="543.50"></text></g><g><title>getrandom (6 samples, 0.13%)</title><rect x="6.2239%" y="517" width="0.1320%" height="15" fill="rgb(222,106,8)" fg:x="283" fg:w="6"/><text x="6.4739%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.07%)</title><rect x="6.2899%" y="501" width="0.0660%" height="15" fill="rgb(211,220,0)" fg:x="286" fg:w="3"/><text x="6.5399%" y="511.50"></text></g><g><title>[unknown] (3 samples, 0.07%)</title><rect x="6.2899%" y="485" width="0.0660%" height="15" fill="rgb(229,52,16)" fg:x="286" fg:w="3"/><text x="6.5399%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="6.3119%" y="469" width="0.0440%" height="15" fill="rgb(212,155,18)" fg:x="287" fg:w="2"/><text x="6.5619%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="6.3338%" y="453" width="0.0220%" height="15" fill="rgb(242,21,14)" fg:x="288" fg:w="1"/><text x="6.5838%" y="463.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (7 samples, 0.15%)</title><rect x="6.2239%" y="869" width="0.1539%" height="15" fill="rgb(222,19,48)" fg:x="283" fg:w="7"/><text x="6.4739%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7 samples, 0.15%)</title><rect x="6.2239%" y="853" width="0.1539%" height="15" fill="rgb(232,45,27)" fg:x="283" fg:w="7"/><text x="6.4739%" y="863.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime::_{{closure}} (7 samples, 0.15%)</title><rect x="6.2239%" y="837" width="0.1539%" height="15" fill="rgb(249,103,42)" fg:x="283" fg:w="7"/><text x="6.4739%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (7 samples, 0.15%)</title><rect x="6.2239%" y="821" width="0.1539%" height="15" fill="rgb(246,81,33)" fg:x="283" fg:w="7"/><text x="6.4739%" y="831.50"></text></g><g><title>core::ops::function::FnOnce::call_once (7 samples, 0.15%)</title><rect x="6.2239%" y="805" width="0.1539%" height="15" fill="rgb(252,33,42)" fg:x="283" fg:w="7"/><text x="6.4739%" y="815.50"></text></g><g><title>tokio::util::rand::FastRand::new (7 samples, 0.15%)</title><rect x="6.2239%" y="789" width="0.1539%" height="15" fill="rgb(209,212,41)" fg:x="283" fg:w="7"/><text x="6.4739%" y="799.50"></text></g><g><title>tokio::util::rand::RngSeed::new (7 samples, 0.15%)</title><rect x="6.2239%" y="773" width="0.1539%" height="15" fill="rgb(207,154,6)" fg:x="283" fg:w="7"/><text x="6.4739%" y="783.50"></text></g><g><title>tokio::loom::std::rand::seed (7 samples, 0.15%)</title><rect x="6.2239%" y="757" width="0.1539%" height="15" fill="rgb(223,64,47)" fg:x="283" fg:w="7"/><text x="6.4739%" y="767.50"></text></g><g><title>std::collections::hash::map::RandomState::new (7 samples, 0.15%)</title><rect x="6.2239%" y="741" width="0.1539%" height="15" fill="rgb(211,161,38)" fg:x="283" fg:w="7"/><text x="6.4739%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (7 samples, 0.15%)</title><rect x="6.2239%" y="725" width="0.1539%" height="15" fill="rgb(219,138,40)" fg:x="283" fg:w="7"/><text x="6.4739%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7 samples, 0.15%)</title><rect x="6.2239%" y="709" width="0.1539%" height="15" fill="rgb(241,228,46)" fg:x="283" fg:w="7"/><text x="6.4739%" y="719.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (7 samples, 0.15%)</title><rect x="6.2239%" y="693" width="0.1539%" height="15" fill="rgb(223,209,38)" fg:x="283" fg:w="7"/><text x="6.4739%" y="703.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::get (7 samples, 0.15%)</title><rect x="6.2239%" y="677" width="0.1539%" height="15" fill="rgb(236,164,45)" fg:x="283" fg:w="7"/><text x="6.4739%" y="687.50"></text></g><g><title>std::sys::common::thread_local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="6.3558%" y="661" width="0.0220%" height="15" fill="rgb(231,15,5)" fg:x="289" fg:w="1"/><text x="6.6058%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="6.3558%" y="645" width="0.0220%" height="15" fill="rgb(252,35,15)" fg:x="289" fg:w="1"/><text x="6.6058%" y="655.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="6.3778%" y="805" width="0.0220%" height="15" fill="rgb(248,181,18)" fg:x="290" fg:w="1"/><text x="6.6278%" y="815.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_processing_scheduled_tasks (6 samples, 0.13%)</title><rect x="6.3998%" y="805" width="0.1320%" height="15" fill="rgb(233,39,42)" fg:x="291" fg:w="6"/><text x="6.6498%" y="815.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (6 samples, 0.13%)</title><rect x="6.3998%" y="789" width="0.1320%" height="15" fill="rgb(238,110,33)" fg:x="291" fg:w="6"/><text x="6.6498%" y="799.50"></text></g><g><title>clock_gettime (4 samples, 0.09%)</title><rect x="6.4438%" y="773" width="0.0880%" height="15" fill="rgb(233,195,10)" fg:x="293" fg:w="4"/><text x="6.6938%" y="783.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="6.5098%" y="757" width="0.0220%" height="15" fill="rgb(254,105,3)" fg:x="296" fg:w="1"/><text x="6.7598%" y="767.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="6.6197%" y="789" width="0.0220%" height="15" fill="rgb(221,225,9)" fg:x="301" fg:w="1"/><text x="6.8697%" y="799.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.02%)</title><rect x="6.6197%" y="773" width="0.0220%" height="15" fill="rgb(224,227,45)" fg:x="301" fg:w="1"/><text x="6.8697%" y="783.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="6.6197%" y="757" width="0.0220%" height="15" fill="rgb(229,198,43)" fg:x="301" fg:w="1"/><text x="6.8697%" y="767.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (4 samples, 0.09%)</title><rect x="6.6417%" y="773" width="0.0880%" height="15" fill="rgb(206,209,35)" fg:x="302" fg:w="4"/><text x="6.8917%" y="783.50"></text></g><g><title>pow (4 samples, 0.09%)</title><rect x="6.6417%" y="757" width="0.0880%" height="15" fill="rgb(245,195,53)" fg:x="302" fg:w="4"/><text x="6.8917%" y="767.50"></text></g><g><title>[libm.so.6] (3 samples, 0.07%)</title><rect x="6.6637%" y="741" width="0.0660%" height="15" fill="rgb(240,92,26)" fg:x="303" fg:w="3"/><text x="6.9137%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (3 samples, 0.07%)</title><rect x="6.7297%" y="773" width="0.0660%" height="15" fill="rgb(207,40,23)" fg:x="306" fg:w="3"/><text x="6.9797%" y="783.50"></text></g><g><title>clock_gettime (3 samples, 0.07%)</title><rect x="6.7297%" y="757" width="0.0660%" height="15" fill="rgb(223,111,35)" fg:x="306" fg:w="3"/><text x="6.9797%" y="767.50"></text></g><g><title>__vdso_clock_gettime (3 samples, 0.07%)</title><rect x="6.7297%" y="741" width="0.0660%" height="15" fill="rgb(229,147,28)" fg:x="306" fg:w="3"/><text x="6.9797%" y="751.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (8 samples, 0.18%)</title><rect x="6.6417%" y="789" width="0.1759%" height="15" fill="rgb(211,29,28)" fg:x="302" fg:w="8"/><text x="6.8917%" y="799.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.02%)</title><rect x="6.7957%" y="773" width="0.0220%" height="15" fill="rgb(228,72,33)" fg:x="309" fg:w="1"/><text x="7.0457%" y="783.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.02%)</title><rect x="6.7957%" y="757" width="0.0220%" height="15" fill="rgb(205,214,31)" fg:x="309" fg:w="1"/><text x="7.0457%" y="767.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="6.8837%" y="613" width="0.0220%" height="15" fill="rgb(224,111,15)" fg:x="313" fg:w="1"/><text x="7.1337%" y="623.50"></text></g><g><title>tokio::runtime::time::Driver::park_thread_timeout (5 samples, 0.11%)</title><rect x="6.8617%" y="741" width="0.1100%" height="15" fill="rgb(253,21,26)" fg:x="312" fg:w="5"/><text x="7.1117%" y="751.50"></text></g><g><title>tokio::runtime::driver::IoStack::park_timeout (5 samples, 0.11%)</title><rect x="6.8617%" y="725" width="0.1100%" height="15" fill="rgb(245,139,43)" fg:x="312" fg:w="5"/><text x="7.1117%" y="735.50"></text></g><g><title>tokio::runtime::process::Driver::park_timeout (5 samples, 0.11%)</title><rect x="6.8617%" y="709" width="0.1100%" height="15" fill="rgb(252,170,7)" fg:x="312" fg:w="5"/><text x="7.1117%" y="719.50"></text></g><g><title>tokio::runtime::signal::Driver::park_timeout (5 samples, 0.11%)</title><rect x="6.8617%" y="693" width="0.1100%" height="15" fill="rgb(231,118,14)" fg:x="312" fg:w="5"/><text x="7.1117%" y="703.50"></text></g><g><title>tokio::runtime::io::driver::Driver::park_timeout (5 samples, 0.11%)</title><rect x="6.8617%" y="677" width="0.1100%" height="15" fill="rgb(238,83,0)" fg:x="312" fg:w="5"/><text x="7.1117%" y="687.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (5 samples, 0.11%)</title><rect x="6.8617%" y="661" width="0.1100%" height="15" fill="rgb(221,39,39)" fg:x="312" fg:w="5"/><text x="7.1117%" y="671.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (5 samples, 0.11%)</title><rect x="6.8617%" y="645" width="0.1100%" height="15" fill="rgb(222,119,46)" fg:x="312" fg:w="5"/><text x="7.1117%" y="655.50"></text></g><g><title>epoll_wait (5 samples, 0.11%)</title><rect x="6.8617%" y="629" width="0.1100%" height="15" fill="rgb(222,165,49)" fg:x="312" fg:w="5"/><text x="7.1117%" y="639.50"></text></g><g><title>[unknown] (3 samples, 0.07%)</title><rect x="6.9057%" y="613" width="0.0660%" height="15" fill="rgb(219,113,52)" fg:x="314" fg:w="3"/><text x="7.1557%" y="623.50"></text></g><g><title>[unknown] (3 samples, 0.07%)</title><rect x="6.9057%" y="597" width="0.0660%" height="15" fill="rgb(214,7,15)" fg:x="314" fg:w="3"/><text x="7.1557%" y="607.50"></text></g><g><title>[unknown] (3 samples, 0.07%)</title><rect x="6.9057%" y="581" width="0.0660%" height="15" fill="rgb(235,32,4)" fg:x="314" fg:w="3"/><text x="7.1557%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="6.9276%" y="565" width="0.0440%" height="15" fill="rgb(238,90,54)" fg:x="315" fg:w="2"/><text x="7.1776%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="6.9276%" y="549" width="0.0440%" height="15" fill="rgb(213,208,19)" fg:x="315" fg:w="2"/><text x="7.1776%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="6.9496%" y="533" width="0.0220%" height="15" fill="rgb(233,156,4)" fg:x="316" fg:w="1"/><text x="7.1996%" y="543.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::maintenance (21 samples, 0.46%)</title><rect x="6.5318%" y="805" width="0.4618%" height="15" fill="rgb(207,194,5)" fg:x="297" fg:w="21"/><text x="6.7818%" y="815.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (8 samples, 0.18%)</title><rect x="6.8177%" y="789" width="0.1759%" height="15" fill="rgb(206,111,30)" fg:x="310" fg:w="8"/><text x="7.0677%" y="799.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park_timeout (8 samples, 0.18%)</title><rect x="6.8177%" y="773" width="0.1759%" height="15" fill="rgb(243,70,54)" fg:x="310" fg:w="8"/><text x="7.0677%" y="783.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (6 samples, 0.13%)</title><rect x="6.8617%" y="757" width="0.1320%" height="15" fill="rgb(242,28,8)" fg:x="312" fg:w="6"/><text x="7.1117%" y="767.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (1 samples, 0.02%)</title><rect x="6.9716%" y="741" width="0.0220%" height="15" fill="rgb(219,106,18)" fg:x="317" fg:w="1"/><text x="7.2216%" y="751.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (1 samples, 0.02%)</title><rect x="6.9716%" y="725" width="0.0220%" height="15" fill="rgb(244,222,10)" fg:x="317" fg:w="1"/><text x="7.2216%" y="735.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (1 samples, 0.02%)</title><rect x="6.9716%" y="709" width="0.0220%" height="15" fill="rgb(236,179,52)" fg:x="317" fg:w="1"/><text x="7.2216%" y="719.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (1 samples, 0.02%)</title><rect x="6.9716%" y="693" width="0.0220%" height="15" fill="rgb(213,23,39)" fg:x="317" fg:w="1"/><text x="7.2216%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="7.0156%" y="789" width="0.0220%" height="15" fill="rgb(238,48,10)" fg:x="319" fg:w="1"/><text x="7.2656%" y="799.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.02%)</title><rect x="7.0156%" y="773" width="0.0220%" height="15" fill="rgb(251,196,23)" fg:x="319" fg:w="1"/><text x="7.2656%" y="783.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="7.0156%" y="757" width="0.0220%" height="15" fill="rgb(250,152,24)" fg:x="319" fg:w="1"/><text x="7.2656%" y="767.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="7.1256%" y="757" width="0.0220%" height="15" fill="rgb(209,150,17)" fg:x="324" fg:w="1"/><text x="7.3756%" y="767.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.02%)</title><rect x="7.1256%" y="741" width="0.0220%" height="15" fill="rgb(234,202,34)" fg:x="324" fg:w="1"/><text x="7.3756%" y="751.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="7.1256%" y="725" width="0.0220%" height="15" fill="rgb(253,148,53)" fg:x="324" fg:w="1"/><text x="7.3756%" y="735.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_condvar (2 samples, 0.04%)</title><rect x="7.1476%" y="741" width="0.0440%" height="15" fill="rgb(218,129,16)" fg:x="325" fg:w="2"/><text x="7.3976%" y="751.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (2 samples, 0.04%)</title><rect x="7.1476%" y="725" width="0.0440%" height="15" fill="rgb(216,85,19)" fg:x="325" fg:w="2"/><text x="7.3976%" y="735.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (2 samples, 0.04%)</title><rect x="7.1476%" y="709" width="0.0440%" height="15" fill="rgb(235,228,7)" fg:x="325" fg:w="2"/><text x="7.3976%" y="719.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (2 samples, 0.04%)</title><rect x="7.1476%" y="693" width="0.0440%" height="15" fill="rgb(245,175,0)" fg:x="325" fg:w="2"/><text x="7.3976%" y="703.50"></text></g><g><title>parking_lot_core::parking_lot::park (2 samples, 0.04%)</title><rect x="7.1476%" y="677" width="0.0440%" height="15" fill="rgb(208,168,36)" fg:x="325" fg:w="2"/><text x="7.3976%" y="687.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (2 samples, 0.04%)</title><rect x="7.1476%" y="661" width="0.0440%" height="15" fill="rgb(246,171,24)" fg:x="325" fg:w="2"/><text x="7.3976%" y="671.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (2 samples, 0.04%)</title><rect x="7.1476%" y="645" width="0.0440%" height="15" fill="rgb(215,142,24)" fg:x="325" fg:w="2"/><text x="7.3976%" y="655.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (2 samples, 0.04%)</title><rect x="7.1476%" y="629" width="0.0440%" height="15" fill="rgb(250,187,7)" fg:x="325" fg:w="2"/><text x="7.3976%" y="639.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (2 samples, 0.04%)</title><rect x="7.1476%" y="613" width="0.0440%" height="15" fill="rgb(228,66,33)" fg:x="325" fg:w="2"/><text x="7.3976%" y="623.50"></text></g><g><title>syscall (2 samples, 0.04%)</title><rect x="7.1476%" y="597" width="0.0440%" height="15" fill="rgb(234,215,21)" fg:x="325" fg:w="2"/><text x="7.3976%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="7.1476%" y="581" width="0.0440%" height="15" fill="rgb(222,191,20)" fg:x="325" fg:w="2"/><text x="7.3976%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="7.1476%" y="565" width="0.0440%" height="15" fill="rgb(245,79,54)" fg:x="325" fg:w="2"/><text x="7.3976%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="7.1696%" y="549" width="0.0220%" height="15" fill="rgb(240,10,37)" fg:x="326" fg:w="1"/><text x="7.4196%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="7.1696%" y="533" width="0.0220%" height="15" fill="rgb(214,192,32)" fg:x="326" fg:w="1"/><text x="7.4196%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="7.1696%" y="517" width="0.0220%" height="15" fill="rgb(209,36,54)" fg:x="326" fg:w="1"/><text x="7.4196%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="7.1696%" y="501" width="0.0220%" height="15" fill="rgb(220,10,11)" fg:x="326" fg:w="1"/><text x="7.4196%" y="511.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (10 samples, 0.22%)</title><rect x="6.9936%" y="805" width="0.2199%" height="15" fill="rgb(221,106,17)" fg:x="318" fg:w="10"/><text x="7.2436%" y="815.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (8 samples, 0.18%)</title><rect x="7.0376%" y="789" width="0.1759%" height="15" fill="rgb(251,142,44)" fg:x="320" fg:w="8"/><text x="7.2876%" y="799.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (4 samples, 0.09%)</title><rect x="7.1256%" y="773" width="0.0880%" height="15" fill="rgb(238,13,15)" fg:x="324" fg:w="4"/><text x="7.3756%" y="783.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (3 samples, 0.07%)</title><rect x="7.1476%" y="757" width="0.0660%" height="15" fill="rgb(208,107,27)" fg:x="325" fg:w="3"/><text x="7.3976%" y="767.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_driver (1 samples, 0.02%)</title><rect x="7.1916%" y="741" width="0.0220%" height="15" fill="rgb(205,136,37)" fg:x="327" fg:w="1"/><text x="7.4416%" y="751.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (1 samples, 0.02%)</title><rect x="7.1916%" y="725" width="0.0220%" height="15" fill="rgb(250,205,27)" fg:x="327" fg:w="1"/><text x="7.4416%" y="735.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (1 samples, 0.02%)</title><rect x="7.1916%" y="709" width="0.0220%" height="15" fill="rgb(210,80,43)" fg:x="327" fg:w="1"/><text x="7.4416%" y="719.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (1 samples, 0.02%)</title><rect x="7.1916%" y="693" width="0.0220%" height="15" fill="rgb(247,160,36)" fg:x="327" fg:w="1"/><text x="7.4416%" y="703.50"></text></g><g><title>epoll_wait (1 samples, 0.02%)</title><rect x="7.1916%" y="677" width="0.0220%" height="15" fill="rgb(234,13,49)" fg:x="327" fg:w="1"/><text x="7.4416%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="7.1916%" y="661" width="0.0220%" height="15" fill="rgb(234,122,0)" fg:x="327" fg:w="1"/><text x="7.4416%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="7.1916%" y="645" width="0.0220%" height="15" fill="rgb(207,146,38)" fg:x="327" fg:w="1"/><text x="7.4416%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="7.1916%" y="629" width="0.0220%" height="15" fill="rgb(207,177,25)" fg:x="327" fg:w="1"/><text x="7.4416%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="7.1916%" y="613" width="0.0220%" height="15" fill="rgb(211,178,42)" fg:x="327" fg:w="1"/><text x="7.4416%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="7.1916%" y="597" width="0.0220%" height="15" fill="rgb(230,69,54)" fg:x="327" fg:w="1"/><text x="7.4416%" y="607.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.02%)</title><rect x="7.2795%" y="789" width="0.0220%" height="15" fill="rgb(214,135,41)" fg:x="331" fg:w="1"/><text x="7.5295%" y="799.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.02%)</title><rect x="7.2795%" y="773" width="0.0220%" height="15" fill="rgb(237,67,25)" fg:x="331" fg:w="1"/><text x="7.5295%" y="783.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.02%)</title><rect x="7.2795%" y="757" width="0.0220%" height="15" fill="rgb(222,189,50)" fg:x="331" fg:w="1"/><text x="7.5295%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;core::option::Option&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::multi_thread::worker::Core&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="7.3015%" y="789" width="0.0220%" height="15" fill="rgb(245,148,34)" fg:x="332" fg:w="1"/><text x="7.5515%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (1 samples, 0.02%)</title><rect x="7.3015%" y="773" width="0.0220%" height="15" fill="rgb(222,29,6)" fg:x="332" fg:w="1"/><text x="7.5515%" y="783.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="7.3015%" y="757" width="0.0220%" height="15" fill="rgb(221,189,43)" fg:x="332" fg:w="1"/><text x="7.5515%" y="767.50"></text></g><g><title>tokio::runtime::context::budget (1 samples, 0.02%)</title><rect x="7.3235%" y="757" width="0.0220%" height="15" fill="rgb(207,36,27)" fg:x="333" fg:w="1"/><text x="7.5735%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.02%)</title><rect x="7.3235%" y="741" width="0.0220%" height="15" fill="rgb(217,90,24)" fg:x="333" fg:w="1"/><text x="7.5735%" y="751.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (1 samples, 0.02%)</title><rect x="7.3235%" y="725" width="0.0220%" height="15" fill="rgb(224,66,35)" fg:x="333" fg:w="1"/><text x="7.5735%" y="735.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="7.3235%" y="709" width="0.0220%" height="15" fill="rgb(221,13,50)" fg:x="333" fg:w="1"/><text x="7.5735%" y="719.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (2 samples, 0.04%)</title><rect x="7.3895%" y="741" width="0.0440%" height="15" fill="rgb(236,68,49)" fg:x="336" fg:w="2"/><text x="7.6395%" y="751.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (2 samples, 0.04%)</title><rect x="7.3895%" y="725" width="0.0440%" height="15" fill="rgb(229,146,28)" fg:x="336" fg:w="2"/><text x="7.6395%" y="735.50"></text></g><g><title>core::cell::BorrowRefMut::new (2 samples, 0.04%)</title><rect x="7.3895%" y="709" width="0.0440%" height="15" fill="rgb(225,31,38)" fg:x="336" fg:w="2"/><text x="7.6395%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (2 samples, 0.04%)</title><rect x="7.4335%" y="741" width="0.0440%" height="15" fill="rgb(250,208,3)" fg:x="338" fg:w="2"/><text x="7.6835%" y="751.50"></text></g><g><title>core::mem::replace (2 samples, 0.04%)</title><rect x="7.4335%" y="725" width="0.0440%" height="15" fill="rgb(246,54,23)" fg:x="338" fg:w="2"/><text x="7.6835%" y="735.50"></text></g><g><title>core::ptr::write (2 samples, 0.04%)</title><rect x="7.4335%" y="709" width="0.0440%" height="15" fill="rgb(243,76,11)" fg:x="338" fg:w="2"/><text x="7.6835%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;core::option::Option&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::multi_thread::worker::Core&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="7.4775%" y="741" width="0.0220%" height="15" fill="rgb(245,21,50)" fg:x="340" fg:w="1"/><text x="7.7275%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (1 samples, 0.02%)</title><rect x="7.4775%" y="725" width="0.0220%" height="15" fill="rgb(228,9,43)" fg:x="340" fg:w="1"/><text x="7.7275%" y="735.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="7.4775%" y="709" width="0.0220%" height="15" fill="rgb(208,100,47)" fg:x="340" fg:w="1"/><text x="7.7275%" y="719.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.02%)</title><rect x="7.4775%" y="693" width="0.0220%" height="15" fill="rgb(232,26,8)" fg:x="340" fg:w="1"/><text x="7.7275%" y="703.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="7.4775%" y="677" width="0.0220%" height="15" fill="rgb(216,166,38)" fg:x="340" fg:w="1"/><text x="7.7275%" y="687.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="7.4775%" y="661" width="0.0220%" height="15" fill="rgb(251,202,51)" fg:x="340" fg:w="1"/><text x="7.7275%" y="671.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="7.4775%" y="645" width="0.0220%" height="15" fill="rgb(254,216,34)" fg:x="340" fg:w="1"/><text x="7.7275%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::multi_thread::worker::Core&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="7.4995%" y="741" width="0.0220%" height="15" fill="rgb(251,32,27)" fg:x="341" fg:w="1"/><text x="7.7495%" y="751.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::reset_lifo_enabled (4 samples, 0.09%)</title><rect x="7.5214%" y="741" width="0.0880%" height="15" fill="rgb(208,127,28)" fg:x="342" fg:w="4"/><text x="7.7714%" y="751.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (1 samples, 0.02%)</title><rect x="8.0493%" y="709" width="0.0220%" height="15" fill="rgb(224,137,22)" fg:x="366" fg:w="1"/><text x="8.2993%" y="719.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (1 samples, 0.02%)</title><rect x="8.0493%" y="693" width="0.0220%" height="15" fill="rgb(254,70,32)" fg:x="366" fg:w="1"/><text x="8.2993%" y="703.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (1 samples, 0.02%)</title><rect x="8.0493%" y="677" width="0.0220%" height="15" fill="rgb(229,75,37)" fg:x="366" fg:w="1"/><text x="8.2993%" y="687.50"></text></g><g><title>syscall (1 samples, 0.02%)</title><rect x="8.0493%" y="661" width="0.0220%" height="15" fill="rgb(252,64,23)" fg:x="366" fg:w="1"/><text x="8.2993%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="8.0493%" y="645" width="0.0220%" height="15" fill="rgb(232,162,48)" fg:x="366" fg:w="1"/><text x="8.2993%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (1 samples, 0.02%)</title><rect x="8.1152%" y="517" width="0.0220%" height="15" fill="rgb(246,160,12)" fg:x="369" fg:w="1"/><text x="8.3652%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="8.1152%" y="501" width="0.0220%" height="15" fill="rgb(247,166,0)" fg:x="369" fg:w="1"/><text x="8.3652%" y="511.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back_or_overflow (2 samples, 0.04%)</title><rect x="8.1152%" y="533" width="0.0440%" height="15" fill="rgb(249,219,21)" fg:x="369" fg:w="2"/><text x="8.3652%" y="543.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back_finish (1 samples, 0.02%)</title><rect x="8.1372%" y="517" width="0.0220%" height="15" fill="rgb(205,209,3)" fg:x="370" fg:w="1"/><text x="8.3872%" y="527.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::yield_now (3 samples, 0.07%)</title><rect x="8.1152%" y="693" width="0.0660%" height="15" fill="rgb(243,44,1)" fg:x="369" fg:w="3"/><text x="8.3652%" y="703.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (3 samples, 0.07%)</title><rect x="8.1152%" y="677" width="0.0660%" height="15" fill="rgb(206,159,16)" fg:x="369" fg:w="3"/><text x="8.3652%" y="687.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (3 samples, 0.07%)</title><rect x="8.1152%" y="661" width="0.0660%" height="15" fill="rgb(244,77,30)" fg:x="369" fg:w="3"/><text x="8.3652%" y="671.50"></text></g><g><title>tokio::runtime::context::with_scheduler (3 samples, 0.07%)</title><rect x="8.1152%" y="645" width="0.0660%" height="15" fill="rgb(218,69,12)" fg:x="369" fg:w="3"/><text x="8.3652%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.07%)</title><rect x="8.1152%" y="629" width="0.0660%" height="15" fill="rgb(212,87,7)" fg:x="369" fg:w="3"/><text x="8.3652%" y="639.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (3 samples, 0.07%)</title><rect x="8.1152%" y="613" width="0.0660%" height="15" fill="rgb(245,114,25)" fg:x="369" fg:w="3"/><text x="8.3652%" y="623.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (3 samples, 0.07%)</title><rect x="8.1152%" y="597" width="0.0660%" height="15" fill="rgb(210,61,42)" fg:x="369" fg:w="3"/><text x="8.3652%" y="607.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::_{{closure}} (3 samples, 0.07%)</title><rect x="8.1152%" y="581" width="0.0660%" height="15" fill="rgb(211,52,33)" fg:x="369" fg:w="3"/><text x="8.3652%" y="591.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (3 samples, 0.07%)</title><rect x="8.1152%" y="565" width="0.0660%" height="15" fill="rgb(234,58,33)" fg:x="369" fg:w="3"/><text x="8.3652%" y="575.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (3 samples, 0.07%)</title><rect x="8.1152%" y="549" width="0.0660%" height="15" fill="rgb(220,115,36)" fg:x="369" fg:w="3"/><text x="8.3652%" y="559.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (1 samples, 0.02%)</title><rect x="8.1592%" y="533" width="0.0220%" height="15" fill="rgb(243,153,54)" fg:x="371" fg:w="1"/><text x="8.4092%" y="543.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (1 samples, 0.02%)</title><rect x="8.1592%" y="517" width="0.0220%" height="15" fill="rgb(251,47,18)" fg:x="371" fg:w="1"/><text x="8.4092%" y="527.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (1 samples, 0.02%)</title><rect x="8.1592%" y="501" width="0.0220%" height="15" fill="rgb(242,102,42)" fg:x="371" fg:w="1"/><text x="8.4092%" y="511.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.02%)</title><rect x="8.1812%" y="629" width="0.0220%" height="15" fill="rgb(234,31,38)" fg:x="372" fg:w="1"/><text x="8.4312%" y="639.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="8.1812%" y="613" width="0.0220%" height="15" fill="rgb(221,117,51)" fg:x="372" fg:w="1"/><text x="8.4312%" y="623.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete::_{{closure}} (1 samples, 0.02%)</title><rect x="8.1812%" y="597" width="0.0220%" height="15" fill="rgb(212,20,18)" fg:x="372" fg:w="1"/><text x="8.4312%" y="607.50"></text></g><g><title>futures_task::waker::wake_by_ref_arc_raw (1 samples, 0.02%)</title><rect x="8.1812%" y="581" width="0.0220%" height="15" fill="rgb(245,133,36)" fg:x="372" fg:w="1"/><text x="8.4312%" y="591.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::task::Task&lt;Fut&gt; as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (1 samples, 0.02%)</title><rect x="8.1812%" y="565" width="0.0220%" height="15" fill="rgb(212,6,19)" fg:x="372" fg:w="1"/><text x="8.4312%" y="575.50"></text></g><g><title>tokio::runtime::park::wake (1 samples, 0.02%)</title><rect x="8.1812%" y="549" width="0.0220%" height="15" fill="rgb(218,1,36)" fg:x="372" fg:w="1"/><text x="8.4312%" y="559.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (1 samples, 0.02%)</title><rect x="8.1812%" y="533" width="0.0220%" height="15" fill="rgb(246,84,54)" fg:x="372" fg:w="1"/><text x="8.4312%" y="543.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::notify_one (1 samples, 0.02%)</title><rect x="8.1812%" y="517" width="0.0220%" height="15" fill="rgb(242,110,6)" fg:x="372" fg:w="1"/><text x="8.4312%" y="527.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one (1 samples, 0.02%)</title><rect x="8.1812%" y="501" width="0.0220%" height="15" fill="rgb(214,47,5)" fg:x="372" fg:w="1"/><text x="8.4312%" y="511.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (1 samples, 0.02%)</title><rect x="8.1812%" y="485" width="0.0220%" height="15" fill="rgb(218,159,25)" fg:x="372" fg:w="1"/><text x="8.4312%" y="495.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (1 samples, 0.02%)</title><rect x="8.1812%" y="469" width="0.0220%" height="15" fill="rgb(215,211,28)" fg:x="372" fg:w="1"/><text x="8.4312%" y="479.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (1 samples, 0.02%)</title><rect x="8.1812%" y="453" width="0.0220%" height="15" fill="rgb(238,59,32)" fg:x="372" fg:w="1"/><text x="8.4312%" y="463.50"></text></g><g><title>syscall (1 samples, 0.02%)</title><rect x="8.1812%" y="437" width="0.0220%" height="15" fill="rgb(226,82,3)" fg:x="372" fg:w="1"/><text x="8.4312%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="8.1812%" y="421" width="0.0220%" height="15" fill="rgb(240,164,32)" fg:x="372" fg:w="1"/><text x="8.4312%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="8.1812%" y="405" width="0.0220%" height="15" fill="rgb(232,46,7)" fg:x="372" fg:w="1"/><text x="8.4312%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="8.1812%" y="389" width="0.0220%" height="15" fill="rgb(229,129,53)" fg:x="372" fg:w="1"/><text x="8.4312%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.02%)</title><rect x="8.2252%" y="533" width="0.0220%" height="15" fill="rgb(234,188,29)" fg:x="374" fg:w="1"/><text x="8.4752%" y="543.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (4 samples, 0.09%)</title><rect x="8.2032%" y="629" width="0.0880%" height="15" fill="rgb(246,141,4)" fg:x="373" fg:w="4"/><text x="8.4532%" y="639.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (4 samples, 0.09%)</title><rect x="8.2032%" y="613" width="0.0880%" height="15" fill="rgb(229,23,39)" fg:x="373" fg:w="4"/><text x="8.4532%" y="623.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (4 samples, 0.09%)</title><rect x="8.2032%" y="597" width="0.0880%" height="15" fill="rgb(206,12,3)" fg:x="373" fg:w="4"/><text x="8.4532%" y="607.50"></text></g><g><title>tokio::runtime::context::with_scheduler (4 samples, 0.09%)</title><rect x="8.2032%" y="581" width="0.0880%" height="15" fill="rgb(252,226,20)" fg:x="373" fg:w="4"/><text x="8.4532%" y="591.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.07%)</title><rect x="8.2252%" y="565" width="0.0660%" height="15" fill="rgb(216,123,35)" fg:x="374" fg:w="3"/><text x="8.4752%" y="575.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (3 samples, 0.07%)</title><rect x="8.2252%" y="549" width="0.0660%" height="15" fill="rgb(212,68,40)" fg:x="374" fg:w="3"/><text x="8.4752%" y="559.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (2 samples, 0.04%)</title><rect x="8.2472%" y="533" width="0.0440%" height="15" fill="rgb(254,125,32)" fg:x="375" fg:w="2"/><text x="8.4972%" y="543.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::_{{closure}} (2 samples, 0.04%)</title><rect x="8.2472%" y="517" width="0.0440%" height="15" fill="rgb(253,97,22)" fg:x="375" fg:w="2"/><text x="8.4972%" y="527.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (2 samples, 0.04%)</title><rect x="8.2472%" y="501" width="0.0440%" height="15" fill="rgb(241,101,14)" fg:x="375" fg:w="2"/><text x="8.4972%" y="511.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (2 samples, 0.04%)</title><rect x="8.2472%" y="485" width="0.0440%" height="15" fill="rgb(238,103,29)" fg:x="375" fg:w="2"/><text x="8.4972%" y="495.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (2 samples, 0.04%)</title><rect x="8.2472%" y="469" width="0.0440%" height="15" fill="rgb(233,195,47)" fg:x="375" fg:w="2"/><text x="8.4972%" y="479.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (2 samples, 0.04%)</title><rect x="8.2472%" y="453" width="0.0440%" height="15" fill="rgb(246,218,30)" fg:x="375" fg:w="2"/><text x="8.4972%" y="463.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (2 samples, 0.04%)</title><rect x="8.2472%" y="437" width="0.0440%" height="15" fill="rgb(219,145,47)" fg:x="375" fg:w="2"/><text x="8.4972%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.04%)</title><rect x="8.2472%" y="421" width="0.0440%" height="15" fill="rgb(243,12,26)" fg:x="375" fg:w="2"/><text x="8.4972%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.04%)</title><rect x="8.2472%" y="405" width="0.0440%" height="15" fill="rgb(214,87,16)" fg:x="375" fg:w="2"/><text x="8.4972%" y="415.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.13%)</title><rect x="8.1812%" y="677" width="0.1320%" height="15" fill="rgb(208,99,42)" fg:x="372" fg:w="6"/><text x="8.4312%" y="687.50"></text></g><g><title>std::panicking::try (6 samples, 0.13%)</title><rect x="8.1812%" y="661" width="0.1320%" height="15" fill="rgb(253,99,2)" fg:x="372" fg:w="6"/><text x="8.4312%" y="671.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.13%)</title><rect x="8.1812%" y="645" width="0.1320%" height="15" fill="rgb(220,168,23)" fg:x="372" fg:w="6"/><text x="8.4312%" y="655.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (1 samples, 0.02%)</title><rect x="8.2912%" y="629" width="0.0220%" height="15" fill="rgb(242,38,24)" fg:x="377" fg:w="1"/><text x="8.5412%" y="639.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_ref (1 samples, 0.02%)</title><rect x="8.2912%" y="613" width="0.0220%" height="15" fill="rgb(225,182,9)" fg:x="377" fg:w="1"/><text x="8.5412%" y="623.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_ref (1 samples, 0.02%)</title><rect x="8.2912%" y="597" width="0.0220%" height="15" fill="rgb(243,178,37)" fg:x="377" fg:w="1"/><text x="8.5412%" y="607.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (1 samples, 0.02%)</title><rect x="8.2912%" y="581" width="0.0220%" height="15" fill="rgb(232,139,19)" fg:x="377" fg:w="1"/><text x="8.5412%" y="591.50"></text></g><g><title>tokio::runtime::task::state::State::load (1 samples, 0.02%)</title><rect x="8.2912%" y="565" width="0.0220%" height="15" fill="rgb(225,201,24)" fg:x="377" fg:w="1"/><text x="8.5412%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="8.2912%" y="549" width="0.0220%" height="15" fill="rgb(221,47,46)" fg:x="377" fg:w="1"/><text x="8.5412%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="8.2912%" y="533" width="0.0220%" height="15" fill="rgb(249,23,13)" fg:x="377" fg:w="1"/><text x="8.5412%" y="543.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::get_new_task (1 samples, 0.02%)</title><rect x="8.3132%" y="661" width="0.0220%" height="15" fill="rgb(219,9,5)" fg:x="378" fg:w="1"/><text x="8.5632%" y="671.50"></text></g><g><title>tokio::runtime::task::Task&lt;S&gt;::from_raw (1 samples, 0.02%)</title><rect x="8.3132%" y="645" width="0.0220%" height="15" fill="rgb(254,171,16)" fg:x="378" fg:w="1"/><text x="8.5632%" y="655.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::from_raw (1 samples, 0.02%)</title><rect x="8.3132%" y="629" width="0.0220%" height="15" fill="rgb(230,171,20)" fg:x="378" fg:w="1"/><text x="8.5632%" y="639.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (5 samples, 0.11%)</title><rect x="8.3352%" y="645" width="0.1100%" height="15" fill="rgb(210,71,41)" fg:x="379" fg:w="5"/><text x="8.5852%" y="655.50"></text></g><g><title>&lt;tokio::runtime::task::Task&lt;S&gt; as tokio::util::linked_list::Link&gt;::pointers (5 samples, 0.11%)</title><rect x="8.3352%" y="629" width="0.1100%" height="15" fill="rgb(206,173,20)" fg:x="379" fg:w="5"/><text x="8.5852%" y="639.50"></text></g><g><title>tokio::runtime::task::core::Header::get_trailer (5 samples, 0.11%)</title><rect x="8.3352%" y="613" width="0.1100%" height="15" fill="rgb(233,88,34)" fg:x="379" fg:w="5"/><text x="8.5852%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.04%)</title><rect x="8.4011%" y="597" width="0.0440%" height="15" fill="rgb(223,209,46)" fg:x="382" fg:w="2"/><text x="8.6511%" y="607.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::release (8 samples, 0.18%)</title><rect x="8.3132%" y="677" width="0.1759%" height="15" fill="rgb(250,43,18)" fg:x="378" fg:w="8"/><text x="8.5632%" y="687.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (7 samples, 0.15%)</title><rect x="8.3352%" y="661" width="0.1539%" height="15" fill="rgb(208,13,10)" fg:x="379" fg:w="7"/><text x="8.5852%" y="671.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::shard_inner (2 samples, 0.04%)</title><rect x="8.4451%" y="645" width="0.0440%" height="15" fill="rgb(212,200,36)" fg:x="384" fg:w="2"/><text x="8.6951%" y="655.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (2 samples, 0.04%)</title><rect x="8.4451%" y="629" width="0.0440%" height="15" fill="rgb(225,90,30)" fg:x="384" fg:w="2"/><text x="8.6951%" y="639.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.04%)</title><rect x="8.4451%" y="613" width="0.0440%" height="15" fill="rgb(236,182,39)" fg:x="384" fg:w="2"/><text x="8.6951%" y="623.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.04%)</title><rect x="8.4451%" y="597" width="0.0440%" height="15" fill="rgb(212,144,35)" fg:x="384" fg:w="2"/><text x="8.6951%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.02%)</title><rect x="8.4891%" y="661" width="0.0220%" height="15" fill="rgb(228,63,44)" fg:x="386" fg:w="1"/><text x="8.7391%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.02%)</title><rect x="8.4891%" y="645" width="0.0220%" height="15" fill="rgb(228,109,6)" fg:x="386" fg:w="1"/><text x="8.7391%" y="655.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (16 samples, 0.35%)</title><rect x="8.1812%" y="693" width="0.3519%" height="15" fill="rgb(238,117,24)" fg:x="372" fg:w="16"/><text x="8.4312%" y="703.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_terminal (2 samples, 0.04%)</title><rect x="8.4891%" y="677" width="0.0440%" height="15" fill="rgb(242,26,26)" fg:x="386" fg:w="2"/><text x="8.7391%" y="687.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::ref_count (1 samples, 0.02%)</title><rect x="8.5111%" y="661" width="0.0220%" height="15" fill="rgb(221,92,48)" fg:x="387" fg:w="1"/><text x="8.7611%" y="671.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (1 samples, 0.02%)</title><rect x="8.5331%" y="693" width="0.0220%" height="15" fill="rgb(209,209,32)" fg:x="388" fg:w="1"/><text x="8.7831%" y="703.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner::transition_result_to_poll_future (5 samples, 0.11%)</title><rect x="8.6870%" y="677" width="0.1100%" height="15" fill="rgb(221,70,22)" fg:x="395" fg:w="5"/><text x="8.9370%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;day16::Position&gt;&gt; (2 samples, 0.04%)</title><rect x="8.8190%" y="485" width="0.0440%" height="15" fill="rgb(248,145,5)" fg:x="401" fg:w="2"/><text x="9.0690%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="8.8190%" y="469" width="0.0440%" height="15" fill="rgb(226,116,26)" fg:x="401" fg:w="2"/><text x="9.0690%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;day16::Position,alloc::alloc::Global&gt;&gt; (2 samples, 0.04%)</title><rect x="8.8190%" y="453" width="0.0440%" height="15" fill="rgb(244,5,17)" fg:x="401" fg:w="2"/><text x="9.0690%" y="463.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="8.8190%" y="437" width="0.0440%" height="15" fill="rgb(252,159,33)" fg:x="401" fg:w="2"/><text x="9.0690%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;day16::Position&gt;&gt; (2 samples, 0.04%)</title><rect x="8.8190%" y="421" width="0.0440%" height="15" fill="rgb(206,71,0)" fg:x="401" fg:w="2"/><text x="9.0690%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="8.8190%" y="405" width="0.0440%" height="15" fill="rgb(233,118,54)" fg:x="401" fg:w="2"/><text x="9.0690%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.04%)</title><rect x="8.8190%" y="389" width="0.0440%" height="15" fill="rgb(234,83,48)" fg:x="401" fg:w="2"/><text x="9.0690%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.04%)</title><rect x="8.8190%" y="373" width="0.0440%" height="15" fill="rgb(228,3,54)" fg:x="401" fg:w="2"/><text x="9.0690%" y="383.50"></text></g><g><title>cfree (2 samples, 0.04%)</title><rect x="8.8190%" y="357" width="0.0440%" height="15" fill="rgb(226,155,13)" fg:x="401" fg:w="2"/><text x="9.0690%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;day16::maze_walker::BeamWalker::run::{{closure}}&gt; (4 samples, 0.09%)</title><rect x="8.8190%" y="501" width="0.0880%" height="15" fill="rgb(241,28,37)" fg:x="401" fg:w="4"/><text x="9.0690%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::mpsc::bounded::Sender&lt;day16::maze_walker::BeamUpdate&gt;::send::{{closure}}&gt; (2 samples, 0.04%)</title><rect x="8.8630%" y="485" width="0.0440%" height="15" fill="rgb(233,93,10)" fg:x="403" fg:w="2"/><text x="9.1130%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::mpsc::bounded::Sender&lt;day16::maze_walker::BeamUpdate&gt;::reserve::{{closure}}&gt; (2 samples, 0.04%)</title><rect x="8.8630%" y="469" width="0.0440%" height="15" fill="rgb(225,113,19)" fg:x="403" fg:w="2"/><text x="9.1130%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::mpsc::bounded::Sender&lt;day16::maze_walker::BeamUpdate&gt;::reserve_inner::{{closure}}&gt; (2 samples, 0.04%)</title><rect x="8.8630%" y="453" width="0.0440%" height="15" fill="rgb(241,2,18)" fg:x="403" fg:w="2"/><text x="9.1130%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::batch_semaphore::Acquire&gt; (2 samples, 0.04%)</title><rect x="8.8630%" y="437" width="0.0440%" height="15" fill="rgb(228,207,21)" fg:x="403" fg:w="2"/><text x="9.1130%" y="447.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (2 samples, 0.04%)</title><rect x="8.8630%" y="421" width="0.0440%" height="15" fill="rgb(213,211,35)" fg:x="403" fg:w="2"/><text x="9.1130%" y="431.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (1 samples, 0.02%)</title><rect x="8.8850%" y="405" width="0.0220%" height="15" fill="rgb(209,83,10)" fg:x="404" fg:w="1"/><text x="9.1350%" y="415.50"></text></g><g><title>core::task::wake::Waker::wake (1 samples, 0.02%)</title><rect x="8.8850%" y="389" width="0.0220%" height="15" fill="rgb(209,164,1)" fg:x="404" fg:w="1"/><text x="9.1350%" y="399.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (1 samples, 0.02%)</title><rect x="8.8850%" y="373" width="0.0220%" height="15" fill="rgb(213,184,43)" fg:x="404" fg:w="1"/><text x="9.1350%" y="383.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (1 samples, 0.02%)</title><rect x="8.8850%" y="357" width="0.0220%" height="15" fill="rgb(231,61,34)" fg:x="404" fg:w="1"/><text x="9.1350%" y="367.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (1 samples, 0.02%)</title><rect x="8.8850%" y="341" width="0.0220%" height="15" fill="rgb(235,75,3)" fg:x="404" fg:w="1"/><text x="9.1350%" y="351.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (1 samples, 0.02%)</title><rect x="8.8850%" y="325" width="0.0220%" height="15" fill="rgb(220,106,47)" fg:x="404" fg:w="1"/><text x="9.1350%" y="335.50"></text></g><g><title>tokio::runtime::task::state::State::load (1 samples, 0.02%)</title><rect x="8.8850%" y="309" width="0.0220%" height="15" fill="rgb(210,196,33)" fg:x="404" fg:w="1"/><text x="9.1350%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="8.8850%" y="293" width="0.0220%" height="15" fill="rgb(229,154,42)" fg:x="404" fg:w="1"/><text x="9.1350%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="8.8850%" y="277" width="0.0220%" height="15" fill="rgb(228,114,26)" fg:x="404" fg:w="1"/><text x="9.1350%" y="287.50"></text></g><g><title>tokio::runtime::task::harness::cancel_task (7 samples, 0.15%)</title><rect x="8.7970%" y="677" width="0.1539%" height="15" fill="rgb(208,144,1)" fg:x="400" fg:w="7"/><text x="9.0470%" y="687.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.15%)</title><rect x="8.7970%" y="661" width="0.1539%" height="15" fill="rgb(239,112,37)" fg:x="400" fg:w="7"/><text x="9.0470%" y="671.50"></text></g><g><title>std::panicking::try (7 samples, 0.15%)</title><rect x="8.7970%" y="645" width="0.1539%" height="15" fill="rgb(210,96,50)" fg:x="400" fg:w="7"/><text x="9.0470%" y="655.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.13%)</title><rect x="8.8190%" y="629" width="0.1320%" height="15" fill="rgb(222,178,2)" fg:x="401" fg:w="6"/><text x="9.0690%" y="639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.13%)</title><rect x="8.8190%" y="613" width="0.1320%" height="15" fill="rgb(226,74,18)" fg:x="401" fg:w="6"/><text x="9.0690%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.13%)</title><rect x="8.8190%" y="597" width="0.1320%" height="15" fill="rgb(225,67,54)" fg:x="401" fg:w="6"/><text x="9.0690%" y="607.50"></text></g><g><title>tokio::runtime::task::harness::cancel_task::_{{closure}} (6 samples, 0.13%)</title><rect x="8.8190%" y="581" width="0.1320%" height="15" fill="rgb(251,92,32)" fg:x="401" fg:w="6"/><text x="9.0690%" y="591.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output (6 samples, 0.13%)</title><rect x="8.8190%" y="565" width="0.1320%" height="15" fill="rgb(228,149,22)" fg:x="401" fg:w="6"/><text x="9.0690%" y="575.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (6 samples, 0.13%)</title><rect x="8.8190%" y="549" width="0.1320%" height="15" fill="rgb(243,54,13)" fg:x="401" fg:w="6"/><text x="9.0690%" y="559.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (6 samples, 0.13%)</title><rect x="8.8190%" y="533" width="0.1320%" height="15" fill="rgb(243,180,28)" fg:x="401" fg:w="6"/><text x="9.0690%" y="543.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::_{{closure}} (6 samples, 0.13%)</title><rect x="8.8190%" y="517" width="0.1320%" height="15" fill="rgb(208,167,24)" fg:x="401" fg:w="6"/><text x="9.0690%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;day16::maze_walker::BeamWalker&gt; (2 samples, 0.04%)</title><rect x="8.9070%" y="501" width="0.0440%" height="15" fill="rgb(245,73,45)" fg:x="405" fg:w="2"/><text x="9.1570%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;day16::SparseGrid&lt;day16::maze_walker::Mirror&gt;&gt;&gt; (2 samples, 0.04%)</title><rect x="8.9070%" y="485" width="0.0440%" height="15" fill="rgb(237,203,48)" fg:x="405" fg:w="2"/><text x="9.1570%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="8.9070%" y="469" width="0.0440%" height="15" fill="rgb(211,197,16)" fg:x="405" fg:w="2"/><text x="9.1570%" y="479.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (2 samples, 0.04%)</title><rect x="9.0169%" y="517" width="0.0440%" height="15" fill="rgb(243,99,51)" fg:x="410" fg:w="2"/><text x="9.2669%" y="527.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (2 samples, 0.04%)</title><rect x="9.0169%" y="501" width="0.0440%" height="15" fill="rgb(215,123,29)" fg:x="410" fg:w="2"/><text x="9.2669%" y="511.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (4 samples, 0.09%)</title><rect x="9.0169%" y="565" width="0.0880%" height="15" fill="rgb(239,186,37)" fg:x="410" fg:w="4"/><text x="9.2669%" y="575.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (4 samples, 0.09%)</title><rect x="9.0169%" y="549" width="0.0880%" height="15" fill="rgb(252,136,39)" fg:x="410" fg:w="4"/><text x="9.2669%" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.09%)</title><rect x="9.0169%" y="533" width="0.0880%" height="15" fill="rgb(223,213,32)" fg:x="410" fg:w="4"/><text x="9.2669%" y="543.50"></text></g><g><title>tokio::runtime::context::set_current_task_id::_{{closure}} (2 samples, 0.04%)</title><rect x="9.0609%" y="517" width="0.0440%" height="15" fill="rgb(233,115,5)" fg:x="412" fg:w="2"/><text x="9.3109%" y="527.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.04%)</title><rect x="9.0609%" y="501" width="0.0440%" height="15" fill="rgb(207,226,44)" fg:x="412" fg:w="2"/><text x="9.3109%" y="511.50"></text></g><g><title>core::mem::replace (2 samples, 0.04%)</title><rect x="9.0609%" y="485" width="0.0440%" height="15" fill="rgb(208,126,0)" fg:x="412" fg:w="2"/><text x="9.3109%" y="495.50"></text></g><g><title>core::ptr::write (2 samples, 0.04%)</title><rect x="9.0609%" y="469" width="0.0440%" height="15" fill="rgb(244,66,21)" fg:x="412" fg:w="2"/><text x="9.3109%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (3 samples, 0.07%)</title><rect x="9.1709%" y="533" width="0.0660%" height="15" fill="rgb(222,97,12)" fg:x="417" fg:w="3"/><text x="9.4209%" y="543.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (3 samples, 0.07%)</title><rect x="9.1709%" y="517" width="0.0660%" height="15" fill="rgb(219,213,19)" fg:x="417" fg:w="3"/><text x="9.4209%" y="527.50"></text></g><g><title>day16::main::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.02%)</title><rect x="9.2369%" y="533" width="0.0220%" height="15" fill="rgb(252,169,30)" fg:x="420" fg:w="1"/><text x="9.4869%" y="543.50"></text></g><g><title>day16::maze_walker::MazeRunner::results::_{{closure}} (1 samples, 0.02%)</title><rect x="9.2369%" y="517" width="0.0220%" height="15" fill="rgb(206,32,51)" fg:x="420" fg:w="1"/><text x="9.4869%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::join::JoinHandle&lt;day16::maze_walker::MazeResult&gt;&gt; (1 samples, 0.02%)</title><rect x="9.2369%" y="501" width="0.0220%" height="15" fill="rgb(250,172,42)" fg:x="420" fg:w="1"/><text x="9.4869%" y="511.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="9.2369%" y="485" width="0.0220%" height="15" fill="rgb(209,34,43)" fg:x="420" fg:w="1"/><text x="9.4869%" y="495.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (1 samples, 0.02%)</title><rect x="9.2369%" y="469" width="0.0220%" height="15" fill="rgb(223,11,35)" fg:x="420" fg:w="1"/><text x="9.4869%" y="479.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.02%)</title><rect x="9.2369%" y="453" width="0.0220%" height="15" fill="rgb(251,219,26)" fg:x="420" fg:w="1"/><text x="9.4869%" y="463.50"></text></g><g><title>std::panicking::try (1 samples, 0.02%)</title><rect x="9.2369%" y="437" width="0.0220%" height="15" fill="rgb(231,119,3)" fg:x="420" fg:w="1"/><text x="9.4869%" y="447.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.02%)</title><rect x="9.2369%" y="421" width="0.0220%" height="15" fill="rgb(216,97,11)" fg:x="420" fg:w="1"/><text x="9.4869%" y="431.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.02%)</title><rect x="9.2369%" y="405" width="0.0220%" height="15" fill="rgb(223,59,9)" fg:x="420" fg:w="1"/><text x="9.4869%" y="415.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="9.2369%" y="389" width="0.0220%" height="15" fill="rgb(233,93,31)" fg:x="420" fg:w="1"/><text x="9.4869%" y="399.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow::_{{closure}} (1 samples, 0.02%)</title><rect x="9.2369%" y="373" width="0.0220%" height="15" fill="rgb(239,81,33)" fg:x="420" fg:w="1"/><text x="9.4869%" y="383.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output (1 samples, 0.02%)</title><rect x="9.2369%" y="357" width="0.0220%" height="15" fill="rgb(213,120,34)" fg:x="420" fg:w="1"/><text x="9.4869%" y="367.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (1 samples, 0.02%)</title><rect x="9.2369%" y="341" width="0.0220%" height="15" fill="rgb(243,49,53)" fg:x="420" fg:w="1"/><text x="9.4869%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="9.2369%" y="325" width="0.0220%" height="15" fill="rgb(247,216,33)" fg:x="420" fg:w="1"/><text x="9.4869%" y="335.50"></text></g><g><title>day16::maze_walker::MazeRunner::new::_{{closure}} (39 samples, 0.86%)</title><rect x="9.2589%" y="533" width="0.8577%" height="15" fill="rgb(226,26,14)" fg:x="421" fg:w="39"/><text x="9.5089%" y="543.50"></text></g><g><title>[libc.so.6] (3 samples, 0.07%)</title><rect x="10.1605%" y="517" width="0.0660%" height="15" fill="rgb(215,49,53)" fg:x="462" fg:w="3"/><text x="10.4105%" y="527.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.11%)</title><rect x="11.5681%" y="501" width="0.1100%" height="15" fill="rgb(245,162,40)" fg:x="526" fg:w="5"/><text x="11.8181%" y="511.50"></text></g><g><title>core::ptr::read (2 samples, 0.04%)</title><rect x="11.6340%" y="485" width="0.0440%" height="15" fill="rgb(229,68,17)" fg:x="529" fg:w="2"/><text x="11.8840%" y="495.50"></text></g><g><title>&lt;tracing_core::metadata::Level as core::cmp::PartialOrd&lt;tracing_core::metadata::LevelFilter&gt;&gt;::le (2 samples, 0.04%)</title><rect x="11.6780%" y="501" width="0.0440%" height="15" fill="rgb(213,182,10)" fg:x="531" fg:w="2"/><text x="11.9280%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="11.7220%" y="501" width="0.0220%" height="15" fill="rgb(245,125,30)" fg:x="533" fg:w="1"/><text x="11.9720%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="11.7220%" y="485" width="0.0220%" height="15" fill="rgb(232,202,2)" fg:x="533" fg:w="1"/><text x="11.9720%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="11.7220%" y="469" width="0.0220%" height="15" fill="rgb(237,140,51)" fg:x="533" fg:w="1"/><text x="11.9720%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="11.7220%" y="453" width="0.0220%" height="15" fill="rgb(236,157,25)" fg:x="533" fg:w="1"/><text x="11.9720%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="11.7220%" y="437" width="0.0220%" height="15" fill="rgb(219,209,0)" fg:x="533" fg:w="1"/><text x="11.9720%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="11.7220%" y="421" width="0.0220%" height="15" fill="rgb(240,116,54)" fg:x="533" fg:w="1"/><text x="11.9720%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="11.7220%" y="405" width="0.0220%" height="15" fill="rgb(216,10,36)" fg:x="533" fg:w="1"/><text x="11.9720%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="11.7220%" y="389" width="0.0220%" height="15" fill="rgb(222,72,44)" fg:x="533" fg:w="1"/><text x="11.9720%" y="399.50"></text></g><g><title>[libc.so.6] (6 samples, 0.13%)</title><rect x="12.1619%" y="357" width="0.1320%" height="15" fill="rgb(232,159,9)" fg:x="553" fg:w="6"/><text x="12.4119%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;day16::Position&gt;&gt; (26 samples, 0.57%)</title><rect x="11.7440%" y="501" width="0.5718%" height="15" fill="rgb(210,39,32)" fg:x="534" fg:w="26"/><text x="11.9940%" y="511.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.57%)</title><rect x="11.7440%" y="485" width="0.5718%" height="15" fill="rgb(216,194,45)" fg:x="534" fg:w="26"/><text x="11.9940%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;day16::Position,alloc::alloc::Global&gt;&gt; (26 samples, 0.57%)</title><rect x="11.7440%" y="469" width="0.5718%" height="15" fill="rgb(218,18,35)" fg:x="534" fg:w="26"/><text x="11.9940%" y="479.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.57%)</title><rect x="11.7440%" y="453" width="0.5718%" height="15" fill="rgb(207,83,51)" fg:x="534" fg:w="26"/><text x="11.9940%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;day16::Position&gt;&gt; (25 samples, 0.55%)</title><rect x="11.7660%" y="437" width="0.5498%" height="15" fill="rgb(225,63,43)" fg:x="535" fg:w="25"/><text x="12.0160%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.55%)</title><rect x="11.7660%" y="421" width="0.5498%" height="15" fill="rgb(207,57,36)" fg:x="535" fg:w="25"/><text x="12.0160%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (25 samples, 0.55%)</title><rect x="11.7660%" y="405" width="0.5498%" height="15" fill="rgb(216,99,33)" fg:x="535" fg:w="25"/><text x="12.0160%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (25 samples, 0.55%)</title><rect x="11.7660%" y="389" width="0.5498%" height="15" fill="rgb(225,42,16)" fg:x="535" fg:w="25"/><text x="12.0160%" y="399.50"></text></g><g><title>cfree (25 samples, 0.55%)</title><rect x="11.7660%" y="373" width="0.5498%" height="15" fill="rgb(220,201,45)" fg:x="535" fg:w="25"/><text x="12.0160%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="12.2938%" y="357" width="0.0220%" height="15" fill="rgb(225,33,4)" fg:x="559" fg:w="1"/><text x="12.5438%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="12.2938%" y="341" width="0.0220%" height="15" fill="rgb(224,33,50)" fg:x="559" fg:w="1"/><text x="12.5438%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="12.2938%" y="325" width="0.0220%" height="15" fill="rgb(246,198,51)" fg:x="559" fg:w="1"/><text x="12.5438%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="12.2938%" y="309" width="0.0220%" height="15" fill="rgb(205,22,4)" fg:x="559" fg:w="1"/><text x="12.5438%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="12.2938%" y="293" width="0.0220%" height="15" fill="rgb(206,3,8)" fg:x="559" fg:w="1"/><text x="12.5438%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="12.2938%" y="277" width="0.0220%" height="15" fill="rgb(251,23,15)" fg:x="559" fg:w="1"/><text x="12.5438%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="12.2938%" y="261" width="0.0220%" height="15" fill="rgb(252,88,28)" fg:x="559" fg:w="1"/><text x="12.5438%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="12.2938%" y="245" width="0.0220%" height="15" fill="rgb(212,127,14)" fg:x="559" fg:w="1"/><text x="12.5438%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="12.2938%" y="229" width="0.0220%" height="15" fill="rgb(247,145,37)" fg:x="559" fg:w="1"/><text x="12.5438%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="12.2938%" y="213" width="0.0220%" height="15" fill="rgb(209,117,53)" fg:x="559" fg:w="1"/><text x="12.5438%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::mpsc::bounded::Sender&lt;day16::maze_walker::BeamUpdate&gt;::send::{{closure}}&gt; (1 samples, 0.02%)</title><rect x="12.3158%" y="501" width="0.0220%" height="15" fill="rgb(212,90,42)" fg:x="560" fg:w="1"/><text x="12.5658%" y="511.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (1 samples, 0.02%)</title><rect x="12.3378%" y="501" width="0.0220%" height="15" fill="rgb(218,164,37)" fg:x="561" fg:w="1"/><text x="12.5878%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="12.3818%" y="405" width="0.0220%" height="15" fill="rgb(246,65,34)" fg:x="563" fg:w="1"/><text x="12.6318%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="12.3818%" y="389" width="0.0220%" height="15" fill="rgb(231,100,33)" fg:x="563" fg:w="1"/><text x="12.6318%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="12.3818%" y="373" width="0.0220%" height="15" fill="rgb(228,126,14)" fg:x="563" fg:w="1"/><text x="12.6318%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.04%)</title><rect x="12.3818%" y="437" width="0.0440%" height="15" fill="rgb(215,173,21)" fg:x="563" fg:w="2"/><text x="12.6318%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.04%)</title><rect x="12.3818%" y="421" width="0.0440%" height="15" fill="rgb(210,6,40)" fg:x="563" fg:w="2"/><text x="12.6318%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.02%)</title><rect x="12.4038%" y="405" width="0.0220%" height="15" fill="rgb(212,48,18)" fg:x="564" fg:w="1"/><text x="12.6538%" y="415.50"></text></g><g><title>&lt;day16::Position as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="12.4038%" y="389" width="0.0220%" height="15" fill="rgb(230,214,11)" fg:x="564" fg:w="1"/><text x="12.6538%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.02%)</title><rect x="12.4038%" y="373" width="0.0220%" height="15" fill="rgb(254,105,39)" fg:x="564" fg:w="1"/><text x="12.6538%" y="383.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.02%)</title><rect x="12.4038%" y="357" width="0.0220%" height="15" fill="rgb(245,158,5)" fg:x="564" fg:w="1"/><text x="12.6538%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::to_ne_bytes (1 samples, 0.02%)</title><rect x="12.4038%" y="341" width="0.0220%" height="15" fill="rgb(249,208,11)" fg:x="564" fg:w="1"/><text x="12.6538%" y="351.50"></text></g><g><title>day16::SparseGrid&lt;T&gt;::get (4 samples, 0.09%)</title><rect x="12.3598%" y="501" width="0.0880%" height="15" fill="rgb(210,39,28)" fg:x="562" fg:w="4"/><text x="12.6098%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.09%)</title><rect x="12.3598%" y="485" width="0.0880%" height="15" fill="rgb(211,56,53)" fg:x="562" fg:w="4"/><text x="12.6098%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4 samples, 0.09%)</title><rect x="12.3598%" y="469" width="0.0880%" height="15" fill="rgb(226,201,30)" fg:x="562" fg:w="4"/><text x="12.6098%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.09%)</title><rect x="12.3598%" y="453" width="0.0880%" height="15" fill="rgb(239,101,34)" fg:x="562" fg:w="4"/><text x="12.6098%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.02%)</title><rect x="12.4258%" y="437" width="0.0220%" height="15" fill="rgb(226,209,5)" fg:x="565" fg:w="1"/><text x="12.6758%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="12.4258%" y="421" width="0.0220%" height="15" fill="rgb(250,105,47)" fg:x="565" fg:w="1"/><text x="12.6758%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.02%)</title><rect x="12.4258%" y="405" width="0.0220%" height="15" fill="rgb(230,72,3)" fg:x="565" fg:w="1"/><text x="12.6758%" y="415.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (6 samples, 0.13%)</title><rect x="13.5914%" y="309" width="0.1320%" height="15" fill="rgb(232,218,39)" fg:x="618" fg:w="6"/><text x="13.8414%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.64%)</title><rect x="13.1735%" y="325" width="0.6378%" height="15" fill="rgb(248,166,6)" fg:x="599" fg:w="29"/><text x="13.4235%" y="335.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (4 samples, 0.09%)</title><rect x="13.7233%" y="309" width="0.0880%" height="15" fill="rgb(247,89,20)" fg:x="624" fg:w="4"/><text x="13.9733%" y="319.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (97 samples, 2.13%)</title><rect x="13.8113%" y="325" width="2.1333%" height="15" fill="rgb(248,130,54)" fg:x="628" fg:w="97"/><text x="14.0613%" y="335.50">h..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (97 samples, 2.13%)</title><rect x="13.8113%" y="309" width="2.1333%" height="15" fill="rgb(234,196,4)" fg:x="628" fg:w="97"/><text x="14.0613%" y="319.50">c..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (20 samples, 0.44%)</title><rect x="15.5047%" y="293" width="0.4399%" height="15" fill="rgb(250,143,31)" fg:x="705" fg:w="20"/><text x="15.7547%" y="303.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (23 samples, 0.51%)</title><rect x="15.9446%" y="325" width="0.5058%" height="15" fill="rgb(211,110,34)" fg:x="725" fg:w="23"/><text x="16.1946%" y="335.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (23 samples, 0.51%)</title><rect x="15.9446%" y="309" width="0.5058%" height="15" fill="rgb(215,124,48)" fg:x="725" fg:w="23"/><text x="16.1946%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (175 samples, 3.85%)</title><rect x="12.8216%" y="389" width="3.8487%" height="15" fill="rgb(216,46,13)" fg:x="583" fg:w="175"/><text x="13.0716%" y="399.50">&lt;std..</text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (175 samples, 3.85%)</title><rect x="12.8216%" y="373" width="3.8487%" height="15" fill="rgb(205,184,25)" fg:x="583" fg:w="175"/><text x="13.0716%" y="383.50">&lt;has..</text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (175 samples, 3.85%)</title><rect x="12.8216%" y="357" width="3.8487%" height="15" fill="rgb(228,1,10)" fg:x="583" fg:w="175"/><text x="13.0716%" y="367.50">&lt;has..</text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (159 samples, 3.50%)</title><rect x="13.1735%" y="341" width="3.4968%" height="15" fill="rgb(213,116,27)" fg:x="599" fg:w="159"/><text x="13.4235%" y="351.50">has..</text></g><g><title>hashbrown::raw::sse2::Group::match_full (10 samples, 0.22%)</title><rect x="16.4504%" y="325" width="0.2199%" height="15" fill="rgb(241,95,50)" fg:x="748" fg:w="10"/><text x="16.7004%" y="335.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (10 samples, 0.22%)</title><rect x="16.4504%" y="309" width="0.2199%" height="15" fill="rgb(238,48,32)" fg:x="748" fg:w="10"/><text x="16.7004%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (10 samples, 0.22%)</title><rect x="16.4504%" y="293" width="0.2199%" height="15" fill="rgb(235,113,49)" fg:x="748" fg:w="10"/><text x="16.7004%" y="303.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (5 samples, 0.11%)</title><rect x="16.6703%" y="373" width="0.1100%" height="15" fill="rgb(205,127,43)" fg:x="758" fg:w="5"/><text x="16.9203%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by::fold::_{{closure}} (5 samples, 0.11%)</title><rect x="16.6703%" y="357" width="0.1100%" height="15" fill="rgb(250,162,2)" fg:x="758" fg:w="5"/><text x="16.9203%" y="367.50"></text></g><g><title>core::cmp::max_by (5 samples, 0.11%)</title><rect x="16.6703%" y="341" width="0.1100%" height="15" fill="rgb(220,13,41)" fg:x="758" fg:w="5"/><text x="16.9203%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (416 samples, 9.15%)</title><rect x="12.5357%" y="437" width="9.1489%" height="15" fill="rgb(249,221,25)" fg:x="570" fg:w="416"/><text x="12.7857%" y="447.50">&lt;core::iter::..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (416 samples, 9.15%)</title><rect x="12.5357%" y="421" width="9.1489%" height="15" fill="rgb(215,208,19)" fg:x="570" fg:w="416"/><text x="12.7857%" y="431.50">&lt;core::iter::..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (416 samples, 9.15%)</title><rect x="12.5357%" y="405" width="9.1489%" height="15" fill="rgb(236,175,2)" fg:x="570" fg:w="416"/><text x="12.7857%" y="415.50">core::iter::t..</text></g><g><title>core::iter::adapters::filter::filter_fold::_{{closure}} (228 samples, 5.01%)</title><rect x="16.6703%" y="389" width="5.0143%" height="15" fill="rgb(241,52,2)" fg:x="758" fg:w="228"/><text x="16.9203%" y="399.50">core::..</text></g><g><title>day16::SparseGrid&lt;T&gt;::next_in_direction::_{{closure}} (223 samples, 4.90%)</title><rect x="16.7803%" y="373" width="4.9043%" height="15" fill="rgb(248,140,14)" fg:x="763" fg:w="223"/><text x="17.0303%" y="383.50">day16:..</text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (4 samples, 0.09%)</title><rect x="22.0365%" y="293" width="0.0880%" height="15" fill="rgb(253,22,42)" fg:x="1002" fg:w="4"/><text x="22.2865%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.62%)</title><rect x="21.7946%" y="309" width="0.6158%" height="15" fill="rgb(234,61,47)" fg:x="991" fg:w="28"/><text x="22.0446%" y="319.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (13 samples, 0.29%)</title><rect x="22.1245%" y="293" width="0.2859%" height="15" fill="rgb(208,226,15)" fg:x="1006" fg:w="13"/><text x="22.3745%" y="303.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (31 samples, 0.68%)</title><rect x="22.4104%" y="309" width="0.6818%" height="15" fill="rgb(217,221,4)" fg:x="1019" fg:w="31"/><text x="22.6604%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (31 samples, 0.68%)</title><rect x="22.4104%" y="293" width="0.6818%" height="15" fill="rgb(212,174,34)" fg:x="1019" fg:w="31"/><text x="22.6604%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (9 samples, 0.20%)</title><rect x="22.8942%" y="277" width="0.1979%" height="15" fill="rgb(253,83,4)" fg:x="1041" fg:w="9"/><text x="23.1442%" y="287.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (17 samples, 0.37%)</title><rect x="23.0921%" y="309" width="0.3739%" height="15" fill="rgb(250,195,49)" fg:x="1050" fg:w="17"/><text x="23.3421%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (17 samples, 0.37%)</title><rect x="23.0921%" y="293" width="0.3739%" height="15" fill="rgb(241,192,25)" fg:x="1050" fg:w="17"/><text x="23.3421%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (89 samples, 1.96%)</title><rect x="21.6846%" y="373" width="1.9573%" height="15" fill="rgb(208,124,10)" fg:x="986" fg:w="89"/><text x="21.9346%" y="383.50">&lt;..</text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (89 samples, 1.96%)</title><rect x="21.6846%" y="357" width="1.9573%" height="15" fill="rgb(222,33,0)" fg:x="986" fg:w="89"/><text x="21.9346%" y="367.50">&lt;..</text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (89 samples, 1.96%)</title><rect x="21.6846%" y="341" width="1.9573%" height="15" fill="rgb(234,209,28)" fg:x="986" fg:w="89"/><text x="21.9346%" y="351.50">&lt;..</text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (84 samples, 1.85%)</title><rect x="21.7946%" y="325" width="1.8474%" height="15" fill="rgb(224,11,23)" fg:x="991" fg:w="84"/><text x="22.0446%" y="335.50">h..</text></g><g><title>hashbrown::raw::sse2::Group::match_full (8 samples, 0.18%)</title><rect x="23.4660%" y="309" width="0.1759%" height="15" fill="rgb(232,99,1)" fg:x="1067" fg:w="8"/><text x="23.7160%" y="319.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (8 samples, 0.18%)</title><rect x="23.4660%" y="293" width="0.1759%" height="15" fill="rgb(237,95,45)" fg:x="1067" fg:w="8"/><text x="23.7160%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (8 samples, 0.18%)</title><rect x="23.4660%" y="277" width="0.1759%" height="15" fill="rgb(208,109,11)" fg:x="1067" fg:w="8"/><text x="23.7160%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by_key (586 samples, 12.89%)</title><rect x="12.5137%" y="485" width="12.8876%" height="15" fill="rgb(216,190,48)" fg:x="569" fg:w="586"/><text x="12.7637%" y="495.50">core::iter::traits:..</text></g><g><title>core::iter::traits::iterator::Iterator::max_by (586 samples, 12.89%)</title><rect x="12.5137%" y="469" width="12.8876%" height="15" fill="rgb(251,171,36)" fg:x="569" fg:w="586"/><text x="12.7637%" y="479.50">core::iter::traits:..</text></g><g><title>core::iter::traits::iterator::Iterator::reduce (586 samples, 12.89%)</title><rect x="12.5137%" y="453" width="12.8876%" height="15" fill="rgb(230,62,22)" fg:x="569" fg:w="586"/><text x="12.7637%" y="463.50">core::iter::traits:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (169 samples, 3.72%)</title><rect x="21.6846%" y="437" width="3.7167%" height="15" fill="rgb(225,114,35)" fg:x="986" fg:w="169"/><text x="21.9346%" y="447.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (169 samples, 3.72%)</title><rect x="21.6846%" y="421" width="3.7167%" height="15" fill="rgb(215,118,42)" fg:x="986" fg:w="169"/><text x="21.9346%" y="431.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::find (169 samples, 3.72%)</title><rect x="21.6846%" y="405" width="3.7167%" height="15" fill="rgb(243,119,21)" fg:x="986" fg:w="169"/><text x="21.9346%" y="415.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (169 samples, 3.72%)</title><rect x="21.6846%" y="389" width="3.7167%" height="15" fill="rgb(252,177,53)" fg:x="986" fg:w="169"/><text x="21.9346%" y="399.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (80 samples, 1.76%)</title><rect x="23.6420%" y="373" width="1.7594%" height="15" fill="rgb(237,209,29)" fg:x="1075" fg:w="80"/><text x="23.8920%" y="383.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (80 samples, 1.76%)</title><rect x="23.6420%" y="357" width="1.7594%" height="15" fill="rgb(212,65,23)" fg:x="1075" fg:w="80"/><text x="23.8920%" y="367.50"></text></g><g><title>day16::SparseGrid&lt;T&gt;::next_in_direction::_{{closure}} (80 samples, 1.76%)</title><rect x="23.6420%" y="341" width="1.7594%" height="15" fill="rgb(230,222,46)" fg:x="1075" fg:w="80"/><text x="23.8920%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.75%)</title><rect x="26.1931%" y="325" width="0.7477%" height="15" fill="rgb(215,135,32)" fg:x="1191" fg:w="34"/><text x="26.4431%" y="335.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (12 samples, 0.26%)</title><rect x="26.6769%" y="309" width="0.2639%" height="15" fill="rgb(246,101,22)" fg:x="1213" fg:w="12"/><text x="26.9269%" y="319.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (119 samples, 2.62%)</title><rect x="26.9408%" y="325" width="2.6171%" height="15" fill="rgb(206,107,13)" fg:x="1225" fg:w="119"/><text x="27.1908%" y="335.50">ha..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (119 samples, 2.62%)</title><rect x="26.9408%" y="309" width="2.6171%" height="15" fill="rgb(250,100,44)" fg:x="1225" fg:w="119"/><text x="27.1908%" y="319.50">co..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (27 samples, 0.59%)</title><rect x="28.9642%" y="293" width="0.5938%" height="15" fill="rgb(231,147,38)" fg:x="1317" fg:w="27"/><text x="29.2142%" y="303.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (41 samples, 0.90%)</title><rect x="29.5580%" y="325" width="0.9017%" height="15" fill="rgb(229,8,40)" fg:x="1344" fg:w="41"/><text x="29.8080%" y="335.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (41 samples, 0.90%)</title><rect x="29.5580%" y="309" width="0.9017%" height="15" fill="rgb(221,135,30)" fg:x="1344" fg:w="41"/><text x="29.8080%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (232 samples, 5.10%)</title><rect x="25.7972%" y="389" width="5.1023%" height="15" fill="rgb(249,193,18)" fg:x="1173" fg:w="232"/><text x="26.0472%" y="399.50">&lt;std::..</text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (232 samples, 5.10%)</title><rect x="25.7972%" y="373" width="5.1023%" height="15" fill="rgb(209,133,39)" fg:x="1173" fg:w="232"/><text x="26.0472%" y="383.50">&lt;hashb..</text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (232 samples, 5.10%)</title><rect x="25.7972%" y="357" width="5.1023%" height="15" fill="rgb(232,100,14)" fg:x="1173" fg:w="232"/><text x="26.0472%" y="367.50">&lt;hashb..</text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (214 samples, 4.71%)</title><rect x="26.1931%" y="341" width="4.7064%" height="15" fill="rgb(224,185,1)" fg:x="1191" fg:w="214"/><text x="26.4431%" y="351.50">hashb..</text></g><g><title>hashbrown::raw::sse2::Group::match_full (20 samples, 0.44%)</title><rect x="30.4596%" y="325" width="0.4399%" height="15" fill="rgb(223,139,8)" fg:x="1385" fg:w="20"/><text x="30.7096%" y="335.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (20 samples, 0.44%)</title><rect x="30.4596%" y="309" width="0.4399%" height="15" fill="rgb(232,213,38)" fg:x="1385" fg:w="20"/><text x="30.7096%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (20 samples, 0.44%)</title><rect x="30.4596%" y="293" width="0.4399%" height="15" fill="rgb(207,94,22)" fg:x="1385" fg:w="20"/><text x="30.7096%" y="303.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (4 samples, 0.09%)</title><rect x="30.9215%" y="373" width="0.0880%" height="15" fill="rgb(219,183,54)" fg:x="1406" fg:w="4"/><text x="31.1715%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by::fold::_{{closure}} (4 samples, 0.09%)</title><rect x="30.9215%" y="357" width="0.0880%" height="15" fill="rgb(216,185,54)" fg:x="1406" fg:w="4"/><text x="31.1715%" y="367.50"></text></g><g><title>core::cmp::min_by (4 samples, 0.09%)</title><rect x="30.9215%" y="341" width="0.0880%" height="15" fill="rgb(254,217,39)" fg:x="1406" fg:w="4"/><text x="31.1715%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (583 samples, 12.82%)</title><rect x="25.4234%" y="437" width="12.8216%" height="15" fill="rgb(240,178,23)" fg:x="1156" fg:w="583"/><text x="25.6734%" y="447.50">&lt;core::iter::adapte..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (583 samples, 12.82%)</title><rect x="25.4234%" y="421" width="12.8216%" height="15" fill="rgb(218,11,47)" fg:x="1156" fg:w="583"/><text x="25.6734%" y="431.50">&lt;core::iter::adapte..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (583 samples, 12.82%)</title><rect x="25.4234%" y="405" width="12.8216%" height="15" fill="rgb(218,51,51)" fg:x="1156" fg:w="583"/><text x="25.6734%" y="415.50">core::iter::traits:..</text></g><g><title>core::iter::adapters::filter::filter_fold::_{{closure}} (334 samples, 7.35%)</title><rect x="30.8995%" y="389" width="7.3455%" height="15" fill="rgb(238,126,27)" fg:x="1405" fg:w="334"/><text x="31.1495%" y="399.50">core::iter..</text></g><g><title>day16::SparseGrid&lt;T&gt;::next_in_direction::_{{closure}} (329 samples, 7.24%)</title><rect x="31.0095%" y="373" width="7.2355%" height="15" fill="rgb(249,202,22)" fg:x="1410" fg:w="329"/><text x="31.2595%" y="383.50">day16::Spa..</text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (5 samples, 0.11%)</title><rect x="38.5749%" y="293" width="0.1100%" height="15" fill="rgb(254,195,49)" fg:x="1754" fg:w="5"/><text x="38.8249%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.59%)</title><rect x="38.3550%" y="309" width="0.5938%" height="15" fill="rgb(208,123,14)" fg:x="1744" fg:w="27"/><text x="38.6050%" y="319.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (12 samples, 0.26%)</title><rect x="38.6848%" y="293" width="0.2639%" height="15" fill="rgb(224,200,8)" fg:x="1759" fg:w="12"/><text x="38.9348%" y="303.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (36 samples, 0.79%)</title><rect x="38.9488%" y="309" width="0.7917%" height="15" fill="rgb(217,61,36)" fg:x="1771" fg:w="36"/><text x="39.1988%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (36 samples, 0.79%)</title><rect x="38.9488%" y="293" width="0.7917%" height="15" fill="rgb(206,35,45)" fg:x="1771" fg:w="36"/><text x="39.1988%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (10 samples, 0.22%)</title><rect x="39.5206%" y="277" width="0.2199%" height="15" fill="rgb(217,65,33)" fg:x="1797" fg:w="10"/><text x="39.7706%" y="287.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (18 samples, 0.40%)</title><rect x="39.7405%" y="309" width="0.3959%" height="15" fill="rgb(222,158,48)" fg:x="1807" fg:w="18"/><text x="39.9905%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (18 samples, 0.40%)</title><rect x="39.7405%" y="293" width="0.3959%" height="15" fill="rgb(254,2,54)" fg:x="1807" fg:w="18"/><text x="39.9905%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 samples, 2.09%)</title><rect x="38.2450%" y="373" width="2.0893%" height="15" fill="rgb(250,143,38)" fg:x="1739" fg:w="95"/><text x="38.4950%" y="383.50">&lt;..</text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 samples, 2.09%)</title><rect x="38.2450%" y="357" width="2.0893%" height="15" fill="rgb(248,25,0)" fg:x="1739" fg:w="95"/><text x="38.4950%" y="367.50">&lt;..</text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 samples, 2.09%)</title><rect x="38.2450%" y="341" width="2.0893%" height="15" fill="rgb(206,152,27)" fg:x="1739" fg:w="95"/><text x="38.4950%" y="351.50">&lt;..</text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (90 samples, 1.98%)</title><rect x="38.3550%" y="325" width="1.9793%" height="15" fill="rgb(240,77,30)" fg:x="1744" fg:w="90"/><text x="38.6050%" y="335.50">h..</text></g><g><title>hashbrown::raw::sse2::Group::match_full (9 samples, 0.20%)</title><rect x="40.1364%" y="309" width="0.1979%" height="15" fill="rgb(231,5,3)" fg:x="1825" fg:w="9"/><text x="40.3864%" y="319.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (9 samples, 0.20%)</title><rect x="40.1364%" y="293" width="0.1979%" height="15" fill="rgb(207,226,32)" fg:x="1825" fg:w="9"/><text x="40.3864%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (9 samples, 0.20%)</title><rect x="40.1364%" y="277" width="0.1979%" height="15" fill="rgb(222,207,47)" fg:x="1825" fg:w="9"/><text x="40.3864%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by_key (787 samples, 17.31%)</title><rect x="25.4014%" y="485" width="17.3081%" height="15" fill="rgb(229,115,45)" fg:x="1155" fg:w="787"/><text x="25.6514%" y="495.50">core::iter::traits::iterato..</text></g><g><title>core::iter::traits::iterator::Iterator::min_by (787 samples, 17.31%)</title><rect x="25.4014%" y="469" width="17.3081%" height="15" fill="rgb(224,191,6)" fg:x="1155" fg:w="787"/><text x="25.6514%" y="479.50">core::iter::traits::iterato..</text></g><g><title>core::iter::traits::iterator::Iterator::reduce (787 samples, 17.31%)</title><rect x="25.4014%" y="453" width="17.3081%" height="15" fill="rgb(230,227,24)" fg:x="1155" fg:w="787"/><text x="25.6514%" y="463.50">core::iter::traits::iterato..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (203 samples, 4.46%)</title><rect x="38.2450%" y="437" width="4.4645%" height="15" fill="rgb(228,80,19)" fg:x="1739" fg:w="203"/><text x="38.4950%" y="447.50">&lt;core..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (203 samples, 4.46%)</title><rect x="38.2450%" y="421" width="4.4645%" height="15" fill="rgb(247,229,0)" fg:x="1739" fg:w="203"/><text x="38.4950%" y="431.50">&lt;core..</text></g><g><title>core::iter::traits::iterator::Iterator::find (203 samples, 4.46%)</title><rect x="38.2450%" y="405" width="4.4645%" height="15" fill="rgb(237,194,15)" fg:x="1739" fg:w="203"/><text x="38.4950%" y="415.50">core:..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (203 samples, 4.46%)</title><rect x="38.2450%" y="389" width="4.4645%" height="15" fill="rgb(219,203,20)" fg:x="1739" fg:w="203"/><text x="38.4950%" y="399.50">core:..</text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (108 samples, 2.38%)</title><rect x="40.3343%" y="373" width="2.3752%" height="15" fill="rgb(234,128,8)" fg:x="1834" fg:w="108"/><text x="40.5843%" y="383.50">co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (108 samples, 2.38%)</title><rect x="40.3343%" y="357" width="2.3752%" height="15" fill="rgb(248,202,8)" fg:x="1834" fg:w="108"/><text x="40.5843%" y="367.50">co..</text></g><g><title>day16::SparseGrid&lt;T&gt;::next_in_direction::_{{closure}} (108 samples, 2.38%)</title><rect x="40.3343%" y="341" width="2.3752%" height="15" fill="rgb(206,104,37)" fg:x="1834" fg:w="108"/><text x="40.5843%" y="351.50">da..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (6 samples, 0.13%)</title><rect x="42.7095%" y="421" width="0.1320%" height="15" fill="rgb(223,8,27)" fg:x="1942" fg:w="6"/><text x="42.9595%" y="431.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::invert (2 samples, 0.04%)</title><rect x="42.8414%" y="405" width="0.0440%" height="15" fill="rgb(216,217,28)" fg:x="1948" fg:w="2"/><text x="43.0914%" y="415.50"></text></g><g><title>day16::SparseGrid&lt;T&gt;::next_in_direction (1,388 samples, 30.53%)</title><rect x="12.4478%" y="501" width="30.5256%" height="15" fill="rgb(249,199,1)" fg:x="566" fg:w="1388"/><text x="12.6978%" y="511.50">day16::SparseGrid&lt;T&gt;::next_in_direction</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (12 samples, 0.26%)</title><rect x="42.7095%" y="485" width="0.2639%" height="15" fill="rgb(240,85,17)" fg:x="1942" fg:w="12"/><text x="42.9595%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (12 samples, 0.26%)</title><rect x="42.7095%" y="469" width="0.2639%" height="15" fill="rgb(206,108,45)" fg:x="1942" fg:w="12"/><text x="42.9595%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (12 samples, 0.26%)</title><rect x="42.7095%" y="453" width="0.2639%" height="15" fill="rgb(245,210,41)" fg:x="1942" fg:w="12"/><text x="42.9595%" y="463.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (12 samples, 0.26%)</title><rect x="42.7095%" y="437" width="0.2639%" height="15" fill="rgb(206,13,37)" fg:x="1942" fg:w="12"/><text x="42.9595%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (6 samples, 0.13%)</title><rect x="42.8414%" y="421" width="0.1320%" height="15" fill="rgb(250,61,18)" fg:x="1948" fg:w="6"/><text x="43.0914%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (4 samples, 0.09%)</title><rect x="42.8854%" y="405" width="0.0880%" height="15" fill="rgb(235,172,48)" fg:x="1950" fg:w="4"/><text x="43.1354%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.09%)</title><rect x="42.8854%" y="389" width="0.0880%" height="15" fill="rgb(249,201,17)" fg:x="1950" fg:w="4"/><text x="43.1354%" y="399.50"></text></g><g><title>day16::maze_walker::BeamLocation::travelling_horizontally (1 samples, 0.02%)</title><rect x="42.9734%" y="501" width="0.0220%" height="15" fill="rgb(219,208,6)" fg:x="1954" fg:w="1"/><text x="43.2234%" y="511.50"></text></g><g><title>day16::maze_walker::BeamLocation::travelling_vertically (1 samples, 0.02%)</title><rect x="42.9734%" y="485" width="0.0220%" height="15" fill="rgb(248,31,23)" fg:x="1954" fg:w="1"/><text x="43.2234%" y="495.50"></text></g><g><title>day16::maze_walker::BeamLocation::travelling_vertically (1 samples, 0.02%)</title><rect x="42.9954%" y="501" width="0.0220%" height="15" fill="rgb(245,15,42)" fg:x="1955" fg:w="1"/><text x="43.2454%" y="511.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (2 samples, 0.04%)</title><rect x="43.0174%" y="293" width="0.0440%" height="15" fill="rgb(222,217,39)" fg:x="1956" fg:w="2"/><text x="43.2674%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (4 samples, 0.09%)</title><rect x="43.0174%" y="325" width="0.0880%" height="15" fill="rgb(210,219,27)" fg:x="1956" fg:w="4"/><text x="43.2674%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (4 samples, 0.09%)</title><rect x="43.0174%" y="309" width="0.0880%" height="15" fill="rgb(252,166,36)" fg:x="1956" fg:w="4"/><text x="43.2674%" y="319.50"></text></g><g><title>core::ptr::write (2 samples, 0.04%)</title><rect x="43.0614%" y="293" width="0.0440%" height="15" fill="rgb(245,132,34)" fg:x="1958" fg:w="2"/><text x="43.3114%" y="303.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (7 samples, 0.15%)</title><rect x="43.0174%" y="341" width="0.1539%" height="15" fill="rgb(236,54,3)" fg:x="1956" fg:w="7"/><text x="43.2674%" y="351.50"></text></g><g><title>day16::maze_walker::BeamWalker::run::_{{closure}}::_{{closure}} (3 samples, 0.07%)</title><rect x="43.1053%" y="325" width="0.0660%" height="15" fill="rgb(241,173,43)" fg:x="1960" fg:w="3"/><text x="43.3553%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (8 samples, 0.18%)</title><rect x="43.0174%" y="421" width="0.1759%" height="15" fill="rgb(215,190,9)" fg:x="1956" fg:w="8"/><text x="43.2674%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (8 samples, 0.18%)</title><rect x="43.0174%" y="405" width="0.1759%" height="15" fill="rgb(242,101,16)" fg:x="1956" fg:w="8"/><text x="43.2674%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (8 samples, 0.18%)</title><rect x="43.0174%" y="389" width="0.1759%" height="15" fill="rgb(223,190,21)" fg:x="1956" fg:w="8"/><text x="43.2674%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.18%)</title><rect x="43.0174%" y="373" width="0.1759%" height="15" fill="rgb(215,228,25)" fg:x="1956" fg:w="8"/><text x="43.2674%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (8 samples, 0.18%)</title><rect x="43.0174%" y="357" width="0.1759%" height="15" fill="rgb(225,36,22)" fg:x="1956" fg:w="8"/><text x="43.2674%" y="367.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="43.1713%" y="341" width="0.0220%" height="15" fill="rgb(251,106,46)" fg:x="1963" fg:w="1"/><text x="43.4213%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="43.1713%" y="325" width="0.0220%" height="15" fill="rgb(208,90,1)" fg:x="1963" fg:w="1"/><text x="43.4213%" y="335.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="43.2373%" y="309" width="0.0220%" height="15" fill="rgb(243,10,4)" fg:x="1966" fg:w="1"/><text x="43.4873%" y="319.50"></text></g><g><title>itertools::Itertools::collect_vec (34 samples, 0.75%)</title><rect x="43.0174%" y="501" width="0.7477%" height="15" fill="rgb(212,137,27)" fg:x="1956" fg:w="34"/><text x="43.2674%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (34 samples, 0.75%)</title><rect x="43.0174%" y="485" width="0.7477%" height="15" fill="rgb(231,220,49)" fg:x="1956" fg:w="34"/><text x="43.2674%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (34 samples, 0.75%)</title><rect x="43.0174%" y="469" width="0.7477%" height="15" fill="rgb(237,96,20)" fg:x="1956" fg:w="34"/><text x="43.2674%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (34 samples, 0.75%)</title><rect x="43.0174%" y="453" width="0.7477%" height="15" fill="rgb(239,229,30)" fg:x="1956" fg:w="34"/><text x="43.2674%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (34 samples, 0.75%)</title><rect x="43.0174%" y="437" width="0.7477%" height="15" fill="rgb(219,65,33)" fg:x="1956" fg:w="34"/><text x="43.2674%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (26 samples, 0.57%)</title><rect x="43.1933%" y="421" width="0.5718%" height="15" fill="rgb(243,134,7)" fg:x="1964" fg:w="26"/><text x="43.4433%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (26 samples, 0.57%)</title><rect x="43.1933%" y="405" width="0.5718%" height="15" fill="rgb(216,177,54)" fg:x="1964" fg:w="26"/><text x="43.4433%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (26 samples, 0.57%)</title><rect x="43.1933%" y="389" width="0.5718%" height="15" fill="rgb(211,160,20)" fg:x="1964" fg:w="26"/><text x="43.4433%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (26 samples, 0.57%)</title><rect x="43.1933%" y="373" width="0.5718%" height="15" fill="rgb(239,85,39)" fg:x="1964" fg:w="26"/><text x="43.4433%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (24 samples, 0.53%)</title><rect x="43.2373%" y="357" width="0.5278%" height="15" fill="rgb(232,125,22)" fg:x="1966" fg:w="24"/><text x="43.4873%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24 samples, 0.53%)</title><rect x="43.2373%" y="341" width="0.5278%" height="15" fill="rgb(244,57,34)" fg:x="1966" fg:w="24"/><text x="43.4873%" y="351.50"></text></g><g><title>alloc::alloc::alloc (24 samples, 0.53%)</title><rect x="43.2373%" y="325" width="0.5278%" height="15" fill="rgb(214,203,32)" fg:x="1966" fg:w="24"/><text x="43.4873%" y="335.50"></text></g><g><title>malloc (23 samples, 0.51%)</title><rect x="43.2593%" y="309" width="0.5058%" height="15" fill="rgb(207,58,43)" fg:x="1967" fg:w="23"/><text x="43.5093%" y="319.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="43.7211%" y="293" width="0.0440%" height="15" fill="rgb(215,193,15)" fg:x="1988" fg:w="2"/><text x="43.9711%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="44.9307%" y="485" width="0.0220%" height="15" fill="rgb(232,15,44)" fg:x="2043" fg:w="1"/><text x="45.1807%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="44.9307%" y="469" width="0.0220%" height="15" fill="rgb(212,3,48)" fg:x="2043" fg:w="1"/><text x="45.1807%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="44.9307%" y="453" width="0.0220%" height="15" fill="rgb(218,128,7)" fg:x="2043" fg:w="1"/><text x="45.1807%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="44.9307%" y="437" width="0.0220%" height="15" fill="rgb(226,216,39)" fg:x="2043" fg:w="1"/><text x="45.1807%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="44.9307%" y="421" width="0.0220%" height="15" fill="rgb(243,47,51)" fg:x="2043" fg:w="1"/><text x="45.1807%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="44.9307%" y="405" width="0.0220%" height="15" fill="rgb(241,183,40)" fg:x="2043" fg:w="1"/><text x="45.1807%" y="415.50"></text></g><g><title>&lt;tokio::loom::std::atomic_usize::AtomicUsize as core::ops::deref::Deref&gt;::deref (7 samples, 0.15%)</title><rect x="45.6125%" y="421" width="0.1539%" height="15" fill="rgb(231,217,32)" fg:x="2074" fg:w="7"/><text x="45.8625%" y="431.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (32 samples, 0.70%)</title><rect x="45.7664%" y="405" width="0.7038%" height="15" fill="rgb(229,61,38)" fg:x="2081" fg:w="32"/><text x="46.0164%" y="415.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::write::_{{closure}} (32 samples, 0.70%)</title><rect x="45.7664%" y="389" width="0.7038%" height="15" fill="rgb(225,210,5)" fg:x="2081" fg:w="32"/><text x="46.0164%" y="399.50"></text></g><g><title>core::ptr::write (32 samples, 0.70%)</title><rect x="45.7664%" y="373" width="0.7038%" height="15" fill="rgb(231,79,45)" fg:x="2081" fg:w="32"/><text x="46.0164%" y="383.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::write (41 samples, 0.90%)</title><rect x="45.7664%" y="421" width="0.9017%" height="15" fill="rgb(224,100,7)" fg:x="2081" fg:w="41"/><text x="46.0164%" y="431.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::set_ready (9 samples, 0.20%)</title><rect x="46.4702%" y="405" width="0.1979%" height="15" fill="rgb(241,198,18)" fg:x="2113" fg:w="9"/><text x="46.7202%" y="415.50"></text></g><g><title>&lt;tokio::loom::std::atomic_usize::AtomicUsize as core::ops::deref::Deref&gt;::deref (7 samples, 0.15%)</title><rect x="46.5142%" y="389" width="0.1539%" height="15" fill="rgb(252,97,53)" fg:x="2115" fg:w="7"/><text x="46.7642%" y="399.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.44%)</title><rect x="46.9540%" y="341" width="0.4399%" height="15" fill="rgb(220,88,7)" fg:x="2135" fg:w="20"/><text x="47.2040%" y="351.50"></text></g><g><title>malloc (19 samples, 0.42%)</title><rect x="46.9760%" y="325" width="0.4179%" height="15" fill="rgb(213,176,14)" fg:x="2136" fg:w="19"/><text x="47.2260%" y="335.50"></text></g><g><title>[libc.so.6] (17 samples, 0.37%)</title><rect x="47.0200%" y="309" width="0.3739%" height="15" fill="rgb(246,73,7)" fg:x="2138" fg:w="17"/><text x="47.2700%" y="319.50"></text></g><g><title>[libc.so.6] (9 samples, 0.20%)</title><rect x="47.1960%" y="293" width="0.1979%" height="15" fill="rgb(245,64,36)" fg:x="2146" fg:w="9"/><text x="47.4460%" y="303.50"></text></g><g><title>__mprotect (9 samples, 0.20%)</title><rect x="47.1960%" y="277" width="0.1979%" height="15" fill="rgb(245,80,10)" fg:x="2146" fg:w="9"/><text x="47.4460%" y="287.50"></text></g><g><title>[unknown] (9 samples, 0.20%)</title><rect x="47.1960%" y="261" width="0.1979%" height="15" fill="rgb(232,107,50)" fg:x="2146" fg:w="9"/><text x="47.4460%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (31 samples, 0.68%)</title><rect x="46.8661%" y="405" width="0.6818%" height="15" fill="rgb(253,3,0)" fg:x="2131" fg:w="31"/><text x="47.1161%" y="415.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::find_block::_{{closure}} (31 samples, 0.68%)</title><rect x="46.8661%" y="389" width="0.6818%" height="15" fill="rgb(212,99,53)" fg:x="2131" fg:w="31"/><text x="47.1161%" y="399.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::grow (31 samples, 0.68%)</title><rect x="46.8661%" y="373" width="0.6818%" height="15" fill="rgb(249,111,54)" fg:x="2131" fg:w="31"/><text x="47.1161%" y="383.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::new (30 samples, 0.66%)</title><rect x="46.8881%" y="357" width="0.6598%" height="15" fill="rgb(249,55,30)" fg:x="2132" fg:w="30"/><text x="47.1381%" y="367.50"></text></g><g><title>tokio::loom::std::atomic_usize::AtomicUsize::new (7 samples, 0.15%)</title><rect x="47.3939%" y="341" width="0.1539%" height="15" fill="rgb(237,47,42)" fg:x="2155" fg:w="7"/><text x="47.6439%" y="351.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::is_at_index (2 samples, 0.04%)</title><rect x="47.5478%" y="405" width="0.0440%" height="15" fill="rgb(211,20,18)" fg:x="2162" fg:w="2"/><text x="47.7978%" y="415.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::load_next (1 samples, 0.02%)</title><rect x="47.5918%" y="405" width="0.0220%" height="15" fill="rgb(231,203,46)" fg:x="2164" fg:w="1"/><text x="47.8418%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.02%)</title><rect x="47.5918%" y="389" width="0.0220%" height="15" fill="rgb(237,142,3)" fg:x="2164" fg:w="1"/><text x="47.8418%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="47.5918%" y="373" width="0.0220%" height="15" fill="rgb(241,107,1)" fg:x="2164" fg:w="1"/><text x="47.8418%" y="383.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::tx_release (1 samples, 0.02%)</title><rect x="47.6138%" y="405" width="0.0220%" height="15" fill="rgb(229,83,13)" fg:x="2165" fg:w="1"/><text x="47.8638%" y="415.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.02%)</title><rect x="47.6138%" y="389" width="0.0220%" height="15" fill="rgb(241,91,40)" fg:x="2165" fg:w="1"/><text x="47.8638%" y="399.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::tx_release::_{{closure}} (1 samples, 0.02%)</title><rect x="47.6138%" y="373" width="0.0220%" height="15" fill="rgb(225,3,45)" fg:x="2165" fg:w="1"/><text x="47.8638%" y="383.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (131 samples, 2.88%)</title><rect x="45.0187%" y="437" width="2.8810%" height="15" fill="rgb(244,223,14)" fg:x="2047" fg:w="131"/><text x="45.2687%" y="447.50">to..</text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::find_block (56 samples, 1.23%)</title><rect x="46.6681%" y="421" width="1.2316%" height="15" fill="rgb(224,124,37)" fg:x="2122" fg:w="56"/><text x="46.9181%" y="431.50"></text></g><g><title>tokio::sync::mpsc::block::start_index (12 samples, 0.26%)</title><rect x="47.6358%" y="405" width="0.2639%" height="15" fill="rgb(251,171,30)" fg:x="2166" fg:w="12"/><text x="47.8858%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (19 samples, 0.42%)</title><rect x="48.0976%" y="405" width="0.4179%" height="15" fill="rgb(236,46,54)" fg:x="2187" fg:w="19"/><text x="48.3476%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_or (19 samples, 0.42%)</title><rect x="48.0976%" y="389" width="0.4179%" height="15" fill="rgb(245,213,5)" fg:x="2187" fg:w="19"/><text x="48.3476%" y="399.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="48.5155%" y="341" width="0.0220%" height="15" fill="rgb(230,144,27)" fg:x="2206" fg:w="1"/><text x="48.7655%" y="351.50"></text></g><g><title>tokio::sync::mpsc::bounded::Permit&lt;T&gt;::send (166 samples, 3.65%)</title><rect x="44.9527%" y="485" width="3.6508%" height="15" fill="rgb(220,86,6)" fg:x="2044" fg:w="166"/><text x="45.2027%" y="495.50">toki..</text></g><g><title>tokio::sync::mpsc::chan::Tx&lt;T,S&gt;::send (166 samples, 3.65%)</title><rect x="44.9527%" y="469" width="3.6508%" height="15" fill="rgb(240,20,13)" fg:x="2044" fg:w="166"/><text x="45.2027%" y="479.50">toki..</text></g><g><title>tokio::sync::mpsc::chan::Chan&lt;T,S&gt;::send (164 samples, 3.61%)</title><rect x="44.9967%" y="453" width="3.6068%" height="15" fill="rgb(217,89,34)" fg:x="2046" fg:w="164"/><text x="45.2467%" y="463.50">toki..</text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::wake (32 samples, 0.70%)</title><rect x="47.8997%" y="437" width="0.7038%" height="15" fill="rgb(229,13,5)" fg:x="2178" fg:w="32"/><text x="48.1497%" y="447.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::take_waker (23 samples, 0.51%)</title><rect x="48.0976%" y="421" width="0.5058%" height="15" fill="rgb(244,67,35)" fg:x="2187" fg:w="23"/><text x="48.3476%" y="431.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (4 samples, 0.09%)</title><rect x="48.5155%" y="405" width="0.0880%" height="15" fill="rgb(221,40,2)" fg:x="2206" fg:w="4"/><text x="48.7655%" y="415.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::take_waker::_{{closure}} (4 samples, 0.09%)</title><rect x="48.5155%" y="389" width="0.0880%" height="15" fill="rgb(237,157,21)" fg:x="2206" fg:w="4"/><text x="48.7655%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (4 samples, 0.09%)</title><rect x="48.5155%" y="373" width="0.0880%" height="15" fill="rgb(222,94,11)" fg:x="2206" fg:w="4"/><text x="48.7655%" y="383.50"></text></g><g><title>core::mem::replace (4 samples, 0.09%)</title><rect x="48.5155%" y="357" width="0.0880%" height="15" fill="rgb(249,113,6)" fg:x="2206" fg:w="4"/><text x="48.7655%" y="367.50"></text></g><g><title>core::ptr::write (3 samples, 0.07%)</title><rect x="48.5375%" y="341" width="0.0660%" height="15" fill="rgb(238,137,36)" fg:x="2207" fg:w="3"/><text x="48.7875%" y="351.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (47 samples, 1.03%)</title><rect x="49.4832%" y="453" width="1.0336%" height="15" fill="rgb(210,102,26)" fg:x="2250" fg:w="47"/><text x="49.7332%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::coop::RestoreOnPending&gt; (2 samples, 0.04%)</title><rect x="51.1986%" y="437" width="0.0440%" height="15" fill="rgb(218,30,30)" fg:x="2328" fg:w="2"/><text x="51.4486%" y="447.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="51.1986%" y="421" width="0.0440%" height="15" fill="rgb(214,67,26)" fg:x="2328" fg:w="2"/><text x="51.4486%" y="431.50"></text></g><g><title>tokio::runtime::context::budget (2 samples, 0.04%)</title><rect x="51.1986%" y="405" width="0.0440%" height="15" fill="rgb(251,9,53)" fg:x="2328" fg:w="2"/><text x="51.4486%" y="415.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.04%)</title><rect x="51.1986%" y="389" width="0.0440%" height="15" fill="rgb(228,204,25)" fg:x="2328" fg:w="2"/><text x="51.4486%" y="399.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (2 samples, 0.04%)</title><rect x="51.1986%" y="373" width="0.0440%" height="15" fill="rgb(207,153,8)" fg:x="2328" fg:w="2"/><text x="51.4486%" y="383.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (2 samples, 0.04%)</title><rect x="51.1986%" y="357" width="0.0440%" height="15" fill="rgb(242,9,16)" fg:x="2328" fg:w="2"/><text x="51.4486%" y="367.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (3 samples, 0.07%)</title><rect x="51.2426%" y="357" width="0.0660%" height="15" fill="rgb(217,211,10)" fg:x="2330" fg:w="3"/><text x="51.4926%" y="367.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (4 samples, 0.09%)</title><rect x="51.2426%" y="437" width="0.0880%" height="15" fill="rgb(219,228,52)" fg:x="2330" fg:w="4"/><text x="51.4926%" y="447.50"></text></g><g><title>tokio::runtime::context::budget (4 samples, 0.09%)</title><rect x="51.2426%" y="421" width="0.0880%" height="15" fill="rgb(231,92,29)" fg:x="2330" fg:w="4"/><text x="51.4926%" y="431.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.09%)</title><rect x="51.2426%" y="405" width="0.0880%" height="15" fill="rgb(232,8,23)" fg:x="2330" fg:w="4"/><text x="51.4926%" y="415.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (4 samples, 0.09%)</title><rect x="51.2426%" y="389" width="0.0880%" height="15" fill="rgb(216,211,34)" fg:x="2330" fg:w="4"/><text x="51.4926%" y="399.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (4 samples, 0.09%)</title><rect x="51.2426%" y="373" width="0.0880%" height="15" fill="rgb(236,151,0)" fg:x="2330" fg:w="4"/><text x="51.4926%" y="383.50"></text></g><g><title>tokio::runtime::coop::Budget::decrement (1 samples, 0.02%)</title><rect x="51.3086%" y="357" width="0.0220%" height="15" fill="rgb(209,168,3)" fg:x="2333" fg:w="1"/><text x="51.5586%" y="367.50"></text></g><g><title>tokio::sync::batch_semaphore::Acquire::project (2 samples, 0.04%)</title><rect x="51.3305%" y="437" width="0.0440%" height="15" fill="rgb(208,129,28)" fg:x="2334" fg:w="2"/><text x="51.5805%" y="447.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.02%)</title><rect x="51.5505%" y="421" width="0.0220%" height="15" fill="rgb(229,78,22)" fg:x="2344" fg:w="1"/><text x="51.8005%" y="431.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.02%)</title><rect x="51.5505%" y="405" width="0.0220%" height="15" fill="rgb(228,187,13)" fg:x="2344" fg:w="1"/><text x="51.8005%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (15 samples, 0.33%)</title><rect x="51.5725%" y="421" width="0.3299%" height="15" fill="rgb(240,119,24)" fg:x="2345" fg:w="15"/><text x="51.8225%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (15 samples, 0.33%)</title><rect x="51.5725%" y="405" width="0.3299%" height="15" fill="rgb(209,194,42)" fg:x="2345" fg:w="15"/><text x="51.8225%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (5 samples, 0.11%)</title><rect x="51.9024%" y="421" width="0.1100%" height="15" fill="rgb(247,200,46)" fg:x="2360" fg:w="5"/><text x="52.1524%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.11%)</title><rect x="51.9024%" y="405" width="0.1100%" height="15" fill="rgb(218,76,16)" fg:x="2360" fg:w="5"/><text x="52.1524%" y="415.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (4 samples, 0.09%)</title><rect x="52.0123%" y="421" width="0.0880%" height="15" fill="rgb(225,21,48)" fg:x="2365" fg:w="4"/><text x="52.2623%" y="431.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (4 samples, 0.09%)</title><rect x="52.0123%" y="405" width="0.0880%" height="15" fill="rgb(239,223,50)" fg:x="2365" fg:w="4"/><text x="52.2623%" y="415.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (4 samples, 0.09%)</title><rect x="52.0123%" y="389" width="0.0880%" height="15" fill="rgb(244,45,21)" fg:x="2365" fg:w="4"/><text x="52.2623%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (3 samples, 0.07%)</title><rect x="52.0343%" y="373" width="0.0660%" height="15" fill="rgb(232,33,43)" fg:x="2366" fg:w="3"/><text x="52.2843%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.07%)</title><rect x="52.0343%" y="357" width="0.0660%" height="15" fill="rgb(209,8,3)" fg:x="2366" fg:w="3"/><text x="52.2843%" y="367.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (5 samples, 0.11%)</title><rect x="52.1223%" y="389" width="0.1100%" height="15" fill="rgb(214,25,53)" fg:x="2370" fg:w="5"/><text x="52.3723%" y="399.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (3 samples, 0.07%)</title><rect x="52.1663%" y="373" width="0.0660%" height="15" fill="rgb(254,186,54)" fg:x="2372" fg:w="3"/><text x="52.4163%" y="383.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (1 samples, 0.02%)</title><rect x="52.2102%" y="357" width="0.0220%" height="15" fill="rgb(208,174,49)" fg:x="2374" fg:w="1"/><text x="52.4602%" y="367.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (8 samples, 0.18%)</title><rect x="52.1003%" y="421" width="0.1759%" height="15" fill="rgb(233,191,51)" fg:x="2369" fg:w="8"/><text x="52.3503%" y="431.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::poll_acquire::_{{closure}} (8 samples, 0.18%)</title><rect x="52.1003%" y="405" width="0.1759%" height="15" fill="rgb(222,134,10)" fg:x="2369" fg:w="8"/><text x="52.3503%" y="415.50"></text></g><g><title>core::mem::replace (2 samples, 0.04%)</title><rect x="52.2322%" y="389" width="0.0440%" height="15" fill="rgb(230,226,20)" fg:x="2375" fg:w="2"/><text x="52.4822%" y="399.50"></text></g><g><title>core::ptr::write (2 samples, 0.04%)</title><rect x="52.2322%" y="373" width="0.0440%" height="15" fill="rgb(251,111,25)" fg:x="2375" fg:w="2"/><text x="52.4822%" y="383.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (1 samples, 0.02%)</title><rect x="52.2762%" y="421" width="0.0220%" height="15" fill="rgb(224,40,46)" fg:x="2377" fg:w="1"/><text x="52.5262%" y="431.50"></text></g><g><title>tokio::sync::batch_semaphore::Waiter::assign_permits (9 samples, 0.20%)</title><rect x="52.2982%" y="421" width="0.1979%" height="15" fill="rgb(236,108,47)" fg:x="2378" fg:w="9"/><text x="52.5482%" y="431.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (91 samples, 2.00%)</title><rect x="50.5168%" y="453" width="2.0013%" height="15" fill="rgb(234,93,0)" fg:x="2297" fg:w="91"/><text x="50.7668%" y="463.50">&lt;..</text></g><g><title>tokio::sync::batch_semaphore::Semaphore::poll_acquire (52 samples, 1.14%)</title><rect x="51.3745%" y="437" width="1.1436%" height="15" fill="rgb(224,213,32)" fg:x="2336" fg:w="52"/><text x="51.6245%" y="447.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (1 samples, 0.02%)</title><rect x="52.4962%" y="421" width="0.0220%" height="15" fill="rgb(251,11,48)" fg:x="2387" fg:w="1"/><text x="52.7462%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::batch_semaphore::Acquire&gt; (16 samples, 0.35%)</title><rect x="52.5181%" y="453" width="0.3519%" height="15" fill="rgb(236,173,5)" fg:x="2388" fg:w="16"/><text x="52.7681%" y="463.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::ops::drop::Drop&gt;::drop (15 samples, 0.33%)</title><rect x="52.5401%" y="437" width="0.3299%" height="15" fill="rgb(230,95,12)" fg:x="2389" fg:w="15"/><text x="52.7901%" y="447.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::acquire (38 samples, 0.84%)</title><rect x="52.8700%" y="453" width="0.8357%" height="15" fill="rgb(232,209,1)" fg:x="2404" fg:w="38"/><text x="53.1200%" y="463.50"></text></g><g><title>tokio::sync::batch_semaphore::Acquire::new (35 samples, 0.77%)</title><rect x="52.9360%" y="437" width="0.7697%" height="15" fill="rgb(232,6,1)" fg:x="2407" fg:w="35"/><text x="53.1860%" y="447.50"></text></g><g><title>tokio::sync::batch_semaphore::Waiter::new (3 samples, 0.07%)</title><rect x="53.6398%" y="421" width="0.0660%" height="15" fill="rgb(210,224,50)" fg:x="2439" fg:w="3"/><text x="53.8898%" y="431.50"></text></g><g><title>tokio::sync::mpsc::chan::Tx&lt;T,S&gt;::semaphore (7 samples, 0.15%)</title><rect x="53.7057%" y="453" width="0.1539%" height="15" fill="rgb(228,127,35)" fg:x="2442" fg:w="7"/><text x="53.9557%" y="463.50"></text></g><g><title>day16::maze_walker::MazeRunner::new::_{{closure}}::_{{closure}} (1,991 samples, 43.79%)</title><rect x="10.1166%" y="533" width="43.7871%" height="15" fill="rgb(245,102,45)" fg:x="460" fg:w="1991"/><text x="10.3666%" y="543.50">day16::maze_walker::MazeRunner::new::_{{closure}}::_{{closure}}</text></g><g><title>day16::maze_walker::BeamWalker::run::_{{closure}} (1,986 samples, 43.68%)</title><rect x="10.2265%" y="517" width="43.6771%" height="15" fill="rgb(214,1,49)" fg:x="465" fg:w="1986"/><text x="10.4765%" y="527.50">day16::maze_walker::BeamWalker::run::_{{closure}}</text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::send::_{{closure}} (461 samples, 10.14%)</title><rect x="43.7651%" y="501" width="10.1386%" height="15" fill="rgb(226,163,40)" fg:x="1990" fg:w="461"/><text x="44.0151%" y="511.50">tokio::sync::mp..</text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::reserve::_{{closure}} (241 samples, 5.30%)</title><rect x="48.6035%" y="485" width="5.3002%" height="15" fill="rgb(239,212,28)" fg:x="2210" fg:w="241"/><text x="48.8535%" y="495.50">tokio:..</text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::reserve_inner::_{{closure}} (231 samples, 5.08%)</title><rect x="48.8234%" y="469" width="5.0803%" height="15" fill="rgb(220,20,13)" fg:x="2220" fg:w="231"/><text x="49.0734%" y="479.50">tokio:..</text></g><g><title>tokio::trace::async_trace_leaf (2 samples, 0.04%)</title><rect x="53.8597%" y="453" width="0.0440%" height="15" fill="rgb(210,164,35)" fg:x="2449" fg:w="2"/><text x="54.1097%" y="463.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.07%)</title><rect x="53.9037%" y="517" width="0.0660%" height="15" fill="rgb(248,109,41)" fg:x="2451" fg:w="3"/><text x="54.1537%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::coop::RestoreOnPending&gt; (1 samples, 0.02%)</title><rect x="53.9697%" y="501" width="0.0220%" height="15" fill="rgb(238,23,50)" fg:x="2454" fg:w="1"/><text x="54.2197%" y="511.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="53.9697%" y="485" width="0.0220%" height="15" fill="rgb(211,48,49)" fg:x="2454" fg:w="1"/><text x="54.2197%" y="495.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (1 samples, 0.02%)</title><rect x="53.9916%" y="501" width="0.0220%" height="15" fill="rgb(223,36,21)" fg:x="2455" fg:w="1"/><text x="54.2416%" y="511.50"></text></g><g><title>tokio::runtime::coop::Budget::unconstrained (1 samples, 0.02%)</title><rect x="53.9916%" y="485" width="0.0220%" height="15" fill="rgb(207,123,46)" fg:x="2455" fg:w="1"/><text x="54.2416%" y="495.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::take_output (3 samples, 0.07%)</title><rect x="54.0356%" y="485" width="0.0660%" height="15" fill="rgb(240,218,32)" fg:x="2457" fg:w="3"/><text x="54.2856%" y="495.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3 samples, 0.07%)</title><rect x="54.0356%" y="469" width="0.0660%" height="15" fill="rgb(252,5,43)" fg:x="2457" fg:w="3"/><text x="54.2856%" y="479.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::take_output::_{{closure}} (3 samples, 0.07%)</title><rect x="54.0356%" y="453" width="0.0660%" height="15" fill="rgb(252,84,19)" fg:x="2457" fg:w="3"/><text x="54.2856%" y="463.50"></text></g><g><title>core::mem::replace (2 samples, 0.04%)</title><rect x="54.0576%" y="437" width="0.0440%" height="15" fill="rgb(243,152,39)" fg:x="2458" fg:w="2"/><text x="54.3076%" y="447.50"></text></g><g><title>core::ptr::read (2 samples, 0.04%)</title><rect x="54.0576%" y="421" width="0.0440%" height="15" fill="rgb(234,160,15)" fg:x="2458" fg:w="2"/><text x="54.3076%" y="431.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="54.0576%" y="405" width="0.0440%" height="15" fill="rgb(237,34,20)" fg:x="2458" fg:w="2"/><text x="54.3076%" y="415.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.15%)</title><rect x="53.9697%" y="517" width="0.1539%" height="15" fill="rgb(229,97,13)" fg:x="2454" fg:w="7"/><text x="54.2197%" y="527.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::try_read_output (5 samples, 0.11%)</title><rect x="54.0136%" y="501" width="0.1100%" height="15" fill="rgb(234,71,50)" fg:x="2456" fg:w="5"/><text x="54.2636%" y="511.50"></text></g><g><title>tokio::runtime::task::harness::can_read_output (1 samples, 0.02%)</title><rect x="54.1016%" y="485" width="0.0220%" height="15" fill="rgb(253,155,4)" fg:x="2460" fg:w="1"/><text x="54.3516%" y="495.50"></text></g><g><title>tokio::runtime::task::harness::set_join_waker (1 samples, 0.02%)</title><rect x="54.1016%" y="469" width="0.0220%" height="15" fill="rgb(222,185,37)" fg:x="2460" fg:w="1"/><text x="54.3516%" y="479.50"></text></g><g><title>tokio::runtime::task::core::Trailer::set_waker (1 samples, 0.02%)</title><rect x="54.1016%" y="453" width="0.0220%" height="15" fill="rgb(251,177,13)" fg:x="2460" fg:w="1"/><text x="54.3516%" y="463.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.02%)</title><rect x="54.1016%" y="437" width="0.0220%" height="15" fill="rgb(250,179,40)" fg:x="2460" fg:w="1"/><text x="54.3516%" y="447.50"></text></g><g><title>tokio::runtime::task::core::Trailer::set_waker::_{{closure}} (1 samples, 0.02%)</title><rect x="54.1016%" y="421" width="0.0220%" height="15" fill="rgb(242,44,2)" fg:x="2460" fg:w="1"/><text x="54.3516%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (1 samples, 0.02%)</title><rect x="54.1016%" y="405" width="0.0220%" height="15" fill="rgb(216,177,13)" fg:x="2460" fg:w="1"/><text x="54.3516%" y="415.50"></text></g><g><title>&lt;tokio::sync::mpsc::bounded::Sender&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="54.1236%" y="517" width="0.0220%" height="15" fill="rgb(216,106,43)" fg:x="2461" fg:w="1"/><text x="54.3736%" y="527.50"></text></g><g><title>&lt;tokio::sync::mpsc::chan::Tx&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="54.1236%" y="501" width="0.0220%" height="15" fill="rgb(216,183,2)" fg:x="2461" fg:w="1"/><text x="54.3736%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="54.1236%" y="485" width="0.0220%" height="15" fill="rgb(249,75,3)" fg:x="2461" fg:w="1"/><text x="54.3736%" y="495.50"></text></g><g><title>&lt;tracing_core::metadata::Level as core::cmp::PartialOrd&lt;tracing_core::metadata::LevelFilter&gt;&gt;::le (4 samples, 0.09%)</title><rect x="54.1456%" y="517" width="0.0880%" height="15" fill="rgb(219,67,39)" fg:x="2462" fg:w="4"/><text x="54.3956%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="54.2336%" y="517" width="0.0220%" height="15" fill="rgb(253,228,2)" fg:x="2466" fg:w="1"/><text x="54.4836%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="54.2336%" y="501" width="0.0220%" height="15" fill="rgb(235,138,27)" fg:x="2466" fg:w="1"/><text x="54.4836%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="54.2336%" y="485" width="0.0220%" height="15" fill="rgb(236,97,51)" fg:x="2466" fg:w="1"/><text x="54.4836%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="54.2336%" y="469" width="0.0220%" height="15" fill="rgb(240,80,30)" fg:x="2466" fg:w="1"/><text x="54.4836%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="54.2336%" y="453" width="0.0220%" height="15" fill="rgb(230,178,19)" fg:x="2466" fg:w="1"/><text x="54.4836%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="54.2336%" y="437" width="0.0220%" height="15" fill="rgb(210,190,27)" fg:x="2466" fg:w="1"/><text x="54.4836%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="54.2336%" y="421" width="0.0220%" height="15" fill="rgb(222,107,31)" fg:x="2466" fg:w="1"/><text x="54.4836%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="54.2336%" y="405" width="0.0220%" height="15" fill="rgb(216,127,34)" fg:x="2466" fg:w="1"/><text x="54.4836%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="54.2556%" y="325" width="0.0220%" height="15" fill="rgb(234,116,52)" fg:x="2467" fg:w="1"/><text x="54.5056%" y="335.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.02%)</title><rect x="54.2775%" y="325" width="0.0220%" height="15" fill="rgb(222,124,15)" fg:x="2468" fg:w="1"/><text x="54.5275%" y="335.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::_{{closure}} (1 samples, 0.02%)</title><rect x="54.2775%" y="309" width="0.0220%" height="15" fill="rgb(231,179,28)" fg:x="2468" fg:w="1"/><text x="54.5275%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;day16::maze_walker::MazeRunner::new::{{closure}}::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="54.2775%" y="293" width="0.0220%" height="15" fill="rgb(226,93,45)" fg:x="2468" fg:w="1"/><text x="54.5275%" y="303.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.07%)</title><rect x="54.2556%" y="453" width="0.0660%" height="15" fill="rgb(215,8,51)" fg:x="2467" fg:w="3"/><text x="54.5056%" y="463.50"></text></g><g><title>std::panicking::try (3 samples, 0.07%)</title><rect x="54.2556%" y="437" width="0.0660%" height="15" fill="rgb(223,106,5)" fg:x="2467" fg:w="3"/><text x="54.5056%" y="447.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.07%)</title><rect x="54.2556%" y="421" width="0.0660%" height="15" fill="rgb(250,191,5)" fg:x="2467" fg:w="3"/><text x="54.5056%" y="431.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.07%)</title><rect x="54.2556%" y="405" width="0.0660%" height="15" fill="rgb(242,132,44)" fg:x="2467" fg:w="3"/><text x="54.5056%" y="415.50"></text></g><g><title>core::ops::function::FnOnce::call_once (3 samples, 0.07%)</title><rect x="54.2556%" y="389" width="0.0660%" height="15" fill="rgb(251,152,29)" fg:x="2467" fg:w="3"/><text x="54.5056%" y="399.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow::_{{closure}} (3 samples, 0.07%)</title><rect x="54.2556%" y="373" width="0.0660%" height="15" fill="rgb(218,179,5)" fg:x="2467" fg:w="3"/><text x="54.5056%" y="383.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output (3 samples, 0.07%)</title><rect x="54.2556%" y="357" width="0.0660%" height="15" fill="rgb(227,67,19)" fg:x="2467" fg:w="3"/><text x="54.5056%" y="367.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (3 samples, 0.07%)</title><rect x="54.2556%" y="341" width="0.0660%" height="15" fill="rgb(233,119,31)" fg:x="2467" fg:w="3"/><text x="54.5056%" y="351.50"></text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (1 samples, 0.02%)</title><rect x="54.2995%" y="325" width="0.0220%" height="15" fill="rgb(241,120,22)" fg:x="2469" fg:w="1"/><text x="54.5495%" y="335.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (1 samples, 0.02%)</title><rect x="54.2995%" y="309" width="0.0220%" height="15" fill="rgb(224,102,30)" fg:x="2469" fg:w="1"/><text x="54.5495%" y="319.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.02%)</title><rect x="54.2995%" y="293" width="0.0220%" height="15" fill="rgb(210,164,37)" fg:x="2469" fg:w="1"/><text x="54.5495%" y="303.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (1 samples, 0.02%)</title><rect x="54.2995%" y="277" width="0.0220%" height="15" fill="rgb(226,191,16)" fg:x="2469" fg:w="1"/><text x="54.5495%" y="287.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="54.2995%" y="261" width="0.0220%" height="15" fill="rgb(214,40,45)" fg:x="2469" fg:w="1"/><text x="54.5495%" y="271.50"></text></g><g><title>cfree (2 samples, 0.04%)</title><rect x="54.3215%" y="437" width="0.0440%" height="15" fill="rgb(244,29,26)" fg:x="2470" fg:w="2"/><text x="54.5715%" y="447.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="54.3215%" y="421" width="0.0440%" height="15" fill="rgb(216,16,5)" fg:x="2470" fg:w="2"/><text x="54.5715%" y="431.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="54.3435%" y="405" width="0.0220%" height="15" fill="rgb(249,76,35)" fg:x="2471" fg:w="1"/><text x="54.5935%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="54.3435%" y="389" width="0.0220%" height="15" fill="rgb(207,11,44)" fg:x="2471" fg:w="1"/><text x="54.5935%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::task::join::JoinHandle&lt;()&gt;&gt;&gt; (6 samples, 0.13%)</title><rect x="54.2556%" y="517" width="0.1320%" height="15" fill="rgb(228,190,49)" fg:x="2467" fg:w="6"/><text x="54.5056%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::join::JoinHandle&lt;()&gt;&gt; (6 samples, 0.13%)</title><rect x="54.2556%" y="501" width="0.1320%" height="15" fill="rgb(214,173,12)" fg:x="2467" fg:w="6"/><text x="54.5056%" y="511.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.13%)</title><rect x="54.2556%" y="485" width="0.1320%" height="15" fill="rgb(218,26,35)" fg:x="2467" fg:w="6"/><text x="54.5056%" y="495.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (6 samples, 0.13%)</title><rect x="54.2556%" y="469" width="0.1320%" height="15" fill="rgb(220,200,19)" fg:x="2467" fg:w="6"/><text x="54.5056%" y="479.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (3 samples, 0.07%)</title><rect x="54.3215%" y="453" width="0.0660%" height="15" fill="rgb(239,95,49)" fg:x="2470" fg:w="3"/><text x="54.5715%" y="463.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (1 samples, 0.02%)</title><rect x="54.3655%" y="437" width="0.0220%" height="15" fill="rgb(235,85,53)" fg:x="2472" fg:w="1"/><text x="54.6155%" y="447.50"></text></g><g><title>core::mem::drop (1 samples, 0.02%)</title><rect x="54.3655%" y="421" width="0.0220%" height="15" fill="rgb(233,133,31)" fg:x="2472" fg:w="1"/><text x="54.6155%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;day16::maze_walker::MazeRunner::new::{{closure}}::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="54.3655%" y="405" width="0.0220%" height="15" fill="rgb(218,25,20)" fg:x="2472" fg:w="1"/><text x="54.6155%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;day16::maze_walker::MazeRunner::new::{{closure}}::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="54.3655%" y="389" width="0.0220%" height="15" fill="rgb(252,210,38)" fg:x="2472" fg:w="1"/><text x="54.6155%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Core&lt;day16::maze_walker::MazeRunner::new::{{closure}}::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="54.3655%" y="373" width="0.0220%" height="15" fill="rgb(242,134,21)" fg:x="2472" fg:w="1"/><text x="54.6155%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt; (1 samples, 0.02%)</title><rect x="54.3655%" y="357" width="0.0220%" height="15" fill="rgb(213,28,48)" fg:x="2472" fg:w="1"/><text x="54.6155%" y="367.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="54.3655%" y="341" width="0.0220%" height="15" fill="rgb(250,196,2)" fg:x="2472" fg:w="1"/><text x="54.6155%" y="351.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.02%)</title><rect x="54.3875%" y="469" width="0.0220%" height="15" fill="rgb(227,5,17)" fg:x="2473" fg:w="1"/><text x="54.6375%" y="479.50"></text></g><g><title>std::panicking::try (1 samples, 0.02%)</title><rect x="54.3875%" y="453" width="0.0220%" height="15" fill="rgb(221,226,24)" fg:x="2473" fg:w="1"/><text x="54.6375%" y="463.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.02%)</title><rect x="54.3875%" y="437" width="0.0220%" height="15" fill="rgb(211,5,48)" fg:x="2473" fg:w="1"/><text x="54.6375%" y="447.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.02%)</title><rect x="54.3875%" y="421" width="0.0220%" height="15" fill="rgb(219,150,6)" fg:x="2473" fg:w="1"/><text x="54.6375%" y="431.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="54.3875%" y="405" width="0.0220%" height="15" fill="rgb(251,46,16)" fg:x="2473" fg:w="1"/><text x="54.6375%" y="415.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow::_{{closure}} (1 samples, 0.02%)</title><rect x="54.3875%" y="389" width="0.0220%" height="15" fill="rgb(220,204,40)" fg:x="2473" fg:w="1"/><text x="54.6375%" y="399.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output (1 samples, 0.02%)</title><rect x="54.3875%" y="373" width="0.0220%" height="15" fill="rgb(211,85,2)" fg:x="2473" fg:w="1"/><text x="54.6375%" y="383.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (1 samples, 0.02%)</title><rect x="54.3875%" y="357" width="0.0220%" height="15" fill="rgb(229,17,7)" fg:x="2473" fg:w="1"/><text x="54.6375%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="54.3875%" y="341" width="0.0220%" height="15" fill="rgb(239,72,28)" fg:x="2473" fg:w="1"/><text x="54.6375%" y="351.50"></text></g><g><title>cfree (2 samples, 0.04%)</title><rect x="54.4095%" y="453" width="0.0440%" height="15" fill="rgb(230,47,54)" fg:x="2474" fg:w="2"/><text x="54.6595%" y="463.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="54.4315%" y="437" width="0.0220%" height="15" fill="rgb(214,50,8)" fg:x="2475" fg:w="1"/><text x="54.6815%" y="447.50"></text></g><g><title>__lll_lock_wait_private (1 samples, 0.02%)</title><rect x="54.4315%" y="421" width="0.0220%" height="15" fill="rgb(216,198,43)" fg:x="2475" fg:w="1"/><text x="54.6815%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="54.4315%" y="405" width="0.0220%" height="15" fill="rgb(234,20,35)" fg:x="2475" fg:w="1"/><text x="54.6815%" y="415.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="54.4535%" y="405" width="0.0220%" height="15" fill="rgb(254,45,19)" fg:x="2476" fg:w="1"/><text x="54.7035%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="54.4535%" y="389" width="0.0220%" height="15" fill="rgb(219,14,44)" fg:x="2476" fg:w="1"/><text x="54.7035%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="54.4535%" y="373" width="0.0220%" height="15" fill="rgb(217,220,26)" fg:x="2476" fg:w="1"/><text x="54.7035%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::join::JoinHandle&lt;()&gt;&gt; (5 samples, 0.11%)</title><rect x="54.3875%" y="517" width="0.1100%" height="15" fill="rgb(213,158,28)" fg:x="2473" fg:w="5"/><text x="54.6375%" y="527.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.11%)</title><rect x="54.3875%" y="501" width="0.1100%" height="15" fill="rgb(252,51,52)" fg:x="2473" fg:w="5"/><text x="54.6375%" y="511.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (5 samples, 0.11%)</title><rect x="54.3875%" y="485" width="0.1100%" height="15" fill="rgb(246,89,16)" fg:x="2473" fg:w="5"/><text x="54.6375%" y="495.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (4 samples, 0.09%)</title><rect x="54.4095%" y="469" width="0.0880%" height="15" fill="rgb(216,158,49)" fg:x="2474" fg:w="4"/><text x="54.6595%" y="479.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (2 samples, 0.04%)</title><rect x="54.4535%" y="453" width="0.0440%" height="15" fill="rgb(236,107,19)" fg:x="2476" fg:w="2"/><text x="54.7035%" y="463.50"></text></g><g><title>core::mem::drop (2 samples, 0.04%)</title><rect x="54.4535%" y="437" width="0.0440%" height="15" fill="rgb(228,185,30)" fg:x="2476" fg:w="2"/><text x="54.7035%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;day16::maze_walker::MazeRunner::new::{{closure}}::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt;&gt; (2 samples, 0.04%)</title><rect x="54.4535%" y="421" width="0.0440%" height="15" fill="rgb(246,134,8)" fg:x="2476" fg:w="2"/><text x="54.7035%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;day16::maze_walker::MazeRunner::new::{{closure}}::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="54.4755%" y="405" width="0.0220%" height="15" fill="rgb(214,143,50)" fg:x="2477" fg:w="1"/><text x="54.7255%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Core&lt;day16::maze_walker::MazeRunner::new::{{closure}}::{{closure}},alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="54.4755%" y="389" width="0.0220%" height="15" fill="rgb(228,75,8)" fg:x="2477" fg:w="1"/><text x="54.7255%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::CoreStage&lt;day16::maze_walker::MazeRunner::new::{{closure}}::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="54.4755%" y="373" width="0.0220%" height="15" fill="rgb(207,175,4)" fg:x="2477" fg:w="1"/><text x="54.7255%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;tokio::runtime::task::core::Stage&lt;day16::maze_walker::MazeRunner::new::{{closure}}::{{closure}}&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="54.4755%" y="357" width="0.0220%" height="15" fill="rgb(205,108,24)" fg:x="2477" fg:w="1"/><text x="54.7255%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;tokio::runtime::task::core::Stage&lt;day16::maze_walker::MazeRunner::new::{{closure}}::{{closure}}&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="54.4755%" y="341" width="0.0220%" height="15" fill="rgb(244,120,49)" fg:x="2477" fg:w="1"/><text x="54.7255%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;day16::maze_walker::MazeRunner::new::{{closure}}::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="54.4755%" y="325" width="0.0220%" height="15" fill="rgb(223,47,38)" fg:x="2477" fg:w="1"/><text x="54.7255%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::mpsc::bounded::Receiver&lt;day16::maze_walker::BeamUpdate&gt;&gt; (1 samples, 0.02%)</title><rect x="54.4975%" y="517" width="0.0220%" height="15" fill="rgb(229,179,11)" fg:x="2478" fg:w="1"/><text x="54.7475%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::mpsc::chan::Rx&lt;day16::maze_walker::BeamUpdate,tokio::sync::mpsc::bounded::Semaphore&gt;&gt; (1 samples, 0.02%)</title><rect x="54.4975%" y="501" width="0.0220%" height="15" fill="rgb(231,122,1)" fg:x="2478" fg:w="1"/><text x="54.7475%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::mpsc::chan::Chan&lt;day16::maze_walker::BeamUpdate,tokio::sync::mpsc::bounded::Semaphore&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="54.4975%" y="485" width="0.0220%" height="15" fill="rgb(245,119,9)" fg:x="2478" fg:w="1"/><text x="54.7475%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="54.4975%" y="469" width="0.0220%" height="15" fill="rgb(241,163,25)" fg:x="2478" fg:w="1"/><text x="54.7475%" y="479.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 0.02%)</title><rect x="54.4975%" y="453" width="0.0220%" height="15" fill="rgb(217,214,3)" fg:x="2478" fg:w="1"/><text x="54.7475%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::mpsc::chan::Chan&lt;day16::maze_walker::BeamUpdate,tokio::sync::mpsc::bounded::Semaphore&gt;&gt; (1 samples, 0.02%)</title><rect x="54.4975%" y="437" width="0.0220%" height="15" fill="rgb(240,86,28)" fg:x="2478" fg:w="1"/><text x="54.7475%" y="447.50"></text></g><g><title>&lt;tokio::sync::mpsc::chan::Chan&lt;T,S&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="54.4975%" y="421" width="0.0220%" height="15" fill="rgb(215,47,9)" fg:x="2478" fg:w="1"/><text x="54.7475%" y="431.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.02%)</title><rect x="54.4975%" y="405" width="0.0220%" height="15" fill="rgb(252,25,45)" fg:x="2478" fg:w="1"/><text x="54.7475%" y="415.50"></text></g><g><title>&lt;tokio::sync::mpsc::chan::Chan&lt;T,S&gt; as core::ops::drop::Drop&gt;::drop::_{{closure}} (1 samples, 0.02%)</title><rect x="54.4975%" y="389" width="0.0220%" height="15" fill="rgb(251,164,9)" fg:x="2478" fg:w="1"/><text x="54.7475%" y="399.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::free_blocks (1 samples, 0.02%)</title><rect x="54.4975%" y="373" width="0.0220%" height="15" fill="rgb(233,194,0)" fg:x="2478" fg:w="1"/><text x="54.7475%" y="383.50"></text></g><g><title>core::mem::drop (1 samples, 0.02%)</title><rect x="54.4975%" y="357" width="0.0220%" height="15" fill="rgb(249,111,24)" fg:x="2478" fg:w="1"/><text x="54.7475%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::sync::mpsc::block::Block&lt;day16::maze_walker::BeamUpdate&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="54.4975%" y="341" width="0.0220%" height="15" fill="rgb(250,223,3)" fg:x="2478" fg:w="1"/><text x="54.7475%" y="351.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="54.4975%" y="325" width="0.0220%" height="15" fill="rgb(236,178,37)" fg:x="2478" fg:w="1"/><text x="54.7475%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="54.4975%" y="309" width="0.0220%" height="15" fill="rgb(241,158,50)" fg:x="2478" fg:w="1"/><text x="54.7475%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="54.4975%" y="293" width="0.0220%" height="15" fill="rgb(213,121,41)" fg:x="2478" fg:w="1"/><text x="54.7475%" y="303.50"></text></g><g><title>cfree (1 samples, 0.02%)</title><rect x="54.4975%" y="277" width="0.0220%" height="15" fill="rgb(240,92,3)" fg:x="2478" fg:w="1"/><text x="54.7475%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="54.4975%" y="261" width="0.0220%" height="15" fill="rgb(205,123,3)" fg:x="2478" fg:w="1"/><text x="54.7475%" y="271.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.04%)</title><rect x="54.7614%" y="373" width="0.0440%" height="15" fill="rgb(205,97,47)" fg:x="2490" fg:w="2"/><text x="55.0114%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.09%)</title><rect x="54.7394%" y="389" width="0.0880%" height="15" fill="rgb(247,152,14)" fg:x="2489" fg:w="4"/><text x="54.9894%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="54.8054%" y="373" width="0.0220%" height="15" fill="rgb(248,195,53)" fg:x="2492" fg:w="1"/><text x="55.0554%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (13 samples, 0.29%)</title><rect x="54.8933%" y="373" width="0.2859%" height="15" fill="rgb(226,201,16)" fg:x="2496" fg:w="13"/><text x="55.1433%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (33 samples, 0.73%)</title><rect x="54.6294%" y="437" width="0.7258%" height="15" fill="rgb(205,98,0)" fg:x="2484" fg:w="33"/><text x="54.8794%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (33 samples, 0.73%)</title><rect x="54.6294%" y="421" width="0.7258%" height="15" fill="rgb(214,191,48)" fg:x="2484" fg:w="33"/><text x="54.8794%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (33 samples, 0.73%)</title><rect x="54.6294%" y="405" width="0.7258%" height="15" fill="rgb(237,112,39)" fg:x="2484" fg:w="33"/><text x="54.8794%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (24 samples, 0.53%)</title><rect x="54.8274%" y="389" width="0.5278%" height="15" fill="rgb(247,203,27)" fg:x="2493" fg:w="24"/><text x="55.0774%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (8 samples, 0.18%)</title><rect x="55.1792%" y="373" width="0.1759%" height="15" fill="rgb(235,124,28)" fg:x="2509" fg:w="8"/><text x="55.4292%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (4 samples, 0.09%)</title><rect x="55.3552%" y="437" width="0.0880%" height="15" fill="rgb(208,207,46)" fg:x="2517" fg:w="4"/><text x="55.6052%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="55.7510%" y="325" width="0.0220%" height="15" fill="rgb(234,176,4)" fg:x="2535" fg:w="1"/><text x="56.0010%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.13%)</title><rect x="55.6851%" y="341" width="0.1320%" height="15" fill="rgb(230,133,28)" fg:x="2532" fg:w="6"/><text x="55.9351%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.04%)</title><rect x="55.7730%" y="325" width="0.0440%" height="15" fill="rgb(211,137,40)" fg:x="2536" fg:w="2"/><text x="56.0230%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.37%)</title><rect x="55.5091%" y="389" width="0.3739%" height="15" fill="rgb(254,35,13)" fg:x="2524" fg:w="17"/><text x="55.7591%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (17 samples, 0.37%)</title><rect x="55.5091%" y="373" width="0.3739%" height="15" fill="rgb(225,49,51)" fg:x="2524" fg:w="17"/><text x="55.7591%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (17 samples, 0.37%)</title><rect x="55.5091%" y="357" width="0.3739%" height="15" fill="rgb(251,10,15)" fg:x="2524" fg:w="17"/><text x="55.7591%" y="367.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.07%)</title><rect x="55.8170%" y="341" width="0.0660%" height="15" fill="rgb(228,207,15)" fg:x="2538" fg:w="3"/><text x="56.0670%" y="351.50"></text></g><g><title>hashbrown::map::make_hash (62 samples, 1.36%)</title><rect x="54.5415%" y="469" width="1.3635%" height="15" fill="rgb(241,99,19)" fg:x="2480" fg:w="62"/><text x="54.7915%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (62 samples, 1.36%)</title><rect x="54.5415%" y="453" width="1.3635%" height="15" fill="rgb(207,104,49)" fg:x="2480" fg:w="62"/><text x="54.7915%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (21 samples, 0.46%)</title><rect x="55.4431%" y="437" width="0.4618%" height="15" fill="rgb(234,99,18)" fg:x="2521" fg:w="21"/><text x="55.6931%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (19 samples, 0.42%)</title><rect x="55.4871%" y="421" width="0.4179%" height="15" fill="rgb(213,191,49)" fg:x="2523" fg:w="19"/><text x="55.7371%" y="431.50"></text></g><g><title>core::hash::Hasher::write_usize (19 samples, 0.42%)</title><rect x="55.4871%" y="405" width="0.4179%" height="15" fill="rgb(210,226,19)" fg:x="2523" fg:w="19"/><text x="55.7371%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::to_ne_bytes (1 samples, 0.02%)</title><rect x="55.8830%" y="389" width="0.0220%" height="15" fill="rgb(229,97,18)" fg:x="2541" fg:w="1"/><text x="56.1330%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.13%)</title><rect x="56.4108%" y="421" width="0.1320%" height="15" fill="rgb(211,167,15)" fg:x="2565" fg:w="6"/><text x="56.6608%" y="431.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (1 samples, 0.02%)</title><rect x="56.5428%" y="421" width="0.0220%" height="15" fill="rgb(210,169,34)" fg:x="2571" fg:w="1"/><text x="56.7928%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (3 samples, 0.07%)</title><rect x="56.5648%" y="421" width="0.0660%" height="15" fill="rgb(241,121,31)" fg:x="2572" fg:w="3"/><text x="56.8148%" y="431.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (3 samples, 0.07%)</title><rect x="56.5648%" y="405" width="0.0660%" height="15" fill="rgb(232,40,11)" fg:x="2572" fg:w="3"/><text x="56.8148%" y="415.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (3 samples, 0.07%)</title><rect x="56.5648%" y="389" width="0.0660%" height="15" fill="rgb(205,86,26)" fg:x="2572" fg:w="3"/><text x="56.8148%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (3 samples, 0.07%)</title><rect x="56.5648%" y="373" width="0.0660%" height="15" fill="rgb(231,126,28)" fg:x="2572" fg:w="3"/><text x="56.8148%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.07%)</title><rect x="56.5648%" y="357" width="0.0660%" height="15" fill="rgb(219,221,18)" fg:x="2572" fg:w="3"/><text x="56.8148%" y="367.50"></text></g><g><title>hashbrown::raw::h2 (8 samples, 0.18%)</title><rect x="56.6307%" y="421" width="0.1759%" height="15" fill="rgb(211,40,0)" fg:x="2575" fg:w="8"/><text x="56.8807%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (10 samples, 0.22%)</title><rect x="56.8067%" y="421" width="0.2199%" height="15" fill="rgb(239,85,43)" fg:x="2583" fg:w="10"/><text x="57.0567%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (10 samples, 0.22%)</title><rect x="56.8067%" y="405" width="0.2199%" height="15" fill="rgb(231,55,21)" fg:x="2583" fg:w="10"/><text x="57.0567%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (116 samples, 2.55%)</title><rect x="54.5195%" y="517" width="2.5511%" height="15" fill="rgb(225,184,43)" fg:x="2479" fg:w="116"/><text x="54.7695%" y="527.50">st..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (116 samples, 2.55%)</title><rect x="54.5195%" y="501" width="2.5511%" height="15" fill="rgb(251,158,41)" fg:x="2479" fg:w="116"/><text x="54.7695%" y="511.50">ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (116 samples, 2.55%)</title><rect x="54.5195%" y="485" width="2.5511%" height="15" fill="rgb(234,159,37)" fg:x="2479" fg:w="116"/><text x="54.7695%" y="495.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (53 samples, 1.17%)</title><rect x="55.9050%" y="469" width="1.1656%" height="15" fill="rgb(216,204,22)" fg:x="2542" fg:w="53"/><text x="56.1550%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (53 samples, 1.17%)</title><rect x="55.9050%" y="453" width="1.1656%" height="15" fill="rgb(214,17,3)" fg:x="2542" fg:w="53"/><text x="56.1550%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (53 samples, 1.17%)</title><rect x="55.9050%" y="437" width="1.1656%" height="15" fill="rgb(212,111,17)" fg:x="2542" fg:w="53"/><text x="56.1550%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (2 samples, 0.04%)</title><rect x="57.0266%" y="421" width="0.0440%" height="15" fill="rgb(221,157,24)" fg:x="2593" fg:w="2"/><text x="57.2766%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.04%)</title><rect x="57.0266%" y="405" width="0.0440%" height="15" fill="rgb(252,16,13)" fg:x="2593" fg:w="2"/><text x="57.2766%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.04%)</title><rect x="57.0266%" y="389" width="0.0440%" height="15" fill="rgb(221,62,2)" fg:x="2593" fg:w="2"/><text x="57.2766%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="57.0926%" y="453" width="0.0220%" height="15" fill="rgb(247,87,22)" fg:x="2596" fg:w="1"/><text x="57.3426%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="57.0926%" y="437" width="0.0220%" height="15" fill="rgb(215,73,9)" fg:x="2596" fg:w="1"/><text x="57.3426%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="57.0926%" y="421" width="0.0220%" height="15" fill="rgb(207,175,33)" fg:x="2596" fg:w="1"/><text x="57.3426%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="57.0926%" y="405" width="0.0220%" height="15" fill="rgb(243,129,54)" fg:x="2596" fg:w="1"/><text x="57.3426%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.07%)</title><rect x="57.0706%" y="485" width="0.0660%" height="15" fill="rgb(227,119,45)" fg:x="2595" fg:w="3"/><text x="57.3206%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.07%)</title><rect x="57.0706%" y="469" width="0.0660%" height="15" fill="rgb(205,109,36)" fg:x="2595" fg:w="3"/><text x="57.3206%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="57.1146%" y="453" width="0.0220%" height="15" fill="rgb(205,6,39)" fg:x="2597" fg:w="1"/><text x="57.3646%" y="463.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="57.1146%" y="437" width="0.0220%" height="15" fill="rgb(221,32,16)" fg:x="2597" fg:w="1"/><text x="57.3646%" y="447.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="57.1146%" y="421" width="0.0220%" height="15" fill="rgb(228,144,50)" fg:x="2597" fg:w="1"/><text x="57.3646%" y="431.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="57.1146%" y="405" width="0.0220%" height="15" fill="rgb(229,201,53)" fg:x="2597" fg:w="1"/><text x="57.3646%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="57.1366%" y="405" width="0.0220%" height="15" fill="rgb(249,153,27)" fg:x="2598" fg:w="1"/><text x="57.3866%" y="415.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="57.1366%" y="389" width="0.0220%" height="15" fill="rgb(227,106,25)" fg:x="2598" fg:w="1"/><text x="57.3866%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::_{{closure}} (1 samples, 0.02%)</title><rect x="57.1366%" y="373" width="0.0220%" height="15" fill="rgb(230,65,29)" fg:x="2598" fg:w="1"/><text x="57.3866%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (1 samples, 0.02%)</title><rect x="57.1366%" y="357" width="0.0220%" height="15" fill="rgb(221,57,46)" fg:x="2598" fg:w="1"/><text x="57.3866%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="57.1366%" y="341" width="0.0220%" height="15" fill="rgb(229,161,17)" fg:x="2598" fg:w="1"/><text x="57.3866%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="57.1366%" y="325" width="0.0220%" height="15" fill="rgb(222,213,11)" fg:x="2598" fg:w="1"/><text x="57.3866%" y="335.50"></text></g><g><title>cfree (1 samples, 0.02%)</title><rect x="57.1366%" y="309" width="0.0220%" height="15" fill="rgb(235,35,13)" fg:x="2598" fg:w="1"/><text x="57.3866%" y="319.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="57.1366%" y="293" width="0.0220%" height="15" fill="rgb(233,158,34)" fg:x="2598" fg:w="1"/><text x="57.3866%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (2 samples, 0.04%)</title><rect x="57.1586%" y="405" width="0.0440%" height="15" fill="rgb(215,151,48)" fg:x="2599" fg:w="2"/><text x="57.4086%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (2 samples, 0.04%)</title><rect x="57.1586%" y="389" width="0.0440%" height="15" fill="rgb(229,84,14)" fg:x="2599" fg:w="2"/><text x="57.4086%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (2 samples, 0.04%)</title><rect x="57.1586%" y="373" width="0.0440%" height="15" fill="rgb(229,68,14)" fg:x="2599" fg:w="2"/><text x="57.4086%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (1 samples, 0.02%)</title><rect x="57.1806%" y="357" width="0.0220%" height="15" fill="rgb(243,106,26)" fg:x="2600" fg:w="1"/><text x="57.4306%" y="367.50"></text></g><g><title>hashbrown::raw::is_full (1 samples, 0.02%)</title><rect x="57.1806%" y="341" width="0.0220%" height="15" fill="rgb(206,45,38)" fg:x="2600" fg:w="1"/><text x="57.4306%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (5 samples, 0.11%)</title><rect x="57.1366%" y="469" width="0.1100%" height="15" fill="rgb(226,6,15)" fg:x="2598" fg:w="5"/><text x="57.3866%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.11%)</title><rect x="57.1366%" y="453" width="0.1100%" height="15" fill="rgb(232,22,54)" fg:x="2598" fg:w="5"/><text x="57.3866%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (5 samples, 0.11%)</title><rect x="57.1366%" y="437" width="0.1100%" height="15" fill="rgb(229,222,32)" fg:x="2598" fg:w="5"/><text x="57.3866%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (5 samples, 0.11%)</title><rect x="57.1366%" y="421" width="0.1100%" height="15" fill="rgb(228,62,29)" fg:x="2598" fg:w="5"/><text x="57.3866%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (2 samples, 0.04%)</title><rect x="57.2026%" y="405" width="0.0440%" height="15" fill="rgb(251,103,34)" fg:x="2601" fg:w="2"/><text x="57.4526%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (2 samples, 0.04%)</title><rect x="57.2026%" y="389" width="0.0440%" height="15" fill="rgb(233,12,30)" fg:x="2601" fg:w="2"/><text x="57.4526%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (2 samples, 0.04%)</title><rect x="57.2026%" y="373" width="0.0440%" height="15" fill="rgb(238,52,0)" fg:x="2601" fg:w="2"/><text x="57.4526%" y="383.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2 samples, 0.04%)</title><rect x="57.2026%" y="357" width="0.0440%" height="15" fill="rgb(223,98,5)" fg:x="2601" fg:w="2"/><text x="57.4526%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.04%)</title><rect x="57.2026%" y="341" width="0.0440%" height="15" fill="rgb(228,75,37)" fg:x="2601" fg:w="2"/><text x="57.4526%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.04%)</title><rect x="57.2026%" y="325" width="0.0440%" height="15" fill="rgb(205,115,49)" fg:x="2601" fg:w="2"/><text x="57.4526%" y="335.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.04%)</title><rect x="57.2026%" y="309" width="0.0440%" height="15" fill="rgb(250,154,43)" fg:x="2601" fg:w="2"/><text x="57.4526%" y="319.50"></text></g><g><title>malloc (2 samples, 0.04%)</title><rect x="57.2026%" y="293" width="0.0440%" height="15" fill="rgb(226,43,29)" fg:x="2601" fg:w="2"/><text x="57.4526%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="57.2245%" y="277" width="0.0220%" height="15" fill="rgb(249,228,39)" fg:x="2602" fg:w="1"/><text x="57.4745%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (2 samples, 0.04%)</title><rect x="57.2465%" y="453" width="0.0440%" height="15" fill="rgb(216,79,43)" fg:x="2603" fg:w="2"/><text x="57.4965%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (2 samples, 0.04%)</title><rect x="57.2465%" y="437" width="0.0440%" height="15" fill="rgb(228,95,12)" fg:x="2603" fg:w="2"/><text x="57.4965%" y="447.50"></text></g><g><title>hashbrown::raw::is_full (2 samples, 0.04%)</title><rect x="57.2465%" y="421" width="0.0440%" height="15" fill="rgb(249,221,15)" fg:x="2603" fg:w="2"/><text x="57.4965%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (11 samples, 0.24%)</title><rect x="57.0706%" y="517" width="0.2419%" height="15" fill="rgb(233,34,13)" fg:x="2595" fg:w="11"/><text x="57.3206%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (11 samples, 0.24%)</title><rect x="57.0706%" y="501" width="0.2419%" height="15" fill="rgb(214,103,39)" fg:x="2595" fg:w="11"/><text x="57.3206%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (8 samples, 0.18%)</title><rect x="57.1366%" y="485" width="0.1759%" height="15" fill="rgb(251,126,39)" fg:x="2598" fg:w="8"/><text x="57.3866%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_or_find_insert_slot_inner (3 samples, 0.07%)</title><rect x="57.2465%" y="469" width="0.0660%" height="15" fill="rgb(214,216,36)" fg:x="2603" fg:w="3"/><text x="57.4965%" y="479.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.02%)</title><rect x="57.2905%" y="453" width="0.0220%" height="15" fill="rgb(220,221,8)" fg:x="2605" fg:w="1"/><text x="57.5405%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="57.3125%" y="469" width="0.0220%" height="15" fill="rgb(240,216,3)" fg:x="2606" fg:w="1"/><text x="57.5625%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="57.3125%" y="453" width="0.0220%" height="15" fill="rgb(232,218,17)" fg:x="2606" fg:w="1"/><text x="57.5625%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.02%)</title><rect x="57.3125%" y="437" width="0.0220%" height="15" fill="rgb(229,163,45)" fg:x="2606" fg:w="1"/><text x="57.5625%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.02%)</title><rect x="57.3125%" y="421" width="0.0220%" height="15" fill="rgb(231,110,42)" fg:x="2606" fg:w="1"/><text x="57.5625%" y="431.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.02%)</title><rect x="57.3125%" y="405" width="0.0220%" height="15" fill="rgb(208,170,48)" fg:x="2606" fg:w="1"/><text x="57.5625%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="57.3125%" y="389" width="0.0220%" height="15" fill="rgb(239,116,25)" fg:x="2606" fg:w="1"/><text x="57.5625%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="57.3125%" y="373" width="0.0220%" height="15" fill="rgb(219,200,50)" fg:x="2606" fg:w="1"/><text x="57.5625%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="57.3125%" y="357" width="0.0220%" height="15" fill="rgb(245,200,0)" fg:x="2606" fg:w="1"/><text x="57.5625%" y="367.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (4 samples, 0.09%)</title><rect x="57.3125%" y="517" width="0.0880%" height="15" fill="rgb(245,119,33)" fg:x="2606" fg:w="4"/><text x="57.5625%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (4 samples, 0.09%)</title><rect x="57.3125%" y="501" width="0.0880%" height="15" fill="rgb(231,125,12)" fg:x="2606" fg:w="4"/><text x="57.5625%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (4 samples, 0.09%)</title><rect x="57.3125%" y="485" width="0.0880%" height="15" fill="rgb(216,96,41)" fg:x="2606" fg:w="4"/><text x="57.5625%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (3 samples, 0.07%)</title><rect x="57.3345%" y="469" width="0.0660%" height="15" fill="rgb(248,43,45)" fg:x="2607" fg:w="3"/><text x="57.5845%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.04%)</title><rect x="57.3565%" y="453" width="0.0440%" height="15" fill="rgb(217,222,7)" fg:x="2608" fg:w="2"/><text x="57.6065%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.04%)</title><rect x="57.3565%" y="437" width="0.0440%" height="15" fill="rgb(233,28,6)" fg:x="2608" fg:w="2"/><text x="57.6065%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (1 samples, 0.02%)</title><rect x="57.3785%" y="421" width="0.0220%" height="15" fill="rgb(231,218,15)" fg:x="2609" fg:w="1"/><text x="57.6285%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="57.3785%" y="405" width="0.0220%" height="15" fill="rgb(226,171,48)" fg:x="2609" fg:w="1"/><text x="57.6285%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="57.3785%" y="389" width="0.0220%" height="15" fill="rgb(235,201,9)" fg:x="2609" fg:w="1"/><text x="57.6285%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.09%)</title><rect x="57.7524%" y="373" width="0.0880%" height="15" fill="rgb(217,80,15)" fg:x="2626" fg:w="4"/><text x="58.0024%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.04%)</title><rect x="57.7963%" y="357" width="0.0440%" height="15" fill="rgb(219,152,8)" fg:x="2628" fg:w="2"/><text x="58.0463%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.18%)</title><rect x="57.8843%" y="357" width="0.1759%" height="15" fill="rgb(243,107,38)" fg:x="2632" fg:w="8"/><text x="58.1343%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (29 samples, 0.64%)</title><rect x="57.4665%" y="421" width="0.6378%" height="15" fill="rgb(231,17,5)" fg:x="2613" fg:w="29"/><text x="57.7165%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (29 samples, 0.64%)</title><rect x="57.4665%" y="405" width="0.6378%" height="15" fill="rgb(209,25,54)" fg:x="2613" fg:w="29"/><text x="57.7165%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (29 samples, 0.64%)</title><rect x="57.4665%" y="389" width="0.6378%" height="15" fill="rgb(219,0,2)" fg:x="2613" fg:w="29"/><text x="57.7165%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (12 samples, 0.26%)</title><rect x="57.8403%" y="373" width="0.2639%" height="15" fill="rgb(246,9,5)" fg:x="2630" fg:w="12"/><text x="58.0903%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.04%)</title><rect x="58.0603%" y="357" width="0.0440%" height="15" fill="rgb(226,159,4)" fg:x="2640" fg:w="2"/><text x="58.3103%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="58.1042%" y="421" width="0.0220%" height="15" fill="rgb(219,175,34)" fg:x="2642" fg:w="1"/><text x="58.3542%" y="431.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="58.1042%" y="405" width="0.0220%" height="15" fill="rgb(236,10,46)" fg:x="2642" fg:w="1"/><text x="58.3542%" y="415.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="58.1042%" y="389" width="0.0220%" height="15" fill="rgb(240,211,16)" fg:x="2642" fg:w="1"/><text x="58.3542%" y="399.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="58.1042%" y="373" width="0.0220%" height="15" fill="rgb(205,3,43)" fg:x="2642" fg:w="1"/><text x="58.3542%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="58.5441%" y="261" width="0.0220%" height="15" fill="rgb(245,7,22)" fg:x="2662" fg:w="1"/><text x="58.7941%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.13%)</title><rect x="58.5001%" y="277" width="0.1320%" height="15" fill="rgb(239,132,32)" fg:x="2660" fg:w="6"/><text x="58.7501%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.07%)</title><rect x="58.5661%" y="261" width="0.0660%" height="15" fill="rgb(228,202,34)" fg:x="2663" fg:w="3"/><text x="58.8161%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (25 samples, 0.55%)</title><rect x="58.1922%" y="325" width="0.5498%" height="15" fill="rgb(254,200,22)" fg:x="2646" fg:w="25"/><text x="58.4422%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (25 samples, 0.55%)</title><rect x="58.1922%" y="309" width="0.5498%" height="15" fill="rgb(219,10,39)" fg:x="2646" fg:w="25"/><text x="58.4422%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (25 samples, 0.55%)</title><rect x="58.1922%" y="293" width="0.5498%" height="15" fill="rgb(226,210,39)" fg:x="2646" fg:w="25"/><text x="58.4422%" y="303.50"></text></g><g><title>core::hash::sip::u8to64_le (5 samples, 0.11%)</title><rect x="58.6321%" y="277" width="0.1100%" height="15" fill="rgb(208,219,16)" fg:x="2666" fg:w="5"/><text x="58.8821%" y="287.50"></text></g><g><title>&lt;day16::Direction as core::hash::Hash&gt;::hash (31 samples, 0.68%)</title><rect x="58.1262%" y="389" width="0.6818%" height="15" fill="rgb(216,158,51)" fg:x="2643" fg:w="31"/><text x="58.3762%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (31 samples, 0.68%)</title><rect x="58.1262%" y="373" width="0.6818%" height="15" fill="rgb(233,14,44)" fg:x="2643" fg:w="31"/><text x="58.3762%" y="383.50"></text></g><g><title>core::hash::Hasher::write_isize (31 samples, 0.68%)</title><rect x="58.1262%" y="357" width="0.6818%" height="15" fill="rgb(237,97,39)" fg:x="2643" fg:w="31"/><text x="58.3762%" y="367.50"></text></g><g><title>core::hash::Hasher::write_usize (30 samples, 0.66%)</title><rect x="58.1482%" y="341" width="0.6598%" height="15" fill="rgb(218,198,43)" fg:x="2644" fg:w="30"/><text x="58.3982%" y="351.50"></text></g><g><title>core::num::&lt;impl usize&gt;::to_ne_bytes (3 samples, 0.07%)</title><rect x="58.7420%" y="325" width="0.0660%" height="15" fill="rgb(231,104,20)" fg:x="2671" fg:w="3"/><text x="58.9920%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.13%)</title><rect x="59.1159%" y="293" width="0.1320%" height="15" fill="rgb(254,36,13)" fg:x="2688" fg:w="6"/><text x="59.3659%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.09%)</title><rect x="59.1599%" y="277" width="0.0880%" height="15" fill="rgb(248,14,50)" fg:x="2690" fg:w="4"/><text x="59.4099%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.37%)</title><rect x="58.8960%" y="341" width="0.3739%" height="15" fill="rgb(217,107,29)" fg:x="2678" fg:w="17"/><text x="59.1460%" y="351.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (17 samples, 0.37%)</title><rect x="58.8960%" y="325" width="0.3739%" height="15" fill="rgb(251,169,33)" fg:x="2678" fg:w="17"/><text x="59.1460%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (17 samples, 0.37%)</title><rect x="58.8960%" y="309" width="0.3739%" height="15" fill="rgb(217,108,32)" fg:x="2678" fg:w="17"/><text x="59.1460%" y="319.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="59.2479%" y="293" width="0.0220%" height="15" fill="rgb(219,66,42)" fg:x="2694" fg:w="1"/><text x="59.4979%" y="303.50"></text></g><g><title>hashbrown::map::make_hash (85 samples, 1.87%)</title><rect x="57.4445%" y="453" width="1.8694%" height="15" fill="rgb(206,180,7)" fg:x="2612" fg:w="85"/><text x="57.6945%" y="463.50">h..</text></g><g><title>core::hash::BuildHasher::hash_one (85 samples, 1.87%)</title><rect x="57.4445%" y="437" width="1.8694%" height="15" fill="rgb(208,226,31)" fg:x="2612" fg:w="85"/><text x="57.6945%" y="447.50">c..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (54 samples, 1.19%)</title><rect x="58.1262%" y="421" width="1.1876%" height="15" fill="rgb(218,26,49)" fg:x="2643" fg:w="54"/><text x="58.3762%" y="431.50"></text></g><g><title>&lt;day16::maze_walker::BeamLocation as core::hash::Hash&gt;::hash (54 samples, 1.19%)</title><rect x="58.1262%" y="405" width="1.1876%" height="15" fill="rgb(233,197,48)" fg:x="2643" fg:w="54"/><text x="58.3762%" y="415.50"></text></g><g><title>&lt;day16::Position as core::hash::Hash&gt;::hash (23 samples, 0.51%)</title><rect x="58.8080%" y="389" width="0.5058%" height="15" fill="rgb(252,181,51)" fg:x="2674" fg:w="23"/><text x="59.0580%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (23 samples, 0.51%)</title><rect x="58.8080%" y="373" width="0.5058%" height="15" fill="rgb(253,90,19)" fg:x="2674" fg:w="23"/><text x="59.0580%" y="383.50"></text></g><g><title>core::hash::Hasher::write_usize (22 samples, 0.48%)</title><rect x="58.8300%" y="357" width="0.4838%" height="15" fill="rgb(215,171,30)" fg:x="2675" fg:w="22"/><text x="59.0800%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::to_ne_bytes (2 samples, 0.04%)</title><rect x="59.2698%" y="341" width="0.0440%" height="15" fill="rgb(214,222,9)" fg:x="2695" fg:w="2"/><text x="59.5198%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.13%)</title><rect x="59.3138%" y="405" width="0.1320%" height="15" fill="rgb(223,3,22)" fg:x="2697" fg:w="6"/><text x="59.5638%" y="415.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="59.4238%" y="389" width="0.0220%" height="15" fill="rgb(225,196,46)" fg:x="2702" fg:w="1"/><text x="59.6738%" y="399.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (1 samples, 0.02%)</title><rect x="59.4458%" y="405" width="0.0220%" height="15" fill="rgb(209,110,37)" fg:x="2703" fg:w="1"/><text x="59.6958%" y="415.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (23 samples, 0.51%)</title><rect x="59.4678%" y="389" width="0.5058%" height="15" fill="rgb(249,89,12)" fg:x="2704" fg:w="23"/><text x="59.7178%" y="399.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (23 samples, 0.51%)</title><rect x="59.4678%" y="373" width="0.5058%" height="15" fill="rgb(226,27,33)" fg:x="2704" fg:w="23"/><text x="59.7178%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (23 samples, 0.51%)</title><rect x="59.4678%" y="357" width="0.5058%" height="15" fill="rgb(213,82,22)" fg:x="2704" fg:w="23"/><text x="59.7178%" y="367.50"></text></g><g><title>&lt;day16::maze_walker::BeamLocation as core::cmp::PartialEq&gt;::eq (23 samples, 0.51%)</title><rect x="59.4678%" y="341" width="0.5058%" height="15" fill="rgb(248,140,0)" fg:x="2704" fg:w="23"/><text x="59.7178%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (24 samples, 0.53%)</title><rect x="59.4678%" y="405" width="0.5278%" height="15" fill="rgb(228,106,3)" fg:x="2704" fg:w="24"/><text x="59.7178%" y="415.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="59.9736%" y="389" width="0.0220%" height="15" fill="rgb(209,23,37)" fg:x="2727" fg:w="1"/><text x="60.2236%" y="399.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="59.9736%" y="373" width="0.0220%" height="15" fill="rgb(241,93,50)" fg:x="2727" fg:w="1"/><text x="60.2236%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.02%)</title><rect x="59.9736%" y="357" width="0.0220%" height="15" fill="rgb(253,46,43)" fg:x="2727" fg:w="1"/><text x="60.2236%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="59.9736%" y="341" width="0.0220%" height="15" fill="rgb(226,206,43)" fg:x="2727" fg:w="1"/><text x="60.2236%" y="351.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.02%)</title><rect x="59.9956%" y="405" width="0.0220%" height="15" fill="rgb(217,54,7)" fg:x="2728" fg:w="1"/><text x="60.2456%" y="415.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (157 samples, 3.45%)</title><rect x="57.4005%" y="517" width="3.4528%" height="15" fill="rgb(223,5,52)" fg:x="2610" fg:w="157"/><text x="57.6505%" y="527.50">std..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (157 samples, 3.45%)</title><rect x="57.4005%" y="501" width="3.4528%" height="15" fill="rgb(206,52,46)" fg:x="2610" fg:w="157"/><text x="57.6505%" y="511.50">has..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (157 samples, 3.45%)</title><rect x="57.4005%" y="485" width="3.4528%" height="15" fill="rgb(253,136,11)" fg:x="2610" fg:w="157"/><text x="57.6505%" y="495.50">has..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (157 samples, 3.45%)</title><rect x="57.4005%" y="469" width="3.4528%" height="15" fill="rgb(208,106,33)" fg:x="2610" fg:w="157"/><text x="57.6505%" y="479.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (70 samples, 1.54%)</title><rect x="59.3138%" y="453" width="1.5395%" height="15" fill="rgb(206,54,4)" fg:x="2697" fg:w="70"/><text x="59.5638%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (70 samples, 1.54%)</title><rect x="59.3138%" y="437" width="1.5395%" height="15" fill="rgb(213,3,15)" fg:x="2697" fg:w="70"/><text x="59.5638%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (70 samples, 1.54%)</title><rect x="59.3138%" y="421" width="1.5395%" height="15" fill="rgb(252,211,39)" fg:x="2697" fg:w="70"/><text x="59.5638%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (38 samples, 0.84%)</title><rect x="60.0176%" y="405" width="0.8357%" height="15" fill="rgb(223,6,36)" fg:x="2729" fg:w="38"/><text x="60.2676%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (38 samples, 0.84%)</title><rect x="60.0176%" y="389" width="0.8357%" height="15" fill="rgb(252,169,45)" fg:x="2729" fg:w="38"/><text x="60.2676%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.04%)</title><rect x="61.2492%" y="373" width="0.0440%" height="15" fill="rgb(212,48,26)" fg:x="2785" fg:w="2"/><text x="61.4992%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.15%)</title><rect x="61.1832%" y="389" width="0.1539%" height="15" fill="rgb(251,102,48)" fg:x="2782" fg:w="7"/><text x="61.4332%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.04%)</title><rect x="61.2932%" y="373" width="0.0440%" height="15" fill="rgb(243,208,16)" fg:x="2787" fg:w="2"/><text x="61.5432%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (11 samples, 0.24%)</title><rect x="61.3811%" y="373" width="0.2419%" height="15" fill="rgb(219,96,24)" fg:x="2791" fg:w="11"/><text x="61.6311%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (31 samples, 0.68%)</title><rect x="60.9853%" y="437" width="0.6818%" height="15" fill="rgb(219,33,29)" fg:x="2773" fg:w="31"/><text x="61.2353%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (31 samples, 0.68%)</title><rect x="60.9853%" y="421" width="0.6818%" height="15" fill="rgb(223,176,5)" fg:x="2773" fg:w="31"/><text x="61.2353%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (31 samples, 0.68%)</title><rect x="60.9853%" y="405" width="0.6818%" height="15" fill="rgb(228,140,14)" fg:x="2773" fg:w="31"/><text x="61.2353%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (15 samples, 0.33%)</title><rect x="61.3371%" y="389" width="0.3299%" height="15" fill="rgb(217,179,31)" fg:x="2789" fg:w="15"/><text x="61.5871%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.04%)</title><rect x="61.6230%" y="373" width="0.0440%" height="15" fill="rgb(230,9,30)" fg:x="2802" fg:w="2"/><text x="61.8730%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (4 samples, 0.09%)</title><rect x="61.6670%" y="437" width="0.0880%" height="15" fill="rgb(230,136,20)" fg:x="2804" fg:w="4"/><text x="61.9170%" y="447.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.04%)</title><rect x="61.7110%" y="421" width="0.0440%" height="15" fill="rgb(215,210,22)" fg:x="2806" fg:w="2"/><text x="61.9610%" y="431.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.04%)</title><rect x="61.7110%" y="405" width="0.0440%" height="15" fill="rgb(218,43,5)" fg:x="2806" fg:w="2"/><text x="61.9610%" y="415.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (2 samples, 0.04%)</title><rect x="61.7110%" y="389" width="0.0440%" height="15" fill="rgb(216,11,5)" fg:x="2806" fg:w="2"/><text x="61.9610%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.04%)</title><rect x="62.0189%" y="277" width="0.0440%" height="15" fill="rgb(209,82,29)" fg:x="2820" fg:w="2"/><text x="62.2689%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.11%)</title><rect x="61.9749%" y="293" width="0.1100%" height="15" fill="rgb(244,115,12)" fg:x="2818" fg:w="5"/><text x="62.2249%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="62.0629%" y="277" width="0.0220%" height="15" fill="rgb(222,82,18)" fg:x="2822" fg:w="1"/><text x="62.3129%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.29%)</title><rect x="61.8430%" y="341" width="0.2859%" height="15" fill="rgb(249,227,8)" fg:x="2812" fg:w="13"/><text x="62.0930%" y="351.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (13 samples, 0.29%)</title><rect x="61.8430%" y="325" width="0.2859%" height="15" fill="rgb(253,141,45)" fg:x="2812" fg:w="13"/><text x="62.0930%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.29%)</title><rect x="61.8430%" y="309" width="0.2859%" height="15" fill="rgb(234,184,4)" fg:x="2812" fg:w="13"/><text x="62.0930%" y="319.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.04%)</title><rect x="62.0849%" y="293" width="0.0440%" height="15" fill="rgb(218,194,23)" fg:x="2823" fg:w="2"/><text x="62.3349%" y="303.50"></text></g><g><title>&lt;day16::Direction as core::hash::Hash&gt;::hash (18 samples, 0.40%)</title><rect x="61.7550%" y="405" width="0.3959%" height="15" fill="rgb(235,66,41)" fg:x="2808" fg:w="18"/><text x="62.0050%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (17 samples, 0.37%)</title><rect x="61.7770%" y="389" width="0.3739%" height="15" fill="rgb(245,217,1)" fg:x="2809" fg:w="17"/><text x="62.0270%" y="399.50"></text></g><g><title>core::hash::Hasher::write_isize (17 samples, 0.37%)</title><rect x="61.7770%" y="373" width="0.3739%" height="15" fill="rgb(229,91,1)" fg:x="2809" fg:w="17"/><text x="62.0270%" y="383.50"></text></g><g><title>core::hash::Hasher::write_usize (16 samples, 0.35%)</title><rect x="61.7990%" y="357" width="0.3519%" height="15" fill="rgb(207,101,30)" fg:x="2810" fg:w="16"/><text x="62.0490%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::to_ne_bytes (1 samples, 0.02%)</title><rect x="62.1289%" y="341" width="0.0220%" height="15" fill="rgb(223,82,49)" fg:x="2825" fg:w="1"/><text x="62.3789%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.09%)</title><rect x="62.4808%" y="293" width="0.0880%" height="15" fill="rgb(218,167,17)" fg:x="2841" fg:w="4"/><text x="62.7308%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8 samples, 0.18%)</title><rect x="62.4368%" y="309" width="0.1759%" height="15" fill="rgb(208,103,14)" fg:x="2839" fg:w="8"/><text x="62.6868%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.04%)</title><rect x="62.5687%" y="293" width="0.0440%" height="15" fill="rgb(238,20,8)" fg:x="2845" fg:w="2"/><text x="62.8187%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (20 samples, 0.44%)</title><rect x="62.3048%" y="357" width="0.4399%" height="15" fill="rgb(218,80,54)" fg:x="2833" fg:w="20"/><text x="62.5548%" y="367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (20 samples, 0.44%)</title><rect x="62.3048%" y="341" width="0.4399%" height="15" fill="rgb(240,144,17)" fg:x="2833" fg:w="20"/><text x="62.5548%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (20 samples, 0.44%)</title><rect x="62.3048%" y="325" width="0.4399%" height="15" fill="rgb(245,27,50)" fg:x="2833" fg:w="20"/><text x="62.5548%" y="335.50"></text></g><g><title>core::hash::sip::u8to64_le (6 samples, 0.13%)</title><rect x="62.6127%" y="309" width="0.1320%" height="15" fill="rgb(251,51,7)" fg:x="2847" fg:w="6"/><text x="62.8627%" y="319.50"></text></g><g><title>hashbrown::map::make_hash (86 samples, 1.89%)</title><rect x="60.8753%" y="469" width="1.8914%" height="15" fill="rgb(245,217,29)" fg:x="2768" fg:w="86"/><text x="61.1253%" y="479.50">h..</text></g><g><title>core::hash::BuildHasher::hash_one (85 samples, 1.87%)</title><rect x="60.8973%" y="453" width="1.8694%" height="15" fill="rgb(221,176,29)" fg:x="2769" fg:w="85"/><text x="61.1473%" y="463.50">c..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (46 samples, 1.01%)</title><rect x="61.7550%" y="437" width="1.0117%" height="15" fill="rgb(212,180,24)" fg:x="2808" fg:w="46"/><text x="62.0050%" y="447.50"></text></g><g><title>&lt;day16::maze_walker::BeamLocation as core::hash::Hash&gt;::hash (46 samples, 1.01%)</title><rect x="61.7550%" y="421" width="1.0117%" height="15" fill="rgb(254,24,2)" fg:x="2808" fg:w="46"/><text x="62.0050%" y="431.50"></text></g><g><title>&lt;day16::Position as core::hash::Hash&gt;::hash (28 samples, 0.62%)</title><rect x="62.1509%" y="405" width="0.6158%" height="15" fill="rgb(230,100,2)" fg:x="2826" fg:w="28"/><text x="62.4009%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (28 samples, 0.62%)</title><rect x="62.1509%" y="389" width="0.6158%" height="15" fill="rgb(219,142,25)" fg:x="2826" fg:w="28"/><text x="62.4009%" y="399.50"></text></g><g><title>core::hash::Hasher::write_usize (21 samples, 0.46%)</title><rect x="62.3048%" y="373" width="0.4618%" height="15" fill="rgb(240,73,43)" fg:x="2833" fg:w="21"/><text x="62.5548%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::to_ne_bytes (1 samples, 0.02%)</title><rect x="62.7447%" y="357" width="0.0220%" height="15" fill="rgb(214,114,15)" fg:x="2853" fg:w="1"/><text x="62.9947%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.02%)</title><rect x="62.8766%" y="405" width="0.0220%" height="15" fill="rgb(207,130,4)" fg:x="2859" fg:w="1"/><text x="63.1266%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.02%)</title><rect x="62.8766%" y="389" width="0.0220%" height="15" fill="rgb(221,25,40)" fg:x="2859" fg:w="1"/><text x="63.1266%" y="399.50"></text></g><g><title>[unknown] (3 samples, 0.07%)</title><rect x="63.3824%" y="389" width="0.0660%" height="15" fill="rgb(241,184,7)" fg:x="2882" fg:w="3"/><text x="63.6324%" y="399.50"></text></g><g><title>[unknown] (3 samples, 0.07%)</title><rect x="63.3824%" y="373" width="0.0660%" height="15" fill="rgb(235,159,4)" fg:x="2882" fg:w="3"/><text x="63.6324%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="63.4044%" y="357" width="0.0440%" height="15" fill="rgb(214,87,48)" fg:x="2883" fg:w="2"/><text x="63.6544%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="63.4264%" y="341" width="0.0220%" height="15" fill="rgb(246,198,24)" fg:x="2884" fg:w="1"/><text x="63.6764%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="63.4264%" y="325" width="0.0220%" height="15" fill="rgb(209,66,40)" fg:x="2884" fg:w="1"/><text x="63.6764%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="63.4264%" y="309" width="0.0220%" height="15" fill="rgb(233,147,39)" fg:x="2884" fg:w="1"/><text x="63.6764%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="63.4264%" y="293" width="0.0220%" height="15" fill="rgb(231,145,52)" fg:x="2884" fg:w="1"/><text x="63.6764%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="63.4264%" y="277" width="0.0220%" height="15" fill="rgb(206,20,26)" fg:x="2884" fg:w="1"/><text x="63.6764%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="63.4264%" y="261" width="0.0220%" height="15" fill="rgb(238,220,4)" fg:x="2884" fg:w="1"/><text x="63.6764%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (135 samples, 2.97%)</title><rect x="63.4484%" y="389" width="2.9690%" height="15" fill="rgb(252,195,42)" fg:x="2885" fg:w="135"/><text x="63.6984%" y="399.50">cor..</text></g><g><title>[unknown] (108 samples, 2.38%)</title><rect x="64.0422%" y="373" width="2.3752%" height="15" fill="rgb(209,10,6)" fg:x="2912" fg:w="108"/><text x="64.2922%" y="383.50">[u..</text></g><g><title>[unknown] (95 samples, 2.09%)</title><rect x="64.3281%" y="357" width="2.0893%" height="15" fill="rgb(229,3,52)" fg:x="2925" fg:w="95"/><text x="64.5781%" y="367.50">[..</text></g><g><title>[unknown] (88 samples, 1.94%)</title><rect x="64.4821%" y="341" width="1.9353%" height="15" fill="rgb(253,49,37)" fg:x="2932" fg:w="88"/><text x="64.7321%" y="351.50">[..</text></g><g><title>[unknown] (83 samples, 1.83%)</title><rect x="64.5920%" y="325" width="1.8254%" height="15" fill="rgb(240,103,49)" fg:x="2937" fg:w="83"/><text x="64.8420%" y="335.50">[..</text></g><g><title>[unknown] (73 samples, 1.61%)</title><rect x="64.8120%" y="309" width="1.6055%" height="15" fill="rgb(250,182,30)" fg:x="2947" fg:w="73"/><text x="65.0620%" y="319.50"></text></g><g><title>[unknown] (50 samples, 1.10%)</title><rect x="65.3178%" y="293" width="1.0996%" height="15" fill="rgb(248,8,30)" fg:x="2970" fg:w="50"/><text x="65.5678%" y="303.50"></text></g><g><title>[unknown] (38 samples, 0.84%)</title><rect x="65.5817%" y="277" width="0.8357%" height="15" fill="rgb(237,120,30)" fg:x="2982" fg:w="38"/><text x="65.8317%" y="287.50"></text></g><g><title>[unknown] (34 samples, 0.75%)</title><rect x="65.6697%" y="261" width="0.7477%" height="15" fill="rgb(221,146,34)" fg:x="2986" fg:w="34"/><text x="65.9197%" y="271.50"></text></g><g><title>[unknown] (21 samples, 0.46%)</title><rect x="65.9556%" y="245" width="0.4618%" height="15" fill="rgb(242,55,13)" fg:x="2999" fg:w="21"/><text x="66.2056%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="66.3954%" y="229" width="0.0220%" height="15" fill="rgb(242,112,31)" fg:x="3019" fg:w="1"/><text x="66.6454%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="66.3954%" y="213" width="0.0220%" height="15" fill="rgb(249,192,27)" fg:x="3019" fg:w="1"/><text x="66.6454%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="66.3954%" y="197" width="0.0220%" height="15" fill="rgb(208,204,44)" fg:x="3019" fg:w="1"/><text x="66.6454%" y="207.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (14 samples, 0.31%)</title><rect x="66.4174%" y="389" width="0.3079%" height="15" fill="rgb(208,93,54)" fg:x="3020" fg:w="14"/><text x="66.6674%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (14 samples, 0.31%)</title><rect x="66.4174%" y="373" width="0.3079%" height="15" fill="rgb(242,1,31)" fg:x="3020" fg:w="14"/><text x="66.6674%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (14 samples, 0.31%)</title><rect x="66.4174%" y="357" width="0.3079%" height="15" fill="rgb(241,83,25)" fg:x="3020" fg:w="14"/><text x="66.6674%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="66.6813%" y="341" width="0.0440%" height="15" fill="rgb(205,169,50)" fg:x="3032" fg:w="2"/><text x="66.9313%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="66.7033%" y="325" width="0.0220%" height="15" fill="rgb(239,186,37)" fg:x="3033" fg:w="1"/><text x="66.9533%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="66.7033%" y="309" width="0.0220%" height="15" fill="rgb(205,221,10)" fg:x="3033" fg:w="1"/><text x="66.9533%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="66.7033%" y="293" width="0.0220%" height="15" fill="rgb(218,196,15)" fg:x="3033" fg:w="1"/><text x="66.9533%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="66.7033%" y="277" width="0.0220%" height="15" fill="rgb(218,196,35)" fg:x="3033" fg:w="1"/><text x="66.9533%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="66.7033%" y="261" width="0.0220%" height="15" fill="rgb(233,63,24)" fg:x="3033" fg:w="1"/><text x="66.9533%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="66.7033%" y="245" width="0.0220%" height="15" fill="rgb(225,8,4)" fg:x="3033" fg:w="1"/><text x="66.9533%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="66.7033%" y="229" width="0.0220%" height="15" fill="rgb(234,105,35)" fg:x="3033" fg:w="1"/><text x="66.9533%" y="239.50"></text></g><g><title>[libc.so.6] (4 samples, 0.09%)</title><rect x="66.7913%" y="277" width="0.0880%" height="15" fill="rgb(236,21,32)" fg:x="3037" fg:w="4"/><text x="67.0413%" y="287.50"></text></g><g><title>[libc.so.6] (4 samples, 0.09%)</title><rect x="66.7913%" y="261" width="0.0880%" height="15" fill="rgb(228,109,6)" fg:x="3037" fg:w="4"/><text x="67.0413%" y="271.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="66.8353%" y="245" width="0.0440%" height="15" fill="rgb(229,215,31)" fg:x="3039" fg:w="2"/><text x="67.0853%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (8 samples, 0.18%)</title><rect x="66.7253%" y="389" width="0.1759%" height="15" fill="rgb(221,52,54)" fg:x="3034" fg:w="8"/><text x="66.9753%" y="399.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.18%)</title><rect x="66.7253%" y="373" width="0.1759%" height="15" fill="rgb(252,129,43)" fg:x="3034" fg:w="8"/><text x="66.9753%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::_{{closure}} (8 samples, 0.18%)</title><rect x="66.7253%" y="357" width="0.1759%" height="15" fill="rgb(248,183,27)" fg:x="3034" fg:w="8"/><text x="66.9753%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (8 samples, 0.18%)</title><rect x="66.7253%" y="341" width="0.1759%" height="15" fill="rgb(250,0,22)" fg:x="3034" fg:w="8"/><text x="66.9753%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.18%)</title><rect x="66.7253%" y="325" width="0.1759%" height="15" fill="rgb(213,166,10)" fg:x="3034" fg:w="8"/><text x="66.9753%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.18%)</title><rect x="66.7253%" y="309" width="0.1759%" height="15" fill="rgb(207,163,36)" fg:x="3034" fg:w="8"/><text x="66.9753%" y="319.50"></text></g><g><title>cfree (8 samples, 0.18%)</title><rect x="66.7253%" y="293" width="0.1759%" height="15" fill="rgb(208,122,22)" fg:x="3034" fg:w="8"/><text x="66.9753%" y="303.50"></text></g><g><title>__lll_lock_wake_private (1 samples, 0.02%)</title><rect x="66.8793%" y="277" width="0.0220%" height="15" fill="rgb(207,104,49)" fg:x="3041" fg:w="1"/><text x="67.1293%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="66.8793%" y="261" width="0.0220%" height="15" fill="rgb(248,211,50)" fg:x="3041" fg:w="1"/><text x="67.1293%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="66.8793%" y="245" width="0.0220%" height="15" fill="rgb(217,13,45)" fg:x="3041" fg:w="1"/><text x="67.1293%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="66.8793%" y="229" width="0.0220%" height="15" fill="rgb(211,216,49)" fg:x="3041" fg:w="1"/><text x="67.1293%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="66.8793%" y="213" width="0.0220%" height="15" fill="rgb(221,58,53)" fg:x="3041" fg:w="1"/><text x="67.1293%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="66.8793%" y="197" width="0.0220%" height="15" fill="rgb(220,112,41)" fg:x="3041" fg:w="1"/><text x="67.1293%" y="207.50"></text></g><g><title>[libc.so.6] (13 samples, 0.29%)</title><rect x="66.9013%" y="341" width="0.2859%" height="15" fill="rgb(236,38,28)" fg:x="3042" fg:w="13"/><text x="67.1513%" y="351.50"></text></g><g><title>[unknown] (13 samples, 0.29%)</title><rect x="66.9013%" y="325" width="0.2859%" height="15" fill="rgb(227,195,22)" fg:x="3042" fg:w="13"/><text x="67.1513%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (13 samples, 0.29%)</title><rect x="69.1005%" y="261" width="0.2859%" height="15" fill="rgb(214,55,33)" fg:x="3142" fg:w="13"/><text x="69.3505%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="69.3644%" y="245" width="0.0220%" height="15" fill="rgb(248,80,13)" fg:x="3154" fg:w="1"/><text x="69.6144%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (37 samples, 0.81%)</title><rect x="68.8146%" y="277" width="0.8137%" height="15" fill="rgb(238,52,6)" fg:x="3129" fg:w="37"/><text x="69.0646%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (11 samples, 0.24%)</title><rect x="69.3864%" y="261" width="0.2419%" height="15" fill="rgb(224,198,47)" fg:x="3155" fg:w="11"/><text x="69.6364%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="69.5843%" y="245" width="0.0440%" height="15" fill="rgb(233,171,20)" fg:x="3164" fg:w="2"/><text x="69.8343%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (57 samples, 1.25%)</title><rect x="69.7823%" y="261" width="1.2536%" height="15" fill="rgb(241,30,25)" fg:x="3173" fg:w="57"/><text x="70.0323%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="71.0139%" y="245" width="0.0220%" height="15" fill="rgb(207,171,38)" fg:x="3229" fg:w="1"/><text x="71.2639%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (74 samples, 1.63%)</title><rect x="69.6283%" y="277" width="1.6274%" height="15" fill="rgb(234,70,1)" fg:x="3166" fg:w="74"/><text x="69.8783%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (10 samples, 0.22%)</title><rect x="71.0358%" y="261" width="0.2199%" height="15" fill="rgb(232,178,18)" fg:x="3230" fg:w="10"/><text x="71.2858%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="71.2338%" y="245" width="0.0220%" height="15" fill="rgb(241,78,40)" fg:x="3239" fg:w="1"/><text x="71.4838%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="71.2338%" y="229" width="0.0220%" height="15" fill="rgb(222,35,25)" fg:x="3239" fg:w="1"/><text x="71.4838%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="71.2338%" y="213" width="0.0220%" height="15" fill="rgb(207,92,16)" fg:x="3239" fg:w="1"/><text x="71.4838%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="71.2338%" y="197" width="0.0220%" height="15" fill="rgb(216,59,51)" fg:x="3239" fg:w="1"/><text x="71.4838%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="71.2338%" y="181" width="0.0220%" height="15" fill="rgb(213,80,28)" fg:x="3239" fg:w="1"/><text x="71.4838%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="71.2338%" y="165" width="0.0220%" height="15" fill="rgb(220,93,7)" fg:x="3239" fg:w="1"/><text x="71.4838%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="71.2338%" y="149" width="0.0220%" height="15" fill="rgb(225,24,44)" fg:x="3239" fg:w="1"/><text x="71.4838%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="71.2338%" y="133" width="0.0220%" height="15" fill="rgb(243,74,40)" fg:x="3239" fg:w="1"/><text x="71.4838%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="71.2338%" y="117" width="0.0220%" height="15" fill="rgb(228,39,7)" fg:x="3239" fg:w="1"/><text x="71.4838%" y="127.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (167 samples, 3.67%)</title><rect x="67.6710%" y="325" width="3.6728%" height="15" fill="rgb(227,79,8)" fg:x="3077" fg:w="167"/><text x="67.9210%" y="335.50">&lt;std..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (167 samples, 3.67%)</title><rect x="67.6710%" y="309" width="3.6728%" height="15" fill="rgb(236,58,11)" fg:x="3077" fg:w="167"/><text x="67.9210%" y="319.50">&lt;cor..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (167 samples, 3.67%)</title><rect x="67.6710%" y="293" width="3.6728%" height="15" fill="rgb(249,63,35)" fg:x="3077" fg:w="167"/><text x="67.9210%" y="303.50">&lt;cor..</text></g><g><title>[unknown] (4 samples, 0.09%)</title><rect x="71.2558%" y="277" width="0.0880%" height="15" fill="rgb(252,114,16)" fg:x="3240" fg:w="4"/><text x="71.5058%" y="287.50"></text></g><g><title>[unknown] (4 samples, 0.09%)</title><rect x="71.2558%" y="261" width="0.0880%" height="15" fill="rgb(254,151,24)" fg:x="3240" fg:w="4"/><text x="71.5058%" y="271.50"></text></g><g><title>[unknown] (3 samples, 0.07%)</title><rect x="71.2778%" y="245" width="0.0660%" height="15" fill="rgb(253,54,39)" fg:x="3241" fg:w="3"/><text x="71.5278%" y="255.50"></text></g><g><title>[unknown] (3 samples, 0.07%)</title><rect x="71.2778%" y="229" width="0.0660%" height="15" fill="rgb(243,25,45)" fg:x="3241" fg:w="3"/><text x="71.5278%" y="239.50"></text></g><g><title>[unknown] (3 samples, 0.07%)</title><rect x="71.2778%" y="213" width="0.0660%" height="15" fill="rgb(234,134,9)" fg:x="3241" fg:w="3"/><text x="71.5278%" y="223.50"></text></g><g><title>[unknown] (3 samples, 0.07%)</title><rect x="71.2778%" y="197" width="0.0660%" height="15" fill="rgb(227,166,31)" fg:x="3241" fg:w="3"/><text x="71.5278%" y="207.50"></text></g><g><title>[unknown] (3 samples, 0.07%)</title><rect x="71.2778%" y="181" width="0.0660%" height="15" fill="rgb(245,143,41)" fg:x="3241" fg:w="3"/><text x="71.5278%" y="191.50"></text></g><g><title>[unknown] (3 samples, 0.07%)</title><rect x="71.2778%" y="165" width="0.0660%" height="15" fill="rgb(238,181,32)" fg:x="3241" fg:w="3"/><text x="71.5278%" y="175.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="71.2998%" y="149" width="0.0440%" height="15" fill="rgb(224,113,18)" fg:x="3242" fg:w="2"/><text x="71.5498%" y="159.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (27 samples, 0.59%)</title><rect x="71.3437%" y="325" width="0.5938%" height="15" fill="rgb(240,229,28)" fg:x="3244" fg:w="27"/><text x="71.5937%" y="335.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (19 samples, 0.42%)</title><rect x="71.5197%" y="309" width="0.4179%" height="15" fill="rgb(250,185,3)" fg:x="3252" fg:w="19"/><text x="71.7697%" y="319.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (19 samples, 0.42%)</title><rect x="71.5197%" y="293" width="0.4179%" height="15" fill="rgb(212,59,25)" fg:x="3252" fg:w="19"/><text x="71.7697%" y="303.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (19 samples, 0.42%)</title><rect x="71.5197%" y="277" width="0.4179%" height="15" fill="rgb(221,87,20)" fg:x="3252" fg:w="19"/><text x="71.7697%" y="287.50"></text></g><g><title>[unknown] (3 samples, 0.07%)</title><rect x="71.8716%" y="261" width="0.0660%" height="15" fill="rgb(213,74,28)" fg:x="3268" fg:w="3"/><text x="72.1216%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="71.9155%" y="245" width="0.0220%" height="15" fill="rgb(224,132,34)" fg:x="3270" fg:w="1"/><text x="72.1655%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="71.9155%" y="229" width="0.0220%" height="15" fill="rgb(222,101,24)" fg:x="3270" fg:w="1"/><text x="72.1655%" y="239.50"></text></g><g><title>[unknown] (3 samples, 0.07%)</title><rect x="71.9375%" y="325" width="0.0660%" height="15" fill="rgb(254,142,4)" fg:x="3271" fg:w="3"/><text x="72.1875%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="71.9595%" y="309" width="0.0440%" height="15" fill="rgb(230,229,49)" fg:x="3272" fg:w="2"/><text x="72.2095%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="71.9595%" y="293" width="0.0440%" height="15" fill="rgb(238,70,47)" fg:x="3272" fg:w="2"/><text x="72.2095%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="71.9595%" y="277" width="0.0440%" height="15" fill="rgb(231,160,17)" fg:x="3272" fg:w="2"/><text x="72.2095%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="71.9595%" y="261" width="0.0440%" height="15" fill="rgb(218,68,53)" fg:x="3272" fg:w="2"/><text x="72.2095%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="71.9595%" y="245" width="0.0440%" height="15" fill="rgb(236,111,10)" fg:x="3272" fg:w="2"/><text x="72.2095%" y="255.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="71.9595%" y="229" width="0.0440%" height="15" fill="rgb(224,34,41)" fg:x="3272" fg:w="2"/><text x="72.2095%" y="239.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="71.9595%" y="213" width="0.0440%" height="15" fill="rgb(241,118,19)" fg:x="3272" fg:w="2"/><text x="72.2095%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="71.9815%" y="197" width="0.0220%" height="15" fill="rgb(238,129,25)" fg:x="3273" fg:w="1"/><text x="72.2315%" y="207.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (17 samples, 0.37%)</title><rect x="73.3231%" y="165" width="0.3739%" height="15" fill="rgb(238,22,31)" fg:x="3334" fg:w="17"/><text x="73.5731%" y="175.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="73.6530%" y="149" width="0.0440%" height="15" fill="rgb(222,174,48)" fg:x="3349" fg:w="2"/><text x="73.9030%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="73.6750%" y="133" width="0.0220%" height="15" fill="rgb(206,152,40)" fg:x="3350" fg:w="1"/><text x="73.9250%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="73.6750%" y="117" width="0.0220%" height="15" fill="rgb(218,99,54)" fg:x="3350" fg:w="1"/><text x="73.9250%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="73.6750%" y="101" width="0.0220%" height="15" fill="rgb(220,174,26)" fg:x="3350" fg:w="1"/><text x="73.9250%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="73.6750%" y="85" width="0.0220%" height="15" fill="rgb(245,116,9)" fg:x="3350" fg:w="1"/><text x="73.9250%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="73.6750%" y="69" width="0.0220%" height="15" fill="rgb(209,72,35)" fg:x="3350" fg:w="1"/><text x="73.9250%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="73.6750%" y="53" width="0.0220%" height="15" fill="rgb(226,126,21)" fg:x="3350" fg:w="1"/><text x="73.9250%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="73.6750%" y="37" width="0.0220%" height="15" fill="rgb(227,192,1)" fg:x="3350" fg:w="1"/><text x="73.9250%" y="47.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (34 samples, 0.75%)</title><rect x="73.1471%" y="181" width="0.7477%" height="15" fill="rgb(237,180,29)" fg:x="3326" fg:w="34"/><text x="73.3971%" y="191.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (9 samples, 0.20%)</title><rect x="73.6969%" y="165" width="0.1979%" height="15" fill="rgb(230,197,35)" fg:x="3351" fg:w="9"/><text x="73.9469%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="73.8949%" y="181" width="0.0220%" height="15" fill="rgb(246,193,31)" fg:x="3360" fg:w="1"/><text x="74.1449%" y="191.50"></text></g><g><title>core::hash::sip::u8to64_le (13 samples, 0.29%)</title><rect x="73.9169%" y="181" width="0.2859%" height="15" fill="rgb(241,36,4)" fg:x="3361" fg:w="13"/><text x="74.1669%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="74.1808%" y="165" width="0.0220%" height="15" fill="rgb(241,130,17)" fg:x="3373" fg:w="1"/><text x="74.4308%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="74.1808%" y="149" width="0.0220%" height="15" fill="rgb(206,137,32)" fg:x="3373" fg:w="1"/><text x="74.4308%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="74.1808%" y="133" width="0.0220%" height="15" fill="rgb(237,228,51)" fg:x="3373" fg:w="1"/><text x="74.4308%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="74.1808%" y="117" width="0.0220%" height="15" fill="rgb(243,6,42)" fg:x="3373" fg:w="1"/><text x="74.4308%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="74.1808%" y="101" width="0.0220%" height="15" fill="rgb(251,74,28)" fg:x="3373" fg:w="1"/><text x="74.4308%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="74.1808%" y="85" width="0.0220%" height="15" fill="rgb(218,20,49)" fg:x="3373" fg:w="1"/><text x="74.4308%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="74.1808%" y="69" width="0.0220%" height="15" fill="rgb(238,28,14)" fg:x="3373" fg:w="1"/><text x="74.4308%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="74.1808%" y="53" width="0.0220%" height="15" fill="rgb(229,40,46)" fg:x="3373" fg:w="1"/><text x="74.4308%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="74.1808%" y="37" width="0.0220%" height="15" fill="rgb(244,195,20)" fg:x="3373" fg:w="1"/><text x="74.4308%" y="47.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (89 samples, 1.96%)</title><rect x="72.2674%" y="229" width="1.9573%" height="15" fill="rgb(253,56,35)" fg:x="3286" fg:w="89"/><text x="72.5174%" y="239.50">&lt;..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (89 samples, 1.96%)</title><rect x="72.2674%" y="213" width="1.9573%" height="15" fill="rgb(210,149,44)" fg:x="3286" fg:w="89"/><text x="72.5174%" y="223.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (89 samples, 1.96%)</title><rect x="72.2674%" y="197" width="1.9573%" height="15" fill="rgb(240,135,12)" fg:x="3286" fg:w="89"/><text x="72.5174%" y="207.50">&lt;..</text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="74.2028%" y="181" width="0.0220%" height="15" fill="rgb(251,24,50)" fg:x="3374" fg:w="1"/><text x="74.4528%" y="191.50"></text></g><g><title>&lt;day16::Direction as core::hash::Hash&gt;::hash (113 samples, 2.49%)</title><rect x="72.0035%" y="293" width="2.4852%" height="15" fill="rgb(243,200,47)" fg:x="3274" fg:w="113"/><text x="72.2535%" y="303.50">&lt;d..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (107 samples, 2.35%)</title><rect x="72.1355%" y="277" width="2.3532%" height="15" fill="rgb(224,166,26)" fg:x="3280" fg:w="107"/><text x="72.3855%" y="287.50">c..</text></g><g><title>core::hash::Hasher::write_isize (107 samples, 2.35%)</title><rect x="72.1355%" y="261" width="2.3532%" height="15" fill="rgb(233,0,47)" fg:x="3280" fg:w="107"/><text x="72.3855%" y="271.50">c..</text></g><g><title>core::hash::Hasher::write_usize (104 samples, 2.29%)</title><rect x="72.2015%" y="245" width="2.2872%" height="15" fill="rgb(253,80,5)" fg:x="3283" fg:w="104"/><text x="72.4515%" y="255.50">c..</text></g><g><title>core::num::&lt;impl usize&gt;::to_ne_bytes (12 samples, 0.26%)</title><rect x="74.2248%" y="229" width="0.2639%" height="15" fill="rgb(214,133,25)" fg:x="3375" fg:w="12"/><text x="74.4748%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (22 samples, 0.48%)</title><rect x="76.9079%" y="181" width="0.4838%" height="15" fill="rgb(209,27,14)" fg:x="3497" fg:w="22"/><text x="77.1579%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (43 samples, 0.95%)</title><rect x="76.5780%" y="197" width="0.9457%" height="15" fill="rgb(219,102,51)" fg:x="3482" fg:w="43"/><text x="76.8280%" y="207.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (6 samples, 0.13%)</title><rect x="77.3917%" y="181" width="0.1320%" height="15" fill="rgb(237,18,16)" fg:x="3519" fg:w="6"/><text x="77.6417%" y="191.50"></text></g><g><title>[unknown] (3 samples, 0.07%)</title><rect x="77.5236%" y="197" width="0.0660%" height="15" fill="rgb(241,85,17)" fg:x="3525" fg:w="3"/><text x="77.7736%" y="207.50"></text></g><g><title>[unknown] (3 samples, 0.07%)</title><rect x="77.5236%" y="181" width="0.0660%" height="15" fill="rgb(236,90,42)" fg:x="3525" fg:w="3"/><text x="77.7736%" y="191.50"></text></g><g><title>[unknown] (3 samples, 0.07%)</title><rect x="77.5236%" y="165" width="0.0660%" height="15" fill="rgb(249,57,21)" fg:x="3525" fg:w="3"/><text x="77.7736%" y="175.50"></text></g><g><title>[unknown] (3 samples, 0.07%)</title><rect x="77.5236%" y="149" width="0.0660%" height="15" fill="rgb(243,12,36)" fg:x="3525" fg:w="3"/><text x="77.7736%" y="159.50"></text></g><g><title>[unknown] (3 samples, 0.07%)</title><rect x="77.5236%" y="133" width="0.0660%" height="15" fill="rgb(253,128,47)" fg:x="3525" fg:w="3"/><text x="77.7736%" y="143.50"></text></g><g><title>[unknown] (3 samples, 0.07%)</title><rect x="77.5236%" y="117" width="0.0660%" height="15" fill="rgb(207,33,20)" fg:x="3525" fg:w="3"/><text x="77.7736%" y="127.50"></text></g><g><title>[unknown] (3 samples, 0.07%)</title><rect x="77.5236%" y="101" width="0.0660%" height="15" fill="rgb(233,215,35)" fg:x="3525" fg:w="3"/><text x="77.7736%" y="111.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="77.5456%" y="85" width="0.0440%" height="15" fill="rgb(249,188,52)" fg:x="3526" fg:w="2"/><text x="77.7956%" y="95.50"></text></g><g><title>core::hash::sip::u8to64_le (28 samples, 0.62%)</title><rect x="77.5896%" y="197" width="0.6158%" height="15" fill="rgb(225,12,32)" fg:x="3528" fg:w="28"/><text x="77.8396%" y="207.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="78.1614%" y="181" width="0.0440%" height="15" fill="rgb(247,98,14)" fg:x="3554" fg:w="2"/><text x="78.4114%" y="191.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="78.1614%" y="165" width="0.0440%" height="15" fill="rgb(247,219,48)" fg:x="3554" fg:w="2"/><text x="78.4114%" y="175.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="78.1614%" y="149" width="0.0440%" height="15" fill="rgb(253,60,48)" fg:x="3554" fg:w="2"/><text x="78.4114%" y="159.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="78.1614%" y="133" width="0.0440%" height="15" fill="rgb(245,15,52)" fg:x="3554" fg:w="2"/><text x="78.4114%" y="143.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="78.1614%" y="117" width="0.0440%" height="15" fill="rgb(220,133,28)" fg:x="3554" fg:w="2"/><text x="78.4114%" y="127.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="78.1614%" y="101" width="0.0440%" height="15" fill="rgb(217,180,4)" fg:x="3554" fg:w="2"/><text x="78.4114%" y="111.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="78.1614%" y="85" width="0.0440%" height="15" fill="rgb(251,24,1)" fg:x="3554" fg:w="2"/><text x="78.4114%" y="95.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="78.1614%" y="69" width="0.0440%" height="15" fill="rgb(212,185,49)" fg:x="3554" fg:w="2"/><text x="78.4114%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="78.1834%" y="53" width="0.0220%" height="15" fill="rgb(215,175,22)" fg:x="3555" fg:w="1"/><text x="78.4334%" y="63.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (143 samples, 3.14%)</title><rect x="75.1265%" y="245" width="3.1449%" height="15" fill="rgb(250,205,14)" fg:x="3416" fg:w="143"/><text x="75.3765%" y="255.50">&lt;st..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (143 samples, 3.14%)</title><rect x="75.1265%" y="229" width="3.1449%" height="15" fill="rgb(225,211,22)" fg:x="3416" fg:w="143"/><text x="75.3765%" y="239.50">&lt;co..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (143 samples, 3.14%)</title><rect x="75.1265%" y="213" width="3.1449%" height="15" fill="rgb(251,179,42)" fg:x="3416" fg:w="143"/><text x="75.3765%" y="223.50">&lt;co..</text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.07%)</title><rect x="78.2054%" y="197" width="0.0660%" height="15" fill="rgb(208,216,51)" fg:x="3556" fg:w="3"/><text x="78.4554%" y="207.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (537 samples, 11.81%)</title><rect x="66.9013%" y="373" width="11.8100%" height="15" fill="rgb(235,36,11)" fg:x="3042" fg:w="537"/><text x="67.1513%" y="383.50">hashbrown::map::ma..</text></g><g><title>hashbrown::map::make_hash (537 samples, 11.81%)</title><rect x="66.9013%" y="357" width="11.8100%" height="15" fill="rgb(213,189,28)" fg:x="3042" fg:w="537"/><text x="67.1513%" y="367.50">hashbrown::map::ma..</text></g><g><title>core::hash::BuildHasher::hash_one (524 samples, 11.52%)</title><rect x="67.1872%" y="341" width="11.5241%" height="15" fill="rgb(227,203,42)" fg:x="3055" fg:w="524"/><text x="67.4372%" y="351.50">core::hash::Build..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (305 samples, 6.71%)</title><rect x="72.0035%" y="325" width="6.7077%" height="15" fill="rgb(244,72,36)" fg:x="3274" fg:w="305"/><text x="72.2535%" y="335.50">core::has..</text></g><g><title>&lt;day16::maze_walker::BeamLocation as core::hash::Hash&gt;::hash (305 samples, 6.71%)</title><rect x="72.0035%" y="309" width="6.7077%" height="15" fill="rgb(213,53,17)" fg:x="3274" fg:w="305"/><text x="72.2535%" y="319.50">&lt;day16::m..</text></g><g><title>&lt;day16::Position as core::hash::Hash&gt;::hash (192 samples, 4.22%)</title><rect x="74.4887%" y="293" width="4.2226%" height="15" fill="rgb(207,167,3)" fg:x="3387" fg:w="192"/><text x="74.7387%" y="303.50">&lt;day1..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (192 samples, 4.22%)</title><rect x="74.4887%" y="277" width="4.2226%" height="15" fill="rgb(216,98,30)" fg:x="3387" fg:w="192"/><text x="74.7387%" y="287.50">core:..</text></g><g><title>core::hash::Hasher::write_usize (173 samples, 3.80%)</title><rect x="74.9065%" y="261" width="3.8047%" height="15" fill="rgb(236,123,15)" fg:x="3406" fg:w="173"/><text x="75.1565%" y="271.50">core..</text></g><g><title>core::num::&lt;impl usize&gt;::to_ne_bytes (20 samples, 0.44%)</title><rect x="78.2714%" y="245" width="0.4399%" height="15" fill="rgb(248,81,50)" fg:x="3559" fg:w="20"/><text x="78.5214%" y="255.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (4 samples, 0.09%)</title><rect x="78.7112%" y="373" width="0.0880%" height="15" fill="rgb(214,120,4)" fg:x="3579" fg:w="4"/><text x="78.9612%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (4 samples, 0.09%)</title><rect x="78.7112%" y="357" width="0.0880%" height="15" fill="rgb(208,179,34)" fg:x="3579" fg:w="4"/><text x="78.9612%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (4 samples, 0.09%)</title><rect x="78.7112%" y="341" width="0.0880%" height="15" fill="rgb(227,140,7)" fg:x="3579" fg:w="4"/><text x="78.9612%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.09%)</title><rect x="78.7112%" y="325" width="0.0880%" height="15" fill="rgb(214,22,6)" fg:x="3579" fg:w="4"/><text x="78.9612%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="78.7772%" y="309" width="0.0220%" height="15" fill="rgb(207,137,27)" fg:x="3582" fg:w="1"/><text x="79.0272%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="78.7772%" y="293" width="0.0220%" height="15" fill="rgb(210,8,46)" fg:x="3582" fg:w="1"/><text x="79.0272%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="78.7772%" y="277" width="0.0220%" height="15" fill="rgb(240,16,54)" fg:x="3582" fg:w="1"/><text x="79.0272%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="78.7772%" y="261" width="0.0220%" height="15" fill="rgb(211,209,29)" fg:x="3582" fg:w="1"/><text x="79.0272%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="78.7772%" y="245" width="0.0220%" height="15" fill="rgb(226,228,24)" fg:x="3582" fg:w="1"/><text x="79.0272%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="78.7772%" y="229" width="0.0220%" height="15" fill="rgb(222,84,9)" fg:x="3582" fg:w="1"/><text x="79.0272%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="78.7772%" y="213" width="0.0220%" height="15" fill="rgb(234,203,30)" fg:x="3582" fg:w="1"/><text x="79.0272%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="78.7772%" y="197" width="0.0220%" height="15" fill="rgb(238,109,14)" fg:x="3582" fg:w="1"/><text x="79.0272%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="78.7772%" y="181" width="0.0220%" height="15" fill="rgb(233,206,34)" fg:x="3582" fg:w="1"/><text x="79.0272%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (550 samples, 12.10%)</title><rect x="66.9013%" y="389" width="12.0959%" height="15" fill="rgb(220,167,47)" fg:x="3042" fg:w="550"/><text x="67.1513%" y="399.50">hashbrown::raw::Ra..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (9 samples, 0.20%)</title><rect x="78.7992%" y="373" width="0.1979%" height="15" fill="rgb(238,105,10)" fg:x="3583" fg:w="9"/><text x="79.0492%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (9 samples, 0.20%)</title><rect x="78.7992%" y="357" width="0.1979%" height="15" fill="rgb(213,227,17)" fg:x="3583" fg:w="9"/><text x="79.0492%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (9 samples, 0.20%)</title><rect x="78.7992%" y="341" width="0.1979%" height="15" fill="rgb(217,132,38)" fg:x="3583" fg:w="9"/><text x="79.0492%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="78.9751%" y="325" width="0.0220%" height="15" fill="rgb(242,146,4)" fg:x="3591" fg:w="1"/><text x="79.2251%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="78.9751%" y="309" width="0.0220%" height="15" fill="rgb(212,61,9)" fg:x="3591" fg:w="1"/><text x="79.2251%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="78.9751%" y="293" width="0.0220%" height="15" fill="rgb(247,126,22)" fg:x="3591" fg:w="1"/><text x="79.2251%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="78.9751%" y="277" width="0.0220%" height="15" fill="rgb(220,196,2)" fg:x="3591" fg:w="1"/><text x="79.2251%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="78.9751%" y="261" width="0.0220%" height="15" fill="rgb(208,46,4)" fg:x="3591" fg:w="1"/><text x="79.2251%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="78.9751%" y="245" width="0.0220%" height="15" fill="rgb(252,104,46)" fg:x="3591" fg:w="1"/><text x="79.2251%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="78.9751%" y="229" width="0.0220%" height="15" fill="rgb(237,152,48)" fg:x="3591" fg:w="1"/><text x="79.2251%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="78.9751%" y="213" width="0.0220%" height="15" fill="rgb(221,59,37)" fg:x="3591" fg:w="1"/><text x="79.2251%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="78.9751%" y="197" width="0.0220%" height="15" fill="rgb(209,202,51)" fg:x="3591" fg:w="1"/><text x="79.2251%" y="207.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket_ptr (15 samples, 0.33%)</title><rect x="78.9971%" y="389" width="0.3299%" height="15" fill="rgb(228,81,30)" fg:x="3592" fg:w="15"/><text x="79.2471%" y="399.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (39 samples, 0.86%)</title><rect x="79.7229%" y="341" width="0.8577%" height="15" fill="rgb(227,42,39)" fg:x="3625" fg:w="39"/><text x="79.9729%" y="351.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (39 samples, 0.86%)</title><rect x="79.7229%" y="325" width="0.8577%" height="15" fill="rgb(221,26,2)" fg:x="3625" fg:w="39"/><text x="79.9729%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="80.5586%" y="309" width="0.0220%" height="15" fill="rgb(254,61,31)" fg:x="3663" fg:w="1"/><text x="80.8086%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="80.5586%" y="293" width="0.0220%" height="15" fill="rgb(222,173,38)" fg:x="3663" fg:w="1"/><text x="80.8086%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="80.5586%" y="277" width="0.0220%" height="15" fill="rgb(218,50,12)" fg:x="3663" fg:w="1"/><text x="80.8086%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="80.5586%" y="261" width="0.0220%" height="15" fill="rgb(223,88,40)" fg:x="3663" fg:w="1"/><text x="80.8086%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="80.5586%" y="245" width="0.0220%" height="15" fill="rgb(237,54,19)" fg:x="3663" fg:w="1"/><text x="80.8086%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="80.5586%" y="229" width="0.0220%" height="15" fill="rgb(251,129,25)" fg:x="3663" fg:w="1"/><text x="80.8086%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="80.5586%" y="213" width="0.0220%" height="15" fill="rgb(238,97,19)" fg:x="3663" fg:w="1"/><text x="80.8086%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="80.5586%" y="197" width="0.0220%" height="15" fill="rgb(240,169,18)" fg:x="3663" fg:w="1"/><text x="80.8086%" y="207.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (130 samples, 2.86%)</title><rect x="79.3270%" y="357" width="2.8590%" height="15" fill="rgb(230,187,49)" fg:x="3607" fg:w="130"/><text x="79.5770%" y="367.50">ha..</text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (73 samples, 1.61%)</title><rect x="80.5806%" y="341" width="1.6055%" height="15" fill="rgb(209,44,26)" fg:x="3664" fg:w="73"/><text x="80.8306%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (73 samples, 1.61%)</title><rect x="80.5806%" y="325" width="1.6055%" height="15" fill="rgb(244,0,6)" fg:x="3664" fg:w="73"/><text x="80.8306%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.11%)</title><rect x="82.0761%" y="309" width="0.1100%" height="15" fill="rgb(248,18,21)" fg:x="3732" fg:w="5"/><text x="82.3261%" y="319.50"></text></g><g><title>[unknown] (4 samples, 0.09%)</title><rect x="82.0981%" y="293" width="0.0880%" height="15" fill="rgb(245,180,19)" fg:x="3733" fg:w="4"/><text x="82.3481%" y="303.50"></text></g><g><title>[unknown] (4 samples, 0.09%)</title><rect x="82.0981%" y="277" width="0.0880%" height="15" fill="rgb(252,118,36)" fg:x="3733" fg:w="4"/><text x="82.3481%" y="287.50"></text></g><g><title>[unknown] (4 samples, 0.09%)</title><rect x="82.0981%" y="261" width="0.0880%" height="15" fill="rgb(210,224,19)" fg:x="3733" fg:w="4"/><text x="82.3481%" y="271.50"></text></g><g><title>[unknown] (4 samples, 0.09%)</title><rect x="82.0981%" y="245" width="0.0880%" height="15" fill="rgb(218,30,24)" fg:x="3733" fg:w="4"/><text x="82.3481%" y="255.50"></text></g><g><title>[unknown] (4 samples, 0.09%)</title><rect x="82.0981%" y="229" width="0.0880%" height="15" fill="rgb(219,75,50)" fg:x="3733" fg:w="4"/><text x="82.3481%" y="239.50"></text></g><g><title>[unknown] (3 samples, 0.07%)</title><rect x="82.1201%" y="213" width="0.0660%" height="15" fill="rgb(234,72,50)" fg:x="3734" fg:w="3"/><text x="82.3701%" y="223.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="82.1421%" y="197" width="0.0440%" height="15" fill="rgb(219,100,48)" fg:x="3735" fg:w="2"/><text x="82.3921%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="82.1641%" y="181" width="0.0220%" height="15" fill="rgb(253,5,41)" fg:x="3736" fg:w="1"/><text x="82.4141%" y="191.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (36 samples, 0.79%)</title><rect x="82.1861%" y="357" width="0.7917%" height="15" fill="rgb(247,181,11)" fg:x="3737" fg:w="36"/><text x="82.4361%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (6 samples, 0.13%)</title><rect x="82.8458%" y="341" width="0.1320%" height="15" fill="rgb(222,223,25)" fg:x="3767" fg:w="6"/><text x="83.0958%" y="351.50"></text></g><g><title>hashbrown::raw::is_full (6 samples, 0.13%)</title><rect x="82.8458%" y="325" width="0.1320%" height="15" fill="rgb(214,198,28)" fg:x="3767" fg:w="6"/><text x="83.0958%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (7 samples, 0.15%)</title><rect x="82.9778%" y="357" width="0.1539%" height="15" fill="rgb(230,46,43)" fg:x="3773" fg:w="7"/><text x="83.2278%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="83.1097%" y="341" width="0.0220%" height="15" fill="rgb(233,65,53)" fg:x="3779" fg:w="1"/><text x="83.3597%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="83.1097%" y="325" width="0.0220%" height="15" fill="rgb(221,121,27)" fg:x="3779" fg:w="1"/><text x="83.3597%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="83.1097%" y="309" width="0.0220%" height="15" fill="rgb(247,70,47)" fg:x="3779" fg:w="1"/><text x="83.3597%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="83.1097%" y="293" width="0.0220%" height="15" fill="rgb(228,85,35)" fg:x="3779" fg:w="1"/><text x="83.3597%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="83.1097%" y="277" width="0.0220%" height="15" fill="rgb(209,50,18)" fg:x="3779" fg:w="1"/><text x="83.3597%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="83.1097%" y="261" width="0.0220%" height="15" fill="rgb(250,19,35)" fg:x="3779" fg:w="1"/><text x="83.3597%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="83.1097%" y="245" width="0.0220%" height="15" fill="rgb(253,107,29)" fg:x="3779" fg:w="1"/><text x="83.3597%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (176 samples, 3.87%)</title><rect x="79.3270%" y="373" width="3.8707%" height="15" fill="rgb(252,179,29)" fg:x="3607" fg:w="176"/><text x="79.5770%" y="383.50">hash..</text></g><g><title>hashbrown::raw::sse2::Group::load (3 samples, 0.07%)</title><rect x="83.1317%" y="357" width="0.0660%" height="15" fill="rgb(238,194,6)" fg:x="3780" fg:w="3"/><text x="83.3817%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (3 samples, 0.07%)</title><rect x="83.1317%" y="341" width="0.0660%" height="15" fill="rgb(238,164,29)" fg:x="3780" fg:w="3"/><text x="83.3817%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.07%)</title><rect x="83.1317%" y="325" width="0.0660%" height="15" fill="rgb(224,25,9)" fg:x="3780" fg:w="3"/><text x="83.3817%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (181 samples, 3.98%)</title><rect x="79.3270%" y="389" width="3.9806%" height="15" fill="rgb(244,153,23)" fg:x="3607" fg:w="181"/><text x="79.5770%" y="399.50">hash..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (5 samples, 0.11%)</title><rect x="83.1977%" y="373" width="0.1100%" height="15" fill="rgb(212,203,14)" fg:x="3783" fg:w="5"/><text x="83.4477%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (5 samples, 0.11%)</title><rect x="83.1977%" y="357" width="0.1100%" height="15" fill="rgb(220,164,20)" fg:x="3783" fg:w="5"/><text x="83.4477%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.02%)</title><rect x="83.2857%" y="341" width="0.0220%" height="15" fill="rgb(222,203,48)" fg:x="3787" fg:w="1"/><text x="83.5357%" y="351.50"></text></g><g><title>[libc.so.6] (26 samples, 0.57%)</title><rect x="83.3297%" y="325" width="0.5718%" height="15" fill="rgb(215,159,22)" fg:x="3789" fg:w="26"/><text x="83.5797%" y="335.50"></text></g><g><title>[unknown] (9 samples, 0.20%)</title><rect x="83.7035%" y="309" width="0.1979%" height="15" fill="rgb(216,183,47)" fg:x="3806" fg:w="9"/><text x="83.9535%" y="319.50"></text></g><g><title>[unknown] (8 samples, 0.18%)</title><rect x="83.7255%" y="293" width="0.1759%" height="15" fill="rgb(229,195,25)" fg:x="3807" fg:w="8"/><text x="83.9755%" y="303.50"></text></g><g><title>[unknown] (8 samples, 0.18%)</title><rect x="83.7255%" y="277" width="0.1759%" height="15" fill="rgb(224,132,51)" fg:x="3807" fg:w="8"/><text x="83.9755%" y="287.50"></text></g><g><title>[unknown] (7 samples, 0.15%)</title><rect x="83.7475%" y="261" width="0.1539%" height="15" fill="rgb(240,63,7)" fg:x="3808" fg:w="7"/><text x="83.9975%" y="271.50"></text></g><g><title>[unknown] (6 samples, 0.13%)</title><rect x="83.7695%" y="245" width="0.1320%" height="15" fill="rgb(249,182,41)" fg:x="3809" fg:w="6"/><text x="84.0195%" y="255.50"></text></g><g><title>[unknown] (4 samples, 0.09%)</title><rect x="83.8135%" y="229" width="0.0880%" height="15" fill="rgb(243,47,26)" fg:x="3811" fg:w="4"/><text x="84.0635%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="83.8795%" y="213" width="0.0220%" height="15" fill="rgb(233,48,2)" fg:x="3814" fg:w="1"/><text x="84.1295%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="83.8795%" y="197" width="0.0220%" height="15" fill="rgb(244,165,34)" fg:x="3814" fg:w="1"/><text x="84.1295%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="83.8795%" y="181" width="0.0220%" height="15" fill="rgb(207,89,7)" fg:x="3814" fg:w="1"/><text x="84.1295%" y="191.50"></text></g><g><title>[libc.so.6] (6 samples, 0.13%)</title><rect x="83.9015%" y="309" width="0.1320%" height="15" fill="rgb(244,117,36)" fg:x="3815" fg:w="6"/><text x="84.1515%" y="319.50"></text></g><g><title>[libc.so.6] (6 samples, 0.13%)</title><rect x="83.9015%" y="293" width="0.1320%" height="15" fill="rgb(226,144,34)" fg:x="3815" fg:w="6"/><text x="84.1515%" y="303.50"></text></g><g><title>[unknown] (6 samples, 0.13%)</title><rect x="83.9015%" y="277" width="0.1320%" height="15" fill="rgb(213,23,19)" fg:x="3815" fg:w="6"/><text x="84.1515%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="84.0114%" y="261" width="0.0220%" height="15" fill="rgb(217,75,12)" fg:x="3820" fg:w="1"/><text x="84.2614%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="84.0114%" y="245" width="0.0220%" height="15" fill="rgb(224,159,17)" fg:x="3820" fg:w="1"/><text x="84.2614%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (33 samples, 0.73%)</title><rect x="83.3297%" y="357" width="0.7258%" height="15" fill="rgb(217,118,1)" fg:x="3789" fg:w="33"/><text x="83.5797%" y="367.50"></text></g><g><title>core::intrinsics::write_bytes (33 samples, 0.73%)</title><rect x="83.3297%" y="341" width="0.7258%" height="15" fill="rgb(232,180,48)" fg:x="3789" fg:w="33"/><text x="83.5797%" y="351.50"></text></g><g><title>malloc (7 samples, 0.15%)</title><rect x="83.9015%" y="325" width="0.1539%" height="15" fill="rgb(230,27,33)" fg:x="3815" fg:w="7"/><text x="84.1515%" y="335.50"></text></g><g><title>__lll_lock_wake_private (1 samples, 0.02%)</title><rect x="84.0334%" y="309" width="0.0220%" height="15" fill="rgb(205,31,21)" fg:x="3821" fg:w="1"/><text x="84.2834%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="84.0334%" y="293" width="0.0220%" height="15" fill="rgb(253,59,4)" fg:x="3821" fg:w="1"/><text x="84.2834%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="84.2094%" y="277" width="0.0440%" height="15" fill="rgb(224,201,9)" fg:x="3829" fg:w="2"/><text x="84.4594%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="84.2314%" y="261" width="0.0220%" height="15" fill="rgb(229,206,30)" fg:x="3830" fg:w="1"/><text x="84.4814%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="84.2314%" y="245" width="0.0220%" height="15" fill="rgb(212,67,47)" fg:x="3830" fg:w="1"/><text x="84.4814%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="84.2314%" y="229" width="0.0220%" height="15" fill="rgb(211,96,50)" fg:x="3830" fg:w="1"/><text x="84.4814%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="84.2314%" y="213" width="0.0220%" height="15" fill="rgb(252,114,18)" fg:x="3830" fg:w="1"/><text x="84.4814%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="84.2314%" y="197" width="0.0220%" height="15" fill="rgb(223,58,37)" fg:x="3830" fg:w="1"/><text x="84.4814%" y="207.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="84.3633%" y="229" width="0.0220%" height="15" fill="rgb(237,70,4)" fg:x="3836" fg:w="1"/><text x="84.6133%" y="239.50"></text></g><g><title>__mmap (1 samples, 0.02%)</title><rect x="84.3633%" y="213" width="0.0220%" height="15" fill="rgb(244,85,46)" fg:x="3836" fg:w="1"/><text x="84.6133%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="84.3633%" y="197" width="0.0220%" height="15" fill="rgb(223,39,52)" fg:x="3836" fg:w="1"/><text x="84.6133%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="84.3633%" y="181" width="0.0220%" height="15" fill="rgb(218,200,14)" fg:x="3836" fg:w="1"/><text x="84.6133%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="84.3633%" y="165" width="0.0220%" height="15" fill="rgb(208,171,16)" fg:x="3836" fg:w="1"/><text x="84.6133%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="84.3633%" y="149" width="0.0220%" height="15" fill="rgb(234,200,18)" fg:x="3836" fg:w="1"/><text x="84.6133%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="84.3633%" y="133" width="0.0220%" height="15" fill="rgb(228,45,11)" fg:x="3836" fg:w="1"/><text x="84.6133%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="84.3633%" y="117" width="0.0220%" height="15" fill="rgb(237,182,11)" fg:x="3836" fg:w="1"/><text x="84.6133%" y="127.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="84.3853%" y="229" width="0.0440%" height="15" fill="rgb(241,175,49)" fg:x="3837" fg:w="2"/><text x="84.6353%" y="239.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="84.3853%" y="213" width="0.0440%" height="15" fill="rgb(247,38,35)" fg:x="3837" fg:w="2"/><text x="84.6353%" y="223.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="84.3853%" y="197" width="0.0440%" height="15" fill="rgb(228,39,49)" fg:x="3837" fg:w="2"/><text x="84.6353%" y="207.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="84.3853%" y="181" width="0.0440%" height="15" fill="rgb(226,101,26)" fg:x="3837" fg:w="2"/><text x="84.6353%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="84.4073%" y="165" width="0.0220%" height="15" fill="rgb(206,141,19)" fg:x="3838" fg:w="1"/><text x="84.6573%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="84.4073%" y="149" width="0.0220%" height="15" fill="rgb(211,200,13)" fg:x="3838" fg:w="1"/><text x="84.6573%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="84.4073%" y="133" width="0.0220%" height="15" fill="rgb(241,121,6)" fg:x="3838" fg:w="1"/><text x="84.6573%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="84.4073%" y="117" width="0.0220%" height="15" fill="rgb(234,221,29)" fg:x="3838" fg:w="1"/><text x="84.6573%" y="127.50"></text></g><g><title>[libc.so.6] (35 samples, 0.77%)</title><rect x="84.2753%" y="261" width="0.7697%" height="15" fill="rgb(229,136,5)" fg:x="3832" fg:w="35"/><text x="84.5253%" y="271.50"></text></g><g><title>[libc.so.6] (32 samples, 0.70%)</title><rect x="84.3413%" y="245" width="0.7038%" height="15" fill="rgb(238,36,11)" fg:x="3835" fg:w="32"/><text x="84.5913%" y="255.50"></text></g><g><title>__mprotect (28 samples, 0.62%)</title><rect x="84.4293%" y="229" width="0.6158%" height="15" fill="rgb(251,55,41)" fg:x="3839" fg:w="28"/><text x="84.6793%" y="239.50"></text></g><g><title>[unknown] (28 samples, 0.62%)</title><rect x="84.4293%" y="213" width="0.6158%" height="15" fill="rgb(242,34,40)" fg:x="3839" fg:w="28"/><text x="84.6793%" y="223.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="85.0011%" y="197" width="0.0440%" height="15" fill="rgb(215,42,17)" fg:x="3865" fg:w="2"/><text x="85.2511%" y="207.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="85.0011%" y="181" width="0.0440%" height="15" fill="rgb(207,44,46)" fg:x="3865" fg:w="2"/><text x="85.2511%" y="191.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="85.0011%" y="165" width="0.0440%" height="15" fill="rgb(211,206,28)" fg:x="3865" fg:w="2"/><text x="85.2511%" y="175.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="85.0011%" y="149" width="0.0440%" height="15" fill="rgb(237,167,16)" fg:x="3865" fg:w="2"/><text x="85.2511%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="85.0231%" y="133" width="0.0220%" height="15" fill="rgb(233,66,6)" fg:x="3866" fg:w="1"/><text x="85.2731%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="85.0231%" y="117" width="0.0220%" height="15" fill="rgb(246,123,29)" fg:x="3866" fg:w="1"/><text x="85.2731%" y="127.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1,012 samples, 22.26%)</title><rect x="62.8106%" y="453" width="22.2564%" height="15" fill="rgb(209,62,40)" fg:x="2856" fg:w="1012"/><text x="63.0606%" y="463.50">hashbrown::raw::RawTable&lt;T,A&gt;::rese..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,010 samples, 22.21%)</title><rect x="62.8546%" y="437" width="22.2124%" height="15" fill="rgb(218,4,25)" fg:x="2858" fg:w="1010"/><text x="63.1046%" y="447.50">hashbrown::raw::RawTable&lt;T,A&gt;::rese..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1,010 samples, 22.21%)</title><rect x="62.8546%" y="421" width="22.2124%" height="15" fill="rgb(253,91,49)" fg:x="2858" fg:w="1010"/><text x="63.1046%" y="431.50">hashbrown::raw::RawTableInner&lt;A&gt;::r..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (1,008 samples, 22.17%)</title><rect x="62.8986%" y="405" width="22.1685%" height="15" fill="rgb(228,155,29)" fg:x="2860" fg:w="1008"/><text x="63.1486%" y="415.50">hashbrown::raw::RawTableInner&lt;A&gt;::r..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (80 samples, 1.76%)</title><rect x="83.3077%" y="389" width="1.7594%" height="15" fill="rgb(243,57,37)" fg:x="3788" fg:w="80"/><text x="83.5577%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (79 samples, 1.74%)</title><rect x="83.3297%" y="373" width="1.7374%" height="15" fill="rgb(244,167,17)" fg:x="3789" fg:w="79"/><text x="83.5797%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (46 samples, 1.01%)</title><rect x="84.0554%" y="357" width="1.0117%" height="15" fill="rgb(207,181,38)" fg:x="3822" fg:w="46"/><text x="84.3054%" y="367.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (45 samples, 0.99%)</title><rect x="84.0774%" y="341" width="0.9897%" height="15" fill="rgb(211,8,23)" fg:x="3823" fg:w="45"/><text x="84.3274%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (45 samples, 0.99%)</title><rect x="84.0774%" y="325" width="0.9897%" height="15" fill="rgb(235,11,44)" fg:x="3823" fg:w="45"/><text x="84.3274%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (45 samples, 0.99%)</title><rect x="84.0774%" y="309" width="0.9897%" height="15" fill="rgb(248,18,52)" fg:x="3823" fg:w="45"/><text x="84.3274%" y="319.50"></text></g><g><title>alloc::alloc::alloc (45 samples, 0.99%)</title><rect x="84.0774%" y="293" width="0.9897%" height="15" fill="rgb(208,4,7)" fg:x="3823" fg:w="45"/><text x="84.3274%" y="303.50"></text></g><g><title>malloc (37 samples, 0.81%)</title><rect x="84.2534%" y="277" width="0.8137%" height="15" fill="rgb(240,17,39)" fg:x="3831" fg:w="37"/><text x="84.5034%" y="287.50"></text></g><g><title>__lll_lock_wake_private (1 samples, 0.02%)</title><rect x="85.0451%" y="261" width="0.0220%" height="15" fill="rgb(207,170,3)" fg:x="3867" fg:w="1"/><text x="85.2951%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="85.0451%" y="245" width="0.0220%" height="15" fill="rgb(236,100,52)" fg:x="3867" fg:w="1"/><text x="85.2951%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="85.0451%" y="229" width="0.0220%" height="15" fill="rgb(246,78,51)" fg:x="3867" fg:w="1"/><text x="85.2951%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="85.0451%" y="213" width="0.0220%" height="15" fill="rgb(211,17,15)" fg:x="3867" fg:w="1"/><text x="85.2951%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="85.0451%" y="197" width="0.0220%" height="15" fill="rgb(209,59,46)" fg:x="3867" fg:w="1"/><text x="85.2951%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="85.0451%" y="181" width="0.0220%" height="15" fill="rgb(210,92,25)" fg:x="3867" fg:w="1"/><text x="85.2951%" y="191.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.11%)</title><rect x="85.0671%" y="437" width="0.1100%" height="15" fill="rgb(238,174,52)" fg:x="3868" fg:w="5"/><text x="85.3171%" y="447.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="85.1550%" y="421" width="0.0220%" height="15" fill="rgb(230,73,7)" fg:x="3872" fg:w="1"/><text x="85.4050%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (1 samples, 0.02%)</title><rect x="85.1770%" y="437" width="0.0220%" height="15" fill="rgb(243,124,40)" fg:x="3873" fg:w="1"/><text x="85.4270%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.02%)</title><rect x="85.1770%" y="421" width="0.0220%" height="15" fill="rgb(244,170,11)" fg:x="3873" fg:w="1"/><text x="85.4270%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (3 samples, 0.07%)</title><rect x="85.1990%" y="437" width="0.0660%" height="15" fill="rgb(207,114,54)" fg:x="3874" fg:w="3"/><text x="85.4490%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (3 samples, 0.07%)</title><rect x="85.1990%" y="421" width="0.0660%" height="15" fill="rgb(205,42,20)" fg:x="3874" fg:w="3"/><text x="85.4490%" y="431.50"></text></g><g><title>hashbrown::raw::is_full (3 samples, 0.07%)</title><rect x="85.1990%" y="405" width="0.0660%" height="15" fill="rgb(230,30,28)" fg:x="3874" fg:w="3"/><text x="85.4490%" y="415.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::any_bit_set (1 samples, 0.02%)</title><rect x="85.2650%" y="437" width="0.0220%" height="15" fill="rgb(205,73,54)" fg:x="3877" fg:w="1"/><text x="85.5150%" y="447.50"></text></g><g><title>hashbrown::raw::h2 (6 samples, 0.13%)</title><rect x="85.2870%" y="437" width="0.1320%" height="15" fill="rgb(254,227,23)" fg:x="3878" fg:w="6"/><text x="85.5370%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.04%)</title><rect x="85.4190%" y="437" width="0.0440%" height="15" fill="rgb(228,202,34)" fg:x="3884" fg:w="2"/><text x="85.6690%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.04%)</title><rect x="85.4190%" y="421" width="0.0440%" height="15" fill="rgb(222,225,37)" fg:x="3884" fg:w="2"/><text x="85.6690%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="85.4190%" y="405" width="0.0440%" height="15" fill="rgb(221,14,54)" fg:x="3884" fg:w="2"/><text x="85.6690%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1,035 samples, 22.76%)</title><rect x="62.7667%" y="469" width="22.7623%" height="15" fill="rgb(254,102,2)" fg:x="2854" fg:w="1035"/><text x="63.0167%" y="479.50">hashbrown::raw::RawTable&lt;T,A&gt;::find_..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_or_find_insert_slot_inner (21 samples, 0.46%)</title><rect x="85.0671%" y="453" width="0.4618%" height="15" fill="rgb(232,104,17)" fg:x="3868" fg:w="21"/><text x="85.3171%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (3 samples, 0.07%)</title><rect x="85.4629%" y="437" width="0.0660%" height="15" fill="rgb(250,220,14)" fg:x="3886" fg:w="3"/><text x="85.7129%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.07%)</title><rect x="85.4629%" y="421" width="0.0660%" height="15" fill="rgb(241,158,9)" fg:x="3886" fg:w="3"/><text x="85.7129%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.07%)</title><rect x="85.4629%" y="405" width="0.0660%" height="15" fill="rgb(246,9,43)" fg:x="3886" fg:w="3"/><text x="85.7129%" y="415.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1,162 samples, 25.56%)</title><rect x="60.8533%" y="517" width="25.5553%" height="15" fill="rgb(206,73,33)" fg:x="2767" fg:w="1162"/><text x="61.1033%" y="527.50">std::collections::hash::set::HashSet&lt;T,S&gt;..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1,162 samples, 25.56%)</title><rect x="60.8533%" y="501" width="25.5553%" height="15" fill="rgb(222,79,8)" fg:x="2767" fg:w="1162"/><text x="61.1033%" y="511.50">hashbrown::set::HashSet&lt;T,S,A&gt;::insert</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,162 samples, 25.56%)</title><rect x="60.8533%" y="485" width="25.5553%" height="15" fill="rgb(234,8,54)" fg:x="2767" fg:w="1162"/><text x="61.1033%" y="495.50">hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (40 samples, 0.88%)</title><rect x="85.5289%" y="469" width="0.8797%" height="15" fill="rgb(209,134,38)" fg:x="3889" fg:w="40"/><text x="85.7789%" y="479.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (40 samples, 0.88%)</title><rect x="85.5289%" y="453" width="0.8797%" height="15" fill="rgb(230,127,29)" fg:x="3889" fg:w="40"/><text x="85.7789%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (40 samples, 0.88%)</title><rect x="85.5289%" y="437" width="0.8797%" height="15" fill="rgb(242,44,41)" fg:x="3889" fg:w="40"/><text x="85.7789%" y="447.50"></text></g><g><title>core::ptr::write (40 samples, 0.88%)</title><rect x="85.5289%" y="421" width="0.8797%" height="15" fill="rgb(222,56,43)" fg:x="3889" fg:w="40"/><text x="85.7789%" y="431.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::state (1 samples, 0.02%)</title><rect x="86.4086%" y="485" width="0.0220%" height="15" fill="rgb(238,39,47)" fg:x="3929" fg:w="1"/><text x="86.6586%" y="495.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::header (1 samples, 0.02%)</title><rect x="86.4086%" y="469" width="0.0220%" height="15" fill="rgb(226,79,43)" fg:x="3929" fg:w="1"/><text x="86.6586%" y="479.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="86.4086%" y="453" width="0.0220%" height="15" fill="rgb(242,105,53)" fg:x="3929" fg:w="1"/><text x="86.6586%" y="463.50"></text></g><g><title>tokio::runtime::task::join::JoinHandle&lt;T&gt;::abort (3 samples, 0.07%)</title><rect x="86.4086%" y="517" width="0.0660%" height="15" fill="rgb(251,132,46)" fg:x="3929" fg:w="3"/><text x="86.6586%" y="527.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::remote_abort (3 samples, 0.07%)</title><rect x="86.4086%" y="501" width="0.0660%" height="15" fill="rgb(231,77,14)" fg:x="3929" fg:w="3"/><text x="86.6586%" y="511.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_and_cancel (2 samples, 0.04%)</title><rect x="86.4306%" y="485" width="0.0440%" height="15" fill="rgb(240,135,9)" fg:x="3930" fg:w="2"/><text x="86.6806%" y="495.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (2 samples, 0.04%)</title><rect x="86.4306%" y="469" width="0.0440%" height="15" fill="rgb(248,109,14)" fg:x="3930" fg:w="2"/><text x="86.6806%" y="479.50"></text></g><g><title>tokio::runtime::task::state::State::load (1 samples, 0.02%)</title><rect x="86.4526%" y="453" width="0.0220%" height="15" fill="rgb(227,146,52)" fg:x="3931" fg:w="1"/><text x="86.7026%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="86.4526%" y="437" width="0.0220%" height="15" fill="rgb(232,54,3)" fg:x="3931" fg:w="1"/><text x="86.7026%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="86.4526%" y="421" width="0.0220%" height="15" fill="rgb(229,201,43)" fg:x="3931" fg:w="1"/><text x="86.7026%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.04%)</title><rect x="87.3543%" y="453" width="0.0440%" height="15" fill="rgb(252,161,33)" fg:x="3972" fg:w="2"/><text x="87.6043%" y="463.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (2 samples, 0.04%)</title><rect x="87.3543%" y="437" width="0.0440%" height="15" fill="rgb(226,146,40)" fg:x="3972" fg:w="2"/><text x="87.6043%" y="447.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.04%)</title><rect x="87.3543%" y="421" width="0.0440%" height="15" fill="rgb(219,47,25)" fg:x="3972" fg:w="2"/><text x="87.6043%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::coop::RestoreOnPending&gt; (2 samples, 0.04%)</title><rect x="87.3983%" y="453" width="0.0440%" height="15" fill="rgb(250,135,13)" fg:x="3974" fg:w="2"/><text x="87.6483%" y="463.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="87.3983%" y="437" width="0.0440%" height="15" fill="rgb(219,229,18)" fg:x="3974" fg:w="2"/><text x="87.6483%" y="447.50"></text></g><g><title>&lt;tokio::sync::mpsc::bounded::Semaphore as tokio::sync::mpsc::chan::Semaphore&gt;::add_permit (15 samples, 0.33%)</title><rect x="87.7282%" y="421" width="0.3299%" height="15" fill="rgb(217,152,27)" fg:x="3989" fg:w="15"/><text x="87.9782%" y="431.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::release (10 samples, 0.22%)</title><rect x="87.8381%" y="405" width="0.2199%" height="15" fill="rgb(225,71,47)" fg:x="3994" fg:w="10"/><text x="88.0881%" y="415.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (10 samples, 0.22%)</title><rect x="87.8381%" y="389" width="0.2199%" height="15" fill="rgb(220,139,14)" fg:x="3994" fg:w="10"/><text x="88.0881%" y="399.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (10 samples, 0.22%)</title><rect x="87.8381%" y="373" width="0.2199%" height="15" fill="rgb(247,54,32)" fg:x="3994" fg:w="10"/><text x="88.0881%" y="383.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (10 samples, 0.22%)</title><rect x="87.8381%" y="357" width="0.2199%" height="15" fill="rgb(252,131,39)" fg:x="3994" fg:w="10"/><text x="88.0881%" y="367.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (1 samples, 0.02%)</title><rect x="88.0361%" y="341" width="0.0220%" height="15" fill="rgb(210,108,39)" fg:x="4003" fg:w="1"/><text x="88.2861%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (1 samples, 0.02%)</title><rect x="88.0361%" y="325" width="0.0220%" height="15" fill="rgb(205,23,29)" fg:x="4003" fg:w="1"/><text x="88.2861%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="88.0361%" y="309" width="0.0220%" height="15" fill="rgb(246,139,46)" fg:x="4003" fg:w="1"/><text x="88.2861%" y="319.50"></text></g><g><title>tokio::runtime::coop::RestoreOnPending::made_progress (6 samples, 0.13%)</title><rect x="88.0581%" y="421" width="0.1320%" height="15" fill="rgb(250,81,26)" fg:x="4004" fg:w="6"/><text x="88.3081%" y="431.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (3 samples, 0.07%)</title><rect x="88.1240%" y="405" width="0.0660%" height="15" fill="rgb(214,104,7)" fg:x="4007" fg:w="3"/><text x="88.3740%" y="415.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (3 samples, 0.07%)</title><rect x="88.1240%" y="389" width="0.0660%" height="15" fill="rgb(233,189,8)" fg:x="4007" fg:w="3"/><text x="88.3740%" y="399.50"></text></g><g><title>core::mem::replace (3 samples, 0.07%)</title><rect x="88.1240%" y="373" width="0.0660%" height="15" fill="rgb(228,141,17)" fg:x="4007" fg:w="3"/><text x="88.3740%" y="383.50"></text></g><g><title>core::ptr::write (3 samples, 0.07%)</title><rect x="88.1240%" y="357" width="0.0660%" height="15" fill="rgb(247,157,1)" fg:x="4007" fg:w="3"/><text x="88.3740%" y="367.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (1 samples, 0.02%)</title><rect x="89.0697%" y="293" width="0.0220%" height="15" fill="rgb(249,225,5)" fg:x="4050" fg:w="1"/><text x="89.3197%" y="303.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.02%)</title><rect x="89.0697%" y="277" width="0.0220%" height="15" fill="rgb(242,55,13)" fg:x="4050" fg:w="1"/><text x="89.3197%" y="287.50"></text></g><g><title>clock_gettime (1 samples, 0.02%)</title><rect x="89.0697%" y="261" width="0.0220%" height="15" fill="rgb(230,49,50)" fg:x="4050" fg:w="1"/><text x="89.3197%" y="271.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="89.0697%" y="245" width="0.0220%" height="15" fill="rgb(241,111,38)" fg:x="4050" fg:w="1"/><text x="89.3197%" y="255.50"></text></g><g><title>core::mem::drop (12 samples, 0.26%)</title><rect x="88.8498%" y="405" width="0.2639%" height="15" fill="rgb(252,155,4)" fg:x="4040" fg:w="12"/><text x="89.0998%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::sync::batch_semaphore::Waitlist&gt;&gt; (12 samples, 0.26%)</title><rect x="88.8498%" y="389" width="0.2639%" height="15" fill="rgb(212,69,32)" fg:x="4040" fg:w="12"/><text x="89.0998%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::sync::batch_semaphore::Waitlist&gt;&gt; (12 samples, 0.26%)</title><rect x="88.8498%" y="373" width="0.2639%" height="15" fill="rgb(243,107,47)" fg:x="4040" fg:w="12"/><text x="89.0998%" y="383.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.26%)</title><rect x="88.8498%" y="357" width="0.2639%" height="15" fill="rgb(247,130,12)" fg:x="4040" fg:w="12"/><text x="89.0998%" y="367.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (12 samples, 0.26%)</title><rect x="88.8498%" y="341" width="0.2639%" height="15" fill="rgb(233,74,16)" fg:x="4040" fg:w="12"/><text x="89.0998%" y="351.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (3 samples, 0.07%)</title><rect x="89.0477%" y="325" width="0.0660%" height="15" fill="rgb(208,58,18)" fg:x="4049" fg:w="3"/><text x="89.2977%" y="335.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_one (3 samples, 0.07%)</title><rect x="89.0477%" y="309" width="0.0660%" height="15" fill="rgb(242,225,1)" fg:x="4049" fg:w="3"/><text x="89.2977%" y="319.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (1 samples, 0.02%)</title><rect x="89.0917%" y="293" width="0.0220%" height="15" fill="rgb(249,39,40)" fg:x="4051" fg:w="1"/><text x="89.3417%" y="303.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock_slow (1 samples, 0.02%)</title><rect x="89.0917%" y="277" width="0.0220%" height="15" fill="rgb(207,72,44)" fg:x="4051" fg:w="1"/><text x="89.3417%" y="287.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="89.0917%" y="261" width="0.0220%" height="15" fill="rgb(215,193,12)" fg:x="4051" fg:w="1"/><text x="89.3417%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::util::wake_list::WakeList&gt; (2 samples, 0.04%)</title><rect x="89.1137%" y="405" width="0.0440%" height="15" fill="rgb(248,41,39)" fg:x="4052" fg:w="2"/><text x="89.3637%" y="415.50"></text></g><g><title>&lt;tokio::util::wake_list::WakeList as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="89.1137%" y="389" width="0.0440%" height="15" fill="rgb(253,85,4)" fg:x="4052" fg:w="2"/><text x="89.3637%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::task::wake::Waker]&gt; (2 samples, 0.04%)</title><rect x="89.1137%" y="373" width="0.0440%" height="15" fill="rgb(243,70,31)" fg:x="4052" fg:w="2"/><text x="89.3637%" y="383.50"></text></g><g><title>core::cmp::min (1 samples, 0.02%)</title><rect x="89.2457%" y="389" width="0.0220%" height="15" fill="rgb(253,195,26)" fg:x="4058" fg:w="1"/><text x="89.4957%" y="399.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.02%)</title><rect x="89.2457%" y="373" width="0.0220%" height="15" fill="rgb(243,42,11)" fg:x="4058" fg:w="1"/><text x="89.4957%" y="383.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.02%)</title><rect x="89.2457%" y="357" width="0.0220%" height="15" fill="rgb(239,66,17)" fg:x="4058" fg:w="1"/><text x="89.4957%" y="367.50"></text></g><g><title>tokio::sync::batch_semaphore::Waiter::assign_permits (6 samples, 0.13%)</title><rect x="89.1577%" y="405" width="0.1320%" height="15" fill="rgb(217,132,21)" fg:x="4054" fg:w="6"/><text x="89.4077%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.02%)</title><rect x="89.2676%" y="389" width="0.0220%" height="15" fill="rgb(252,202,21)" fg:x="4059" fg:w="1"/><text x="89.5176%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.02%)</title><rect x="89.2676%" y="373" width="0.0220%" height="15" fill="rgb(233,98,36)" fg:x="4059" fg:w="1"/><text x="89.5176%" y="383.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::pop_back (2 samples, 0.04%)</title><rect x="89.2896%" y="405" width="0.0440%" height="15" fill="rgb(216,153,54)" fg:x="4060" fg:w="2"/><text x="89.5396%" y="415.50"></text></g><g><title>tokio::util::linked_list::Pointers&lt;T&gt;::set_next (1 samples, 0.02%)</title><rect x="89.3116%" y="389" width="0.0220%" height="15" fill="rgb(250,99,7)" fg:x="4061" fg:w="1"/><text x="89.5616%" y="399.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="89.3116%" y="373" width="0.0220%" height="15" fill="rgb(207,56,50)" fg:x="4061" fg:w="1"/><text x="89.5616%" y="383.50"></text></g><g><title>tokio::util::wake_list::WakeList::can_push (1 samples, 0.02%)</title><rect x="89.3336%" y="405" width="0.0220%" height="15" fill="rgb(244,61,34)" fg:x="4062" fg:w="1"/><text x="89.5836%" y="415.50"></text></g><g><title>tokio::util::wake_list::WakeList::new (1 samples, 0.02%)</title><rect x="89.3556%" y="405" width="0.0220%" height="15" fill="rgb(241,50,38)" fg:x="4063" fg:w="1"/><text x="89.6056%" y="415.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (1 samples, 0.02%)</title><rect x="89.4216%" y="341" width="0.0220%" height="15" fill="rgb(212,166,30)" fg:x="4066" fg:w="1"/><text x="89.6716%" y="351.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (1 samples, 0.02%)</title><rect x="89.4216%" y="325" width="0.0220%" height="15" fill="rgb(249,127,32)" fg:x="4066" fg:w="1"/><text x="89.6716%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.02%)</title><rect x="89.4876%" y="229" width="0.0220%" height="15" fill="rgb(209,103,0)" fg:x="4069" fg:w="1"/><text x="89.7376%" y="239.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="89.4876%" y="213" width="0.0220%" height="15" fill="rgb(238,209,51)" fg:x="4069" fg:w="1"/><text x="89.7376%" y="223.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="89.4876%" y="197" width="0.0220%" height="15" fill="rgb(237,56,23)" fg:x="4069" fg:w="1"/><text x="89.7376%" y="207.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (5 samples, 0.11%)</title><rect x="89.5096%" y="229" width="0.1100%" height="15" fill="rgb(215,153,46)" fg:x="4070" fg:w="5"/><text x="89.7596%" y="239.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="89.6195%" y="213" width="0.0220%" height="15" fill="rgb(224,49,31)" fg:x="4075" fg:w="1"/><text x="89.8695%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;core::option::Option&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::multi_thread::worker::Core&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="89.6635%" y="181" width="0.0220%" height="15" fill="rgb(250,18,42)" fg:x="4077" fg:w="1"/><text x="89.9135%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (1 samples, 0.02%)</title><rect x="89.6635%" y="165" width="0.0220%" height="15" fill="rgb(215,176,39)" fg:x="4077" fg:w="1"/><text x="89.9135%" y="175.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="89.6635%" y="149" width="0.0220%" height="15" fill="rgb(223,77,29)" fg:x="4077" fg:w="1"/><text x="89.9135%" y="159.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.02%)</title><rect x="89.6635%" y="133" width="0.0220%" height="15" fill="rgb(234,94,52)" fg:x="4077" fg:w="1"/><text x="89.9135%" y="143.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="89.6635%" y="117" width="0.0220%" height="15" fill="rgb(220,154,50)" fg:x="4077" fg:w="1"/><text x="89.9135%" y="127.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="89.6635%" y="101" width="0.0220%" height="15" fill="rgb(212,11,10)" fg:x="4077" fg:w="1"/><text x="89.9135%" y="111.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="89.6635%" y="85" width="0.0220%" height="15" fill="rgb(205,166,19)" fg:x="4077" fg:w="1"/><text x="89.9135%" y="95.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::task::Notified&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="89.7295%" y="165" width="0.0220%" height="15" fill="rgb(244,198,16)" fg:x="4080" fg:w="1"/><text x="89.9795%" y="175.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back_or_overflow (1 samples, 0.02%)</title><rect x="89.7515%" y="165" width="0.0220%" height="15" fill="rgb(219,69,12)" fg:x="4081" fg:w="1"/><text x="90.0015%" y="175.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_overflow (1 samples, 0.02%)</title><rect x="89.7515%" y="149" width="0.0220%" height="15" fill="rgb(245,30,7)" fg:x="4081" fg:w="1"/><text x="90.0015%" y="159.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::overflow::Overflow&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt; for tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::push_batch (1 samples, 0.02%)</title><rect x="89.7515%" y="133" width="0.0220%" height="15" fill="rgb(218,221,48)" fg:x="4081" fg:w="1"/><text x="90.0015%" y="143.50"></text></g><g><title>tokio::runtime::scheduler::inject::rt_multi_thread::&lt;impl tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;&gt;::push_batch (1 samples, 0.02%)</title><rect x="89.7515%" y="117" width="0.0220%" height="15" fill="rgb(216,66,15)" fg:x="4081" fg:w="1"/><text x="90.0015%" y="127.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.02%)</title><rect x="89.7515%" y="101" width="0.0220%" height="15" fill="rgb(226,122,50)" fg:x="4081" fg:w="1"/><text x="90.0015%" y="111.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="89.7515%" y="85" width="0.0220%" height="15" fill="rgb(239,156,16)" fg:x="4081" fg:w="1"/><text x="90.0015%" y="95.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="89.7515%" y="69" width="0.0220%" height="15" fill="rgb(224,27,38)" fg:x="4081" fg:w="1"/><text x="90.0015%" y="79.50"></text></g><g><title>&lt;tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_overflow::BatchTaskIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="89.7515%" y="53" width="0.0220%" height="15" fill="rgb(224,39,27)" fg:x="4081" fg:w="1"/><text x="90.0015%" y="63.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (26 samples, 0.57%)</title><rect x="89.4436%" y="325" width="0.5718%" height="15" fill="rgb(215,92,29)" fg:x="4067" fg:w="26"/><text x="89.6936%" y="335.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (25 samples, 0.55%)</title><rect x="89.4656%" y="309" width="0.5498%" height="15" fill="rgb(207,159,16)" fg:x="4068" fg:w="25"/><text x="89.7156%" y="319.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (25 samples, 0.55%)</title><rect x="89.4656%" y="293" width="0.5498%" height="15" fill="rgb(238,163,47)" fg:x="4068" fg:w="25"/><text x="89.7156%" y="303.50"></text></g><g><title>tokio::runtime::context::with_scheduler (25 samples, 0.55%)</title><rect x="89.4656%" y="277" width="0.5498%" height="15" fill="rgb(219,91,49)" fg:x="4068" fg:w="25"/><text x="89.7156%" y="287.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (25 samples, 0.55%)</title><rect x="89.4656%" y="261" width="0.5498%" height="15" fill="rgb(227,167,31)" fg:x="4068" fg:w="25"/><text x="89.7156%" y="271.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (25 samples, 0.55%)</title><rect x="89.4656%" y="245" width="0.5498%" height="15" fill="rgb(234,80,54)" fg:x="4068" fg:w="25"/><text x="89.7156%" y="255.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (18 samples, 0.40%)</title><rect x="89.6195%" y="229" width="0.3959%" height="15" fill="rgb(212,114,2)" fg:x="4075" fg:w="18"/><text x="89.8695%" y="239.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::_{{closure}} (17 samples, 0.37%)</title><rect x="89.6415%" y="213" width="0.3739%" height="15" fill="rgb(234,50,24)" fg:x="4076" fg:w="17"/><text x="89.8915%" y="223.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (17 samples, 0.37%)</title><rect x="89.6415%" y="197" width="0.3739%" height="15" fill="rgb(221,68,8)" fg:x="4076" fg:w="17"/><text x="89.8915%" y="207.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (15 samples, 0.33%)</title><rect x="89.6855%" y="181" width="0.3299%" height="15" fill="rgb(254,180,31)" fg:x="4078" fg:w="15"/><text x="89.9355%" y="191.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (11 samples, 0.24%)</title><rect x="89.7735%" y="165" width="0.2419%" height="15" fill="rgb(247,130,50)" fg:x="4082" fg:w="11"/><text x="90.0235%" y="175.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (11 samples, 0.24%)</title><rect x="89.7735%" y="149" width="0.2419%" height="15" fill="rgb(211,109,4)" fg:x="4082" fg:w="11"/><text x="90.0235%" y="159.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (11 samples, 0.24%)</title><rect x="89.7735%" y="133" width="0.2419%" height="15" fill="rgb(238,50,21)" fg:x="4082" fg:w="11"/><text x="90.0235%" y="143.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (7 samples, 0.15%)</title><rect x="89.8614%" y="117" width="0.1539%" height="15" fill="rgb(225,57,45)" fg:x="4086" fg:w="7"/><text x="90.1114%" y="127.50"></text></g><g><title>core::sync::atomic::atomic_add (7 samples, 0.15%)</title><rect x="89.8614%" y="101" width="0.1539%" height="15" fill="rgb(209,196,50)" fg:x="4086" fg:w="7"/><text x="90.1114%" y="111.50"></text></g><g><title>tokio::runtime::task::Task&lt;S&gt;::from_raw (1 samples, 0.02%)</title><rect x="90.0154%" y="309" width="0.0220%" height="15" fill="rgb(242,140,13)" fg:x="4093" fg:w="1"/><text x="90.2654%" y="319.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::from_raw (1 samples, 0.02%)</title><rect x="90.0154%" y="293" width="0.0220%" height="15" fill="rgb(217,111,7)" fg:x="4093" fg:w="1"/><text x="90.2654%" y="303.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (28 samples, 0.62%)</title><rect x="89.4436%" y="341" width="0.6158%" height="15" fill="rgb(253,193,51)" fg:x="4067" fg:w="28"/><text x="89.6936%" y="351.50"></text></g><g><title>tokio::runtime::task::raw::schedule (2 samples, 0.04%)</title><rect x="90.0154%" y="325" width="0.0440%" height="15" fill="rgb(252,70,29)" fg:x="4093" fg:w="2"/><text x="90.2654%" y="335.50"></text></g><g><title>tokio::runtime::task::core::Header::get_scheduler (1 samples, 0.02%)</title><rect x="90.0374%" y="309" width="0.0220%" height="15" fill="rgb(232,127,12)" fg:x="4094" fg:w="1"/><text x="90.2874%" y="319.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (89 samples, 1.96%)</title><rect x="88.1900%" y="421" width="1.9573%" height="15" fill="rgb(211,180,21)" fg:x="4010" fg:w="89"/><text x="88.4400%" y="431.50">t..</text></g><g><title>tokio::util::wake_list::WakeList::wake_all (35 samples, 0.77%)</title><rect x="89.3776%" y="405" width="0.7697%" height="15" fill="rgb(229,72,13)" fg:x="4064" fg:w="35"/><text x="89.6276%" y="415.50"></text></g><g><title>core::task::wake::Waker::wake (34 samples, 0.75%)</title><rect x="89.3996%" y="389" width="0.7477%" height="15" fill="rgb(240,211,49)" fg:x="4065" fg:w="34"/><text x="89.6496%" y="399.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (34 samples, 0.75%)</title><rect x="89.3996%" y="373" width="0.7477%" height="15" fill="rgb(219,149,40)" fg:x="4065" fg:w="34"/><text x="89.6496%" y="383.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (33 samples, 0.73%)</title><rect x="89.4216%" y="357" width="0.7258%" height="15" fill="rgb(210,127,46)" fg:x="4066" fg:w="33"/><text x="89.6716%" y="367.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (4 samples, 0.09%)</title><rect x="90.0594%" y="341" width="0.0880%" height="15" fill="rgb(220,106,7)" fg:x="4095" fg:w="4"/><text x="90.3094%" y="351.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (4 samples, 0.09%)</title><rect x="90.0594%" y="325" width="0.0880%" height="15" fill="rgb(249,31,22)" fg:x="4095" fg:w="4"/><text x="90.3094%" y="335.50"></text></g><g><title>tokio::runtime::task::state::State::load (2 samples, 0.04%)</title><rect x="90.1034%" y="309" width="0.0440%" height="15" fill="rgb(253,1,49)" fg:x="4097" fg:w="2"/><text x="90.3534%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.04%)</title><rect x="90.1034%" y="293" width="0.0440%" height="15" fill="rgb(227,144,33)" fg:x="4097" fg:w="2"/><text x="90.3534%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.04%)</title><rect x="90.1034%" y="277" width="0.0440%" height="15" fill="rgb(249,163,44)" fg:x="4097" fg:w="2"/><text x="90.3534%" y="287.50"></text></g><g><title>&lt;tokio::loom::std::atomic_usize::AtomicUsize as core::ops::deref::Deref&gt;::deref (4 samples, 0.09%)</title><rect x="90.4113%" y="389" width="0.0880%" height="15" fill="rgb(234,15,39)" fg:x="4111" fg:w="4"/><text x="90.6613%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (5 samples, 0.11%)</title><rect x="90.4992%" y="389" width="0.1100%" height="15" fill="rgb(207,66,16)" fg:x="4115" fg:w="5"/><text x="90.7492%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.11%)</title><rect x="90.4992%" y="373" width="0.1100%" height="15" fill="rgb(233,112,24)" fg:x="4115" fg:w="5"/><text x="90.7492%" y="383.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (8 samples, 0.18%)</title><rect x="90.6092%" y="389" width="0.1759%" height="15" fill="rgb(230,90,22)" fg:x="4120" fg:w="8"/><text x="90.8592%" y="399.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::read::_{{closure}} (8 samples, 0.18%)</title><rect x="90.6092%" y="373" width="0.1759%" height="15" fill="rgb(229,61,13)" fg:x="4120" fg:w="8"/><text x="90.8592%" y="383.50"></text></g><g><title>core::ptr::read (8 samples, 0.18%)</title><rect x="90.6092%" y="357" width="0.1759%" height="15" fill="rgb(225,57,24)" fg:x="4120" fg:w="8"/><text x="90.8592%" y="367.50"></text></g><g><title>tokio::sync::mpsc::block::is_ready (4 samples, 0.09%)</title><rect x="90.7851%" y="389" width="0.0880%" height="15" fill="rgb(208,169,48)" fg:x="4128" fg:w="4"/><text x="91.0351%" y="399.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::read (26 samples, 0.57%)</title><rect x="90.3233%" y="405" width="0.5718%" height="15" fill="rgb(244,218,51)" fg:x="4107" fg:w="26"/><text x="90.5733%" y="415.50"></text></g><g><title>tokio::sync::mpsc::block::is_tx_closed (1 samples, 0.02%)</title><rect x="90.8731%" y="389" width="0.0220%" height="15" fill="rgb(214,148,10)" fg:x="4132" fg:w="1"/><text x="91.1231%" y="399.50"></text></g><g><title>core::cmp::PartialEq::ne (5 samples, 0.11%)</title><rect x="90.8951%" y="389" width="0.1100%" height="15" fill="rgb(225,174,27)" fg:x="4133" fg:w="5"/><text x="91.1451%" y="399.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.11%)</title><rect x="90.8951%" y="373" width="0.1100%" height="15" fill="rgb(230,96,26)" fg:x="4133" fg:w="5"/><text x="91.1451%" y="383.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::observed_tail_position (1 samples, 0.02%)</title><rect x="91.0051%" y="389" width="0.0220%" height="15" fill="rgb(232,10,30)" fg:x="4138" fg:w="1"/><text x="91.2551%" y="399.50"></text></g><g><title>[libc.so.6] (4 samples, 0.09%)</title><rect x="91.0271%" y="293" width="0.0880%" height="15" fill="rgb(222,8,50)" fg:x="4139" fg:w="4"/><text x="91.2771%" y="303.50"></text></g><g><title>[libc.so.6] (3 samples, 0.07%)</title><rect x="91.0490%" y="277" width="0.0660%" height="15" fill="rgb(213,81,27)" fg:x="4140" fg:w="3"/><text x="91.2990%" y="287.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="91.0710%" y="261" width="0.0440%" height="15" fill="rgb(245,50,10)" fg:x="4141" fg:w="2"/><text x="91.3210%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="91.0930%" y="245" width="0.0220%" height="15" fill="rgb(216,100,18)" fg:x="4142" fg:w="1"/><text x="91.3430%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::sync::mpsc::block::Block&lt;day16::maze_walker::BeamUpdate&gt;&gt;&gt; (6 samples, 0.13%)</title><rect x="91.0271%" y="373" width="0.1320%" height="15" fill="rgb(236,147,54)" fg:x="4139" fg:w="6"/><text x="91.2771%" y="383.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.13%)</title><rect x="91.0271%" y="357" width="0.1320%" height="15" fill="rgb(205,143,26)" fg:x="4139" fg:w="6"/><text x="91.2771%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.13%)</title><rect x="91.0271%" y="341" width="0.1320%" height="15" fill="rgb(236,26,9)" fg:x="4139" fg:w="6"/><text x="91.2771%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.13%)</title><rect x="91.0271%" y="325" width="0.1320%" height="15" fill="rgb(221,165,53)" fg:x="4139" fg:w="6"/><text x="91.2771%" y="335.50"></text></g><g><title>cfree (6 samples, 0.13%)</title><rect x="91.0271%" y="309" width="0.1320%" height="15" fill="rgb(214,110,17)" fg:x="4139" fg:w="6"/><text x="91.2771%" y="319.50"></text></g><g><title>__lll_lock_wake_private (2 samples, 0.04%)</title><rect x="91.1150%" y="293" width="0.0440%" height="15" fill="rgb(237,197,12)" fg:x="4143" fg:w="2"/><text x="91.3650%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="91.1150%" y="277" width="0.0440%" height="15" fill="rgb(205,84,17)" fg:x="4143" fg:w="2"/><text x="91.3650%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="91.1150%" y="261" width="0.0440%" height="15" fill="rgb(237,18,45)" fg:x="4143" fg:w="2"/><text x="91.3650%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="91.1150%" y="245" width="0.0440%" height="15" fill="rgb(221,87,14)" fg:x="4143" fg:w="2"/><text x="91.3650%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="91.1370%" y="229" width="0.0220%" height="15" fill="rgb(238,186,15)" fg:x="4144" fg:w="1"/><text x="91.3870%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="91.1370%" y="213" width="0.0220%" height="15" fill="rgb(208,115,11)" fg:x="4144" fg:w="1"/><text x="91.3870%" y="223.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::reclaim (3 samples, 0.07%)</title><rect x="91.1590%" y="373" width="0.0660%" height="15" fill="rgb(254,175,0)" fg:x="4145" fg:w="3"/><text x="91.4090%" y="383.50"></text></g><g><title>tokio::loom::std::atomic_usize::AtomicUsize::new (1 samples, 0.02%)</title><rect x="91.2030%" y="357" width="0.0220%" height="15" fill="rgb(227,24,42)" fg:x="4147" fg:w="1"/><text x="91.4530%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="91.2250%" y="357" width="0.0220%" height="15" fill="rgb(223,211,37)" fg:x="4148" fg:w="1"/><text x="91.4750%" y="367.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::reclaim_blocks (17 samples, 0.37%)</title><rect x="90.8951%" y="405" width="0.3739%" height="15" fill="rgb(235,49,27)" fg:x="4133" fg:w="17"/><text x="91.1451%" y="415.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::reclaim_block (11 samples, 0.24%)</title><rect x="91.0271%" y="389" width="0.2419%" height="15" fill="rgb(254,97,51)" fg:x="4139" fg:w="11"/><text x="91.2771%" y="399.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::try_push (2 samples, 0.04%)</title><rect x="91.2250%" y="373" width="0.0440%" height="15" fill="rgb(249,51,40)" fg:x="4148" fg:w="2"/><text x="91.4750%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::compare_exchange (1 samples, 0.02%)</title><rect x="91.2470%" y="357" width="0.0220%" height="15" fill="rgb(210,128,45)" fg:x="4149" fg:w="1"/><text x="91.4970%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.02%)</title><rect x="91.2470%" y="341" width="0.0220%" height="15" fill="rgb(224,137,50)" fg:x="4149" fg:w="1"/><text x="91.4970%" y="351.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::is_at_index (1 samples, 0.02%)</title><rect x="91.6428%" y="389" width="0.0220%" height="15" fill="rgb(242,15,9)" fg:x="4167" fg:w="1"/><text x="91.8928%" y="399.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (193 samples, 4.24%)</title><rect x="87.4423%" y="453" width="4.2446%" height="15" fill="rgb(233,187,41)" fg:x="3976" fg:w="193"/><text x="87.6923%" y="463.50">tokio..</text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv::_{{closure}} (193 samples, 4.24%)</title><rect x="87.4423%" y="437" width="4.2446%" height="15" fill="rgb(227,2,29)" fg:x="3976" fg:w="193"/><text x="87.6923%" y="447.50">tokio..</text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (70 samples, 1.54%)</title><rect x="90.1473%" y="421" width="1.5395%" height="15" fill="rgb(222,70,3)" fg:x="4099" fg:w="70"/><text x="90.3973%" y="431.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::try_advancing_head (19 samples, 0.42%)</title><rect x="91.2690%" y="405" width="0.4179%" height="15" fill="rgb(213,11,42)" fg:x="4150" fg:w="19"/><text x="91.5190%" y="415.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::load_next (1 samples, 0.02%)</title><rect x="91.6648%" y="389" width="0.0220%" height="15" fill="rgb(225,150,9)" fg:x="4168" fg:w="1"/><text x="91.9148%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.02%)</title><rect x="91.6648%" y="373" width="0.0220%" height="15" fill="rgb(230,162,45)" fg:x="4168" fg:w="1"/><text x="91.9148%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="91.6648%" y="357" width="0.0220%" height="15" fill="rgb(222,14,52)" fg:x="4168" fg:w="1"/><text x="91.9148%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or (5 samples, 0.11%)</title><rect x="91.9287%" y="437" width="0.1100%" height="15" fill="rgb(254,198,14)" fg:x="4180" fg:w="5"/><text x="92.1787%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::poll::Poll&lt;tokio::runtime::coop::RestoreOnPending&gt;&gt; (4 samples, 0.09%)</title><rect x="91.9507%" y="421" width="0.0880%" height="15" fill="rgb(220,217,30)" fg:x="4181" fg:w="4"/><text x="92.2007%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::coop::RestoreOnPending&gt; (4 samples, 0.09%)</title><rect x="91.9507%" y="405" width="0.0880%" height="15" fill="rgb(215,146,41)" fg:x="4181" fg:w="4"/><text x="92.2007%" y="415.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (4 samples, 0.09%)</title><rect x="91.9507%" y="389" width="0.0880%" height="15" fill="rgb(217,27,36)" fg:x="4181" fg:w="4"/><text x="92.2007%" y="399.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (2 samples, 0.04%)</title><rect x="92.0387%" y="405" width="0.0440%" height="15" fill="rgb(219,218,39)" fg:x="4185" fg:w="2"/><text x="92.2887%" y="415.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (2 samples, 0.04%)</title><rect x="92.0387%" y="389" width="0.0440%" height="15" fill="rgb(219,4,42)" fg:x="4185" fg:w="2"/><text x="92.2887%" y="399.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (4 samples, 0.09%)</title><rect x="92.1487%" y="373" width="0.0880%" height="15" fill="rgb(249,119,36)" fg:x="4190" fg:w="4"/><text x="92.3987%" y="383.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (193 samples, 4.24%)</title><rect x="92.2366%" y="373" width="4.2446%" height="15" fill="rgb(209,23,33)" fg:x="4194" fg:w="193"/><text x="92.4866%" y="383.50">core:..</text></g><g><title>core::cell::Cell&lt;T&gt;::replace (193 samples, 4.24%)</title><rect x="92.2366%" y="357" width="4.2446%" height="15" fill="rgb(211,10,0)" fg:x="4194" fg:w="193"/><text x="92.4866%" y="367.50">core:..</text></g><g><title>core::mem::replace (193 samples, 4.24%)</title><rect x="92.2366%" y="341" width="4.2446%" height="15" fill="rgb(208,99,37)" fg:x="4194" fg:w="193"/><text x="92.4866%" y="351.50">core:..</text></g><g><title>core::ptr::write (193 samples, 4.24%)</title><rect x="92.2366%" y="325" width="4.2446%" height="15" fill="rgb(213,132,31)" fg:x="4194" fg:w="193"/><text x="92.4866%" y="335.50">core:..</text></g><g><title>core::task::wake::Waker::wake_by_ref (1 samples, 0.02%)</title><rect x="96.4812%" y="373" width="0.0220%" height="15" fill="rgb(243,129,40)" fg:x="4387" fg:w="1"/><text x="96.7312%" y="383.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (1 samples, 0.02%)</title><rect x="96.4812%" y="357" width="0.0220%" height="15" fill="rgb(210,66,33)" fg:x="4387" fg:w="1"/><text x="96.7312%" y="367.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_ref (1 samples, 0.02%)</title><rect x="96.4812%" y="341" width="0.0220%" height="15" fill="rgb(209,189,4)" fg:x="4387" fg:w="1"/><text x="96.7312%" y="351.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_ref (1 samples, 0.02%)</title><rect x="96.4812%" y="325" width="0.0220%" height="15" fill="rgb(214,107,37)" fg:x="4387" fg:w="1"/><text x="96.7312%" y="335.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (1 samples, 0.02%)</title><rect x="96.4812%" y="309" width="0.0220%" height="15" fill="rgb(245,88,54)" fg:x="4387" fg:w="1"/><text x="96.7312%" y="319.50"></text></g><g><title>tokio::runtime::context::budget (222 samples, 4.88%)</title><rect x="92.0387%" y="437" width="4.8823%" height="15" fill="rgb(205,146,20)" fg:x="4185" fg:w="222"/><text x="92.2887%" y="447.50">tokio:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (222 samples, 4.88%)</title><rect x="92.0387%" y="421" width="4.8823%" height="15" fill="rgb(220,161,25)" fg:x="4185" fg:w="222"/><text x="92.2887%" y="431.50">std::t..</text></g><g><title>tokio::runtime::context::budget::_{{closure}} (220 samples, 4.84%)</title><rect x="92.0827%" y="405" width="4.8384%" height="15" fill="rgb(215,152,15)" fg:x="4187" fg:w="220"/><text x="92.3327%" y="415.50">tokio:..</text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (220 samples, 4.84%)</title><rect x="92.0827%" y="389" width="4.8384%" height="15" fill="rgb(233,192,44)" fg:x="4187" fg:w="220"/><text x="92.3327%" y="399.50">tokio:..</text></g><g><title>tokio::runtime::coop::Budget::decrement (19 samples, 0.42%)</title><rect x="96.5032%" y="373" width="0.4179%" height="15" fill="rgb(240,170,46)" fg:x="4388" fg:w="19"/><text x="96.7532%" y="383.50"></text></g><g><title>tokio::sync::mpsc::bounded::Receiver&lt;T&gt;::recv::_{{closure}} (480 samples, 10.56%)</title><rect x="86.4746%" y="517" width="10.5564%" height="15" fill="rgb(207,104,33)" fg:x="3932" fg:w="480"/><text x="86.7246%" y="527.50">tokio::sync::mp..</text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (460 samples, 10.12%)</title><rect x="86.9144%" y="501" width="10.1166%" height="15" fill="rgb(219,21,39)" fg:x="3952" fg:w="460"/><text x="87.1644%" y="511.50">&lt;tokio::future:..</text></g><g><title>tokio::sync::mpsc::bounded::Receiver&lt;T&gt;::recv::_{{closure}}::_{{closure}} (460 samples, 10.12%)</title><rect x="86.9144%" y="485" width="10.1166%" height="15" fill="rgb(214,133,29)" fg:x="3952" fg:w="460"/><text x="87.1644%" y="495.50">tokio::sync::mp..</text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (459 samples, 10.09%)</title><rect x="86.9364%" y="469" width="10.0946%" height="15" fill="rgb(226,93,6)" fg:x="3953" fg:w="459"/><text x="87.1864%" y="479.50">tokio::sync::mp..</text></g><g><title>tokio::runtime::coop::poll_proceed (243 samples, 5.34%)</title><rect x="91.6868%" y="453" width="5.3442%" height="15" fill="rgb(252,222,34)" fg:x="4169" fg:w="243"/><text x="91.9368%" y="463.50">tokio::..</text></g><g><title>tokio::runtime::coop::Budget::unconstrained (5 samples, 0.11%)</title><rect x="96.9210%" y="437" width="0.1100%" height="15" fill="rgb(252,92,48)" fg:x="4407" fg:w="5"/><text x="97.1710%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="97.0310%" y="501" width="0.0220%" height="15" fill="rgb(245,223,24)" fg:x="4412" fg:w="1"/><text x="97.2810%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="97.0310%" y="485" width="0.0220%" height="15" fill="rgb(205,176,3)" fg:x="4412" fg:w="1"/><text x="97.2810%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="97.0310%" y="469" width="0.0220%" height="15" fill="rgb(235,151,15)" fg:x="4412" fg:w="1"/><text x="97.2810%" y="479.50"></text></g><g><title>[libc.so.6] (4 samples, 0.09%)</title><rect x="97.0530%" y="453" width="0.0880%" height="15" fill="rgb(237,209,11)" fg:x="4413" fg:w="4"/><text x="97.3030%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="97.1190%" y="437" width="0.0220%" height="15" fill="rgb(243,227,24)" fg:x="4416" fg:w="1"/><text x="97.3690%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="97.1190%" y="421" width="0.0220%" height="15" fill="rgb(239,193,16)" fg:x="4416" fg:w="1"/><text x="97.3690%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="97.1190%" y="405" width="0.0220%" height="15" fill="rgb(231,27,9)" fg:x="4416" fg:w="1"/><text x="97.3690%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="97.1190%" y="389" width="0.0220%" height="15" fill="rgb(219,169,10)" fg:x="4416" fg:w="1"/><text x="97.3690%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="97.1190%" y="373" width="0.0220%" height="15" fill="rgb(244,229,43)" fg:x="4416" fg:w="1"/><text x="97.3690%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="97.1190%" y="357" width="0.0220%" height="15" fill="rgb(254,38,20)" fg:x="4416" fg:w="1"/><text x="97.3690%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="97.1190%" y="341" width="0.0220%" height="15" fill="rgb(250,47,30)" fg:x="4416" fg:w="1"/><text x="97.3690%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="97.1190%" y="325" width="0.0220%" height="15" fill="rgb(224,124,36)" fg:x="4416" fg:w="1"/><text x="97.3690%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.15%)</title><rect x="97.1630%" y="437" width="0.1539%" height="15" fill="rgb(246,68,51)" fg:x="4418" fg:w="7"/><text x="97.4130%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.15%)</title><rect x="97.1630%" y="421" width="0.1539%" height="15" fill="rgb(253,43,49)" fg:x="4418" fg:w="7"/><text x="97.4130%" y="431.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.15%)</title><rect x="97.1630%" y="405" width="0.1539%" height="15" fill="rgb(219,54,36)" fg:x="4418" fg:w="7"/><text x="97.4130%" y="415.50"></text></g><g><title>__rdl_alloc (7 samples, 0.15%)</title><rect x="97.1630%" y="389" width="0.1539%" height="15" fill="rgb(227,133,34)" fg:x="4418" fg:w="7"/><text x="97.4130%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (6 samples, 0.13%)</title><rect x="97.1850%" y="373" width="0.1320%" height="15" fill="rgb(247,227,15)" fg:x="4419" fg:w="6"/><text x="97.4350%" y="383.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (6 samples, 0.13%)</title><rect x="97.1850%" y="357" width="0.1320%" height="15" fill="rgb(229,96,14)" fg:x="4419" fg:w="6"/><text x="97.4350%" y="367.50"></text></g><g><title>posix_memalign (6 samples, 0.13%)</title><rect x="97.1850%" y="341" width="0.1320%" height="15" fill="rgb(220,79,17)" fg:x="4419" fg:w="6"/><text x="97.4350%" y="351.50"></text></g><g><title>[libc.so.6] (6 samples, 0.13%)</title><rect x="97.1850%" y="325" width="0.1320%" height="15" fill="rgb(205,131,53)" fg:x="4419" fg:w="6"/><text x="97.4350%" y="335.50"></text></g><g><title>[libc.so.6] (4 samples, 0.09%)</title><rect x="97.2289%" y="309" width="0.0880%" height="15" fill="rgb(209,50,29)" fg:x="4421" fg:w="4"/><text x="97.4789%" y="319.50"></text></g><g><title>[libc.so.6] (3 samples, 0.07%)</title><rect x="97.2509%" y="293" width="0.0660%" height="15" fill="rgb(245,86,46)" fg:x="4422" fg:w="3"/><text x="97.5009%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="97.2949%" y="277" width="0.0220%" height="15" fill="rgb(235,66,46)" fg:x="4424" fg:w="1"/><text x="97.5449%" y="287.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (13 samples, 0.29%)</title><rect x="97.0530%" y="485" width="0.2859%" height="15" fill="rgb(232,148,31)" fg:x="4413" fg:w="13"/><text x="97.3030%" y="495.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (13 samples, 0.29%)</title><rect x="97.0530%" y="469" width="0.2859%" height="15" fill="rgb(217,149,8)" fg:x="4413" fg:w="13"/><text x="97.3030%" y="479.50"></text></g><g><title>alloc::alloc::exchange_malloc (9 samples, 0.20%)</title><rect x="97.1410%" y="453" width="0.1979%" height="15" fill="rgb(209,183,11)" fg:x="4417" fg:w="9"/><text x="97.3910%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="97.3169%" y="437" width="0.0220%" height="15" fill="rgb(208,55,20)" fg:x="4425" fg:w="1"/><text x="97.5669%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="97.3169%" y="421" width="0.0220%" height="15" fill="rgb(218,39,14)" fg:x="4425" fg:w="1"/><text x="97.5669%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="97.3169%" y="405" width="0.0220%" height="15" fill="rgb(216,169,33)" fg:x="4425" fg:w="1"/><text x="97.5669%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="97.3169%" y="389" width="0.0220%" height="15" fill="rgb(233,80,24)" fg:x="4425" fg:w="1"/><text x="97.5669%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="97.3169%" y="373" width="0.0220%" height="15" fill="rgb(213,179,31)" fg:x="4425" fg:w="1"/><text x="97.5669%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="97.3169%" y="357" width="0.0220%" height="15" fill="rgb(209,19,5)" fg:x="4425" fg:w="1"/><text x="97.5669%" y="367.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="97.3609%" y="437" width="0.0220%" height="15" fill="rgb(219,18,35)" fg:x="4427" fg:w="1"/><text x="97.6109%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="97.3609%" y="421" width="0.0220%" height="15" fill="rgb(209,169,16)" fg:x="4427" fg:w="1"/><text x="97.6109%" y="431.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="97.4049%" y="405" width="0.0220%" height="15" fill="rgb(245,90,51)" fg:x="4429" fg:w="1"/><text x="97.6549%" y="415.50"></text></g><g><title>__mprotect (1 samples, 0.02%)</title><rect x="97.4049%" y="389" width="0.0220%" height="15" fill="rgb(220,99,45)" fg:x="4429" fg:w="1"/><text x="97.6549%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="97.4049%" y="373" width="0.0220%" height="15" fill="rgb(249,89,25)" fg:x="4429" fg:w="1"/><text x="97.6549%" y="383.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.11%)</title><rect x="97.3609%" y="453" width="0.1100%" height="15" fill="rgb(239,193,0)" fg:x="4427" fg:w="5"/><text x="97.6109%" y="463.50"></text></g><g><title>malloc (4 samples, 0.09%)</title><rect x="97.3829%" y="437" width="0.0880%" height="15" fill="rgb(231,126,1)" fg:x="4428" fg:w="4"/><text x="97.6329%" y="447.50"></text></g><g><title>[libc.so.6] (3 samples, 0.07%)</title><rect x="97.4049%" y="421" width="0.0660%" height="15" fill="rgb(243,166,3)" fg:x="4429" fg:w="3"/><text x="97.6549%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="97.4269%" y="405" width="0.0440%" height="15" fill="rgb(223,22,34)" fg:x="4430" fg:w="2"/><text x="97.6769%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="97.4269%" y="389" width="0.0440%" height="15" fill="rgb(251,52,51)" fg:x="4430" fg:w="2"/><text x="97.6769%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="97.4269%" y="373" width="0.0440%" height="15" fill="rgb(221,165,28)" fg:x="4430" fg:w="2"/><text x="97.6769%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="97.4489%" y="357" width="0.0220%" height="15" fill="rgb(218,121,47)" fg:x="4431" fg:w="1"/><text x="97.6989%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="97.4489%" y="341" width="0.0220%" height="15" fill="rgb(209,120,9)" fg:x="4431" fg:w="1"/><text x="97.6989%" y="351.50"></text></g><g><title>tokio::sync::mpsc::list::channel (7 samples, 0.15%)</title><rect x="97.3389%" y="485" width="0.1539%" height="15" fill="rgb(236,68,12)" fg:x="4426" fg:w="7"/><text x="97.5889%" y="495.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::new (7 samples, 0.15%)</title><rect x="97.3389%" y="469" width="0.1539%" height="15" fill="rgb(225,194,26)" fg:x="4426" fg:w="7"/><text x="97.5889%" y="479.50"></text></g><g><title>tokio::loom::std::atomic_usize::AtomicUsize::new (1 samples, 0.02%)</title><rect x="97.4709%" y="453" width="0.0220%" height="15" fill="rgb(231,84,39)" fg:x="4432" fg:w="1"/><text x="97.7209%" y="463.50"></text></g><g><title>tokio::sync::notify::Notify::new (1 samples, 0.02%)</title><rect x="97.4929%" y="485" width="0.0220%" height="15" fill="rgb(210,11,45)" fg:x="4433" fg:w="1"/><text x="97.7429%" y="495.50"></text></g><g><title>tokio::sync::mpsc::bounded::channel (23 samples, 0.51%)</title><rect x="97.0310%" y="517" width="0.5058%" height="15" fill="rgb(224,54,52)" fg:x="4412" fg:w="23"/><text x="97.2810%" y="527.50"></text></g><g><title>tokio::sync::mpsc::chan::channel (22 samples, 0.48%)</title><rect x="97.0530%" y="501" width="0.4838%" height="15" fill="rgb(238,102,14)" fg:x="4413" fg:w="22"/><text x="97.3030%" y="511.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::new (1 samples, 0.02%)</title><rect x="97.5148%" y="485" width="0.0220%" height="15" fill="rgb(243,160,52)" fg:x="4434" fg:w="1"/><text x="97.7648%" y="495.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="97.5368%" y="501" width="0.0440%" height="15" fill="rgb(216,114,19)" fg:x="4435" fg:w="2"/><text x="97.7868%" y="511.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="97.5808%" y="453" width="0.0220%" height="15" fill="rgb(244,166,37)" fg:x="4437" fg:w="1"/><text x="97.8308%" y="463.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.07%)</title><rect x="97.6028%" y="357" width="0.0660%" height="15" fill="rgb(246,29,44)" fg:x="4438" fg:w="3"/><text x="97.8528%" y="367.50"></text></g><g><title>[libc.so.6] (3 samples, 0.07%)</title><rect x="97.6688%" y="357" width="0.0660%" height="15" fill="rgb(215,56,53)" fg:x="4441" fg:w="3"/><text x="97.9188%" y="367.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_option_task_without_yield (6 samples, 0.13%)</title><rect x="97.7348%" y="357" width="0.1320%" height="15" fill="rgb(217,60,2)" fg:x="4444" fg:w="6"/><text x="97.9848%" y="367.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (4 samples, 0.09%)</title><rect x="97.7788%" y="341" width="0.0880%" height="15" fill="rgb(207,26,24)" fg:x="4446" fg:w="4"/><text x="98.0288%" y="351.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (4 samples, 0.09%)</title><rect x="97.7788%" y="325" width="0.0880%" height="15" fill="rgb(252,210,15)" fg:x="4446" fg:w="4"/><text x="98.0288%" y="335.50"></text></g><g><title>tokio::runtime::context::with_scheduler (4 samples, 0.09%)</title><rect x="97.7788%" y="309" width="0.0880%" height="15" fill="rgb(253,209,26)" fg:x="4446" fg:w="4"/><text x="98.0288%" y="319.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.04%)</title><rect x="97.8227%" y="293" width="0.0440%" height="15" fill="rgb(238,170,14)" fg:x="4448" fg:w="2"/><text x="98.0727%" y="303.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (2 samples, 0.04%)</title><rect x="97.8227%" y="277" width="0.0440%" height="15" fill="rgb(216,178,15)" fg:x="4448" fg:w="2"/><text x="98.0727%" y="287.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (2 samples, 0.04%)</title><rect x="97.8227%" y="261" width="0.0440%" height="15" fill="rgb(250,197,2)" fg:x="4448" fg:w="2"/><text x="98.0727%" y="271.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::_{{closure}} (2 samples, 0.04%)</title><rect x="97.8227%" y="245" width="0.0440%" height="15" fill="rgb(212,70,42)" fg:x="4448" fg:w="2"/><text x="98.0727%" y="255.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (2 samples, 0.04%)</title><rect x="97.8227%" y="229" width="0.0440%" height="15" fill="rgb(227,213,9)" fg:x="4448" fg:w="2"/><text x="98.0727%" y="239.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (2 samples, 0.04%)</title><rect x="97.8227%" y="213" width="0.0440%" height="15" fill="rgb(245,99,25)" fg:x="4448" fg:w="2"/><text x="98.0727%" y="223.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (2 samples, 0.04%)</title><rect x="97.8227%" y="197" width="0.0440%" height="15" fill="rgb(250,82,29)" fg:x="4448" fg:w="2"/><text x="98.0727%" y="207.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (2 samples, 0.04%)</title><rect x="97.8227%" y="181" width="0.0440%" height="15" fill="rgb(241,226,54)" fg:x="4448" fg:w="2"/><text x="98.0727%" y="191.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (2 samples, 0.04%)</title><rect x="97.8227%" y="165" width="0.0440%" height="15" fill="rgb(221,99,41)" fg:x="4448" fg:w="2"/><text x="98.0727%" y="175.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.04%)</title><rect x="97.8227%" y="149" width="0.0440%" height="15" fill="rgb(213,90,21)" fg:x="4448" fg:w="2"/><text x="98.0727%" y="159.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.04%)</title><rect x="97.8227%" y="133" width="0.0440%" height="15" fill="rgb(205,208,24)" fg:x="4448" fg:w="2"/><text x="98.0727%" y="143.50"></text></g><g><title>tokio::runtime::task::Task&lt;S&gt;::header (1 samples, 0.02%)</title><rect x="97.8887%" y="325" width="0.0220%" height="15" fill="rgb(246,31,12)" fg:x="4451" fg:w="1"/><text x="98.1387%" y="335.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::header (1 samples, 0.02%)</title><rect x="97.8887%" y="309" width="0.0220%" height="15" fill="rgb(213,154,6)" fg:x="4451" fg:w="1"/><text x="98.1387%" y="319.50"></text></g><g><title>tokio::runtime::task::core::Header::set_owner_id (2 samples, 0.04%)</title><rect x="97.9107%" y="325" width="0.0440%" height="15" fill="rgb(222,163,29)" fg:x="4452" fg:w="2"/><text x="98.1607%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.04%)</title><rect x="97.9547%" y="309" width="0.0440%" height="15" fill="rgb(227,201,8)" fg:x="4454" fg:w="2"/><text x="98.2047%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.04%)</title><rect x="97.9547%" y="293" width="0.0440%" height="15" fill="rgb(233,9,32)" fg:x="4454" fg:w="2"/><text x="98.2047%" y="303.50"></text></g><g><title>tokio::util::sharded_list::ShardGuard&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push (7 samples, 0.15%)</title><rect x="97.9547%" y="325" width="0.1539%" height="15" fill="rgb(217,54,24)" fg:x="4454" fg:w="7"/><text x="98.2047%" y="335.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (5 samples, 0.11%)</title><rect x="97.9987%" y="309" width="0.1100%" height="15" fill="rgb(235,192,0)" fg:x="4456" fg:w="5"/><text x="98.2487%" y="319.50"></text></g><g><title>&lt;tokio::runtime::task::Task&lt;S&gt; as tokio::util::linked_list::Link&gt;::pointers (5 samples, 0.11%)</title><rect x="97.9987%" y="293" width="0.1100%" height="15" fill="rgb(235,45,9)" fg:x="4456" fg:w="5"/><text x="98.2487%" y="303.50"></text></g><g><title>tokio::runtime::task::core::Header::get_trailer (4 samples, 0.09%)</title><rect x="98.0207%" y="277" width="0.0880%" height="15" fill="rgb(246,42,40)" fg:x="4457" fg:w="4"/><text x="98.2707%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3 samples, 0.07%)</title><rect x="98.0427%" y="261" width="0.0660%" height="15" fill="rgb(248,111,24)" fg:x="4458" fg:w="3"/><text x="98.2927%" y="271.50"></text></g><g><title>&lt;tokio::runtime::task::Task&lt;S&gt; as tokio::util::linked_list::Link&gt;::as_raw (1 samples, 0.02%)</title><rect x="98.1086%" y="309" width="0.0220%" height="15" fill="rgb(249,65,22)" fg:x="4461" fg:w="1"/><text x="98.3586%" y="319.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::header_ptr (1 samples, 0.02%)</title><rect x="98.1086%" y="293" width="0.0220%" height="15" fill="rgb(238,111,51)" fg:x="4461" fg:w="1"/><text x="98.3586%" y="303.50"></text></g><g><title>&lt;tokio::runtime::task::Task&lt;S&gt; as tokio::util::sharded_list::ShardedListItem&gt;::get_shard_id (5 samples, 0.11%)</title><rect x="98.1306%" y="309" width="0.1100%" height="15" fill="rgb(250,118,22)" fg:x="4462" fg:w="5"/><text x="98.3806%" y="319.50"></text></g><g><title>tokio::runtime::task::core::Header::get_id (5 samples, 0.11%)</title><rect x="98.1306%" y="293" width="0.1100%" height="15" fill="rgb(234,84,26)" fg:x="4462" fg:w="5"/><text x="98.3806%" y="303.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind_inner (19 samples, 0.42%)</title><rect x="97.8667%" y="341" width="0.4179%" height="15" fill="rgb(243,172,12)" fg:x="4450" fg:w="19"/><text x="98.1167%" y="351.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::lock_shard (8 samples, 0.18%)</title><rect x="98.1086%" y="325" width="0.1759%" height="15" fill="rgb(236,150,49)" fg:x="4461" fg:w="8"/><text x="98.3586%" y="335.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::shard_inner (2 samples, 0.04%)</title><rect x="98.2406%" y="309" width="0.0440%" height="15" fill="rgb(225,197,26)" fg:x="4467" fg:w="2"/><text x="98.4906%" y="319.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (2 samples, 0.04%)</title><rect x="98.2406%" y="293" width="0.0440%" height="15" fill="rgb(214,17,42)" fg:x="4467" fg:w="2"/><text x="98.4906%" y="303.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.04%)</title><rect x="98.2406%" y="277" width="0.0440%" height="15" fill="rgb(224,165,40)" fg:x="4467" fg:w="2"/><text x="98.4906%" y="287.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.04%)</title><rect x="98.2406%" y="261" width="0.0440%" height="15" fill="rgb(246,100,4)" fg:x="4467" fg:w="2"/><text x="98.4906%" y="271.50"></text></g><g><title>[libc.so.6] (3 samples, 0.07%)</title><rect x="98.3286%" y="293" width="0.0660%" height="15" fill="rgb(222,103,0)" fg:x="4471" fg:w="3"/><text x="98.5786%" y="303.50"></text></g><g><title>[libc.so.6] (4 samples, 0.09%)</title><rect x="98.3945%" y="277" width="0.0880%" height="15" fill="rgb(227,189,26)" fg:x="4474" fg:w="4"/><text x="98.6445%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="98.4605%" y="261" width="0.0220%" height="15" fill="rgb(214,202,17)" fg:x="4477" fg:w="1"/><text x="98.7105%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="98.4605%" y="245" width="0.0220%" height="15" fill="rgb(229,111,3)" fg:x="4477" fg:w="1"/><text x="98.7105%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="98.4605%" y="229" width="0.0220%" height="15" fill="rgb(229,172,15)" fg:x="4477" fg:w="1"/><text x="98.7105%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="98.4605%" y="213" width="0.0220%" height="15" fill="rgb(230,224,35)" fg:x="4477" fg:w="1"/><text x="98.7105%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="98.4605%" y="197" width="0.0220%" height="15" fill="rgb(251,141,6)" fg:x="4477" fg:w="1"/><text x="98.7105%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="98.4605%" y="181" width="0.0220%" height="15" fill="rgb(225,208,6)" fg:x="4477" fg:w="1"/><text x="98.7105%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="98.4605%" y="165" width="0.0220%" height="15" fill="rgb(246,181,16)" fg:x="4477" fg:w="1"/><text x="98.7105%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="98.4605%" y="149" width="0.0220%" height="15" fill="rgb(227,129,36)" fg:x="4477" fg:w="1"/><text x="98.7105%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="98.4605%" y="133" width="0.0220%" height="15" fill="rgb(248,117,24)" fg:x="4477" fg:w="1"/><text x="98.7105%" y="143.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (16 samples, 0.35%)</title><rect x="98.3945%" y="293" width="0.3519%" height="15" fill="rgb(214,185,35)" fg:x="4474" fg:w="16"/><text x="98.6445%" y="303.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.26%)</title><rect x="98.4825%" y="277" width="0.2639%" height="15" fill="rgb(236,150,34)" fg:x="4478" fg:w="12"/><text x="98.7325%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.26%)</title><rect x="98.4825%" y="261" width="0.2639%" height="15" fill="rgb(243,228,27)" fg:x="4478" fg:w="12"/><text x="98.7325%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.26%)</title><rect x="98.4825%" y="245" width="0.2639%" height="15" fill="rgb(245,77,44)" fg:x="4478" fg:w="12"/><text x="98.7325%" y="255.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.26%)</title><rect x="98.4825%" y="229" width="0.2639%" height="15" fill="rgb(235,214,42)" fg:x="4478" fg:w="12"/><text x="98.7325%" y="239.50"></text></g><g><title>__rdl_alloc (12 samples, 0.26%)</title><rect x="98.4825%" y="213" width="0.2639%" height="15" fill="rgb(221,74,3)" fg:x="4478" fg:w="12"/><text x="98.7325%" y="223.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (12 samples, 0.26%)</title><rect x="98.4825%" y="197" width="0.2639%" height="15" fill="rgb(206,121,29)" fg:x="4478" fg:w="12"/><text x="98.7325%" y="207.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (11 samples, 0.24%)</title><rect x="98.5045%" y="181" width="0.2419%" height="15" fill="rgb(249,131,53)" fg:x="4479" fg:w="11"/><text x="98.7545%" y="191.50"></text></g><g><title>posix_memalign (10 samples, 0.22%)</title><rect x="98.5265%" y="165" width="0.2199%" height="15" fill="rgb(236,170,29)" fg:x="4480" fg:w="10"/><text x="98.7765%" y="175.50"></text></g><g><title>[libc.so.6] (10 samples, 0.22%)</title><rect x="98.5265%" y="149" width="0.2199%" height="15" fill="rgb(247,96,15)" fg:x="4480" fg:w="10"/><text x="98.7765%" y="159.50"></text></g><g><title>[libc.so.6] (5 samples, 0.11%)</title><rect x="98.6365%" y="133" width="0.1100%" height="15" fill="rgb(211,210,7)" fg:x="4485" fg:w="5"/><text x="98.8865%" y="143.50"></text></g><g><title>[libc.so.6] (3 samples, 0.07%)</title><rect x="98.6804%" y="117" width="0.0660%" height="15" fill="rgb(240,88,50)" fg:x="4487" fg:w="3"/><text x="98.9304%" y="127.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="98.7024%" y="101" width="0.0440%" height="15" fill="rgb(209,229,26)" fg:x="4488" fg:w="2"/><text x="98.9524%" y="111.50"></text></g><g><title>__mprotect (1 samples, 0.02%)</title><rect x="98.7244%" y="85" width="0.0220%" height="15" fill="rgb(210,68,23)" fg:x="4489" fg:w="1"/><text x="98.9744%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="98.7244%" y="69" width="0.0220%" height="15" fill="rgb(229,180,13)" fg:x="4489" fg:w="1"/><text x="98.9744%" y="79.50"></text></g><g><title>tokio::runtime::context::current::with_current (55 samples, 1.21%)</title><rect x="97.5808%" y="485" width="1.2096%" height="15" fill="rgb(236,53,44)" fg:x="4437" fg:w="55"/><text x="97.8308%" y="495.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (55 samples, 1.21%)</title><rect x="97.5808%" y="469" width="1.2096%" height="15" fill="rgb(244,214,29)" fg:x="4437" fg:w="55"/><text x="97.8308%" y="479.50"></text></g><g><title>tokio::runtime::context::current::with_current::_{{closure}} (54 samples, 1.19%)</title><rect x="97.6028%" y="453" width="1.1876%" height="15" fill="rgb(220,75,29)" fg:x="4438" fg:w="54"/><text x="97.8528%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (54 samples, 1.19%)</title><rect x="97.6028%" y="437" width="1.1876%" height="15" fill="rgb(214,183,37)" fg:x="4438" fg:w="54"/><text x="97.8528%" y="447.50"></text></g><g><title>tokio::task::spawn::spawn_inner::_{{closure}} (54 samples, 1.19%)</title><rect x="97.6028%" y="421" width="1.1876%" height="15" fill="rgb(239,117,29)" fg:x="4438" fg:w="54"/><text x="97.8528%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (54 samples, 1.19%)</title><rect x="97.6028%" y="405" width="1.1876%" height="15" fill="rgb(237,171,35)" fg:x="4438" fg:w="54"/><text x="97.8528%" y="415.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (54 samples, 1.19%)</title><rect x="97.6028%" y="389" width="1.1876%" height="15" fill="rgb(229,178,53)" fg:x="4438" fg:w="54"/><text x="97.8528%" y="399.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (54 samples, 1.19%)</title><rect x="97.6028%" y="373" width="1.1876%" height="15" fill="rgb(210,102,19)" fg:x="4438" fg:w="54"/><text x="97.8528%" y="383.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (42 samples, 0.92%)</title><rect x="97.8667%" y="357" width="0.9237%" height="15" fill="rgb(235,127,22)" fg:x="4450" fg:w="42"/><text x="98.1167%" y="367.50"></text></g><g><title>tokio::runtime::task::new_task (23 samples, 0.51%)</title><rect x="98.2846%" y="341" width="0.5058%" height="15" fill="rgb(244,31,31)" fg:x="4469" fg:w="23"/><text x="98.5346%" y="351.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (23 samples, 0.51%)</title><rect x="98.2846%" y="325" width="0.5058%" height="15" fill="rgb(231,43,21)" fg:x="4469" fg:w="23"/><text x="98.5346%" y="335.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (22 samples, 0.48%)</title><rect x="98.3066%" y="309" width="0.4838%" height="15" fill="rgb(217,131,35)" fg:x="4470" fg:w="22"/><text x="98.5566%" y="319.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new::new_header (2 samples, 0.04%)</title><rect x="98.7464%" y="293" width="0.0440%" height="15" fill="rgb(221,149,4)" fg:x="4490" fg:w="2"/><text x="98.9964%" y="303.50"></text></g><g><title>tokio::runtime::task::id::Id::next (3 samples, 0.07%)</title><rect x="98.7904%" y="485" width="0.0660%" height="15" fill="rgb(232,170,28)" fg:x="4492" fg:w="3"/><text x="99.0404%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (2 samples, 0.04%)</title><rect x="98.8124%" y="469" width="0.0440%" height="15" fill="rgb(238,56,10)" fg:x="4493" fg:w="2"/><text x="99.0624%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.04%)</title><rect x="98.8124%" y="453" width="0.0440%" height="15" fill="rgb(235,196,14)" fg:x="4493" fg:w="2"/><text x="99.0624%" y="463.50"></text></g><g><title>day16::maze_walker::MazeRunner::new::_{{closure}} (2,045 samples, 44.97%)</title><rect x="53.9037%" y="533" width="44.9747%" height="15" fill="rgb(216,45,48)" fg:x="2451" fg:w="2045"/><text x="54.1537%" y="543.50">day16::maze_walker::MazeRunner::new::_{{closure}}</text></g><g><title>tokio::task::spawn::spawn (61 samples, 1.34%)</title><rect x="97.5368%" y="517" width="1.3415%" height="15" fill="rgb(238,213,17)" fg:x="4435" fg:w="61"/><text x="97.7868%" y="527.50"></text></g><g><title>tokio::task::spawn::spawn_inner (59 samples, 1.30%)</title><rect x="97.5808%" y="501" width="1.2976%" height="15" fill="rgb(212,13,2)" fg:x="4437" fg:w="59"/><text x="97.8308%" y="511.50"></text></g><g><title>tokio::util::trace::task (1 samples, 0.02%)</title><rect x="98.8564%" y="485" width="0.0220%" height="15" fill="rgb(240,114,20)" fg:x="4495" fg:w="1"/><text x="99.1064%" y="495.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="98.8564%" y="469" width="0.0220%" height="15" fill="rgb(228,41,40)" fg:x="4495" fg:w="1"/><text x="99.1064%" y="479.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (4,084 samples, 89.82%)</title><rect x="9.1049%" y="565" width="89.8175%" height="15" fill="rgb(244,132,35)" fg:x="414" fg:w="4084"/><text x="9.3549%" y="575.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (4,084 samples, 89.82%)</title><rect x="9.1049%" y="549" width="89.8175%" height="15" fill="rgb(253,189,4)" fg:x="414" fg:w="4084"/><text x="9.3549%" y="559.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}}</text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (2 samples, 0.04%)</title><rect x="98.8784%" y="533" width="0.0440%" height="15" fill="rgb(224,37,19)" fg:x="4496" fg:w="2"/><text x="99.1284%" y="543.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="98.9224%" y="533" width="0.0220%" height="15" fill="rgb(235,223,18)" fg:x="4498" fg:w="1"/><text x="99.1724%" y="543.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (4,093 samples, 90.02%)</title><rect x="8.9510%" y="581" width="90.0154%" height="15" fill="rgb(235,163,25)" fg:x="407" fg:w="4093"/><text x="9.2010%" y="591.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output (2 samples, 0.04%)</title><rect x="98.9224%" y="565" width="0.0440%" height="15" fill="rgb(217,145,28)" fg:x="4498" fg:w="2"/><text x="99.1724%" y="575.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (2 samples, 0.04%)</title><rect x="98.9224%" y="549" width="0.0440%" height="15" fill="rgb(223,223,32)" fg:x="4498" fg:w="2"/><text x="99.1724%" y="559.50"></text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (1 samples, 0.02%)</title><rect x="98.9444%" y="533" width="0.0220%" height="15" fill="rgb(227,189,39)" fg:x="4499" fg:w="1"/><text x="99.1944%" y="543.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (1 samples, 0.02%)</title><rect x="98.9444%" y="517" width="0.0220%" height="15" fill="rgb(248,10,22)" fg:x="4499" fg:w="1"/><text x="99.1944%" y="527.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.02%)</title><rect x="98.9444%" y="501" width="0.0220%" height="15" fill="rgb(248,46,39)" fg:x="4499" fg:w="1"/><text x="99.1944%" y="511.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (1 samples, 0.02%)</title><rect x="98.9444%" y="485" width="0.0220%" height="15" fill="rgb(248,113,48)" fg:x="4499" fg:w="1"/><text x="99.1944%" y="495.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="98.9664%" y="549" width="0.0220%" height="15" fill="rgb(245,16,25)" fg:x="4500" fg:w="1"/><text x="99.2164%" y="559.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (4,095 samples, 90.06%)</title><rect x="8.9510%" y="677" width="90.0594%" height="15" fill="rgb(249,152,16)" fg:x="407" fg:w="4095"/><text x="9.2010%" y="687.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (4,095 samples, 90.06%)</title><rect x="8.9510%" y="661" width="90.0594%" height="15" fill="rgb(250,16,1)" fg:x="407" fg:w="4095"/><text x="9.2010%" y="671.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (4,095 samples, 90.06%)</title><rect x="8.9510%" y="645" width="90.0594%" height="15" fill="rgb(249,138,3)" fg:x="407" fg:w="4095"/><text x="9.2010%" y="655.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (4,095 samples, 90.06%)</title><rect x="8.9510%" y="629" width="90.0594%" height="15" fill="rgb(227,71,41)" fg:x="407" fg:w="4095"/><text x="9.2010%" y="639.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,095 samples, 90.06%)</title><rect x="8.9510%" y="613" width="90.0594%" height="15" fill="rgb(209,184,23)" fg:x="407" fg:w="4095"/><text x="9.2010%" y="623.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (4,095 samples, 90.06%)</title><rect x="8.9510%" y="597" width="90.0594%" height="15" fill="rgb(223,215,31)" fg:x="407" fg:w="4095"/><text x="9.2010%" y="607.50">tokio::runtime::task::harness::poll_future::_{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::store_output (2 samples, 0.04%)</title><rect x="98.9664%" y="581" width="0.0440%" height="15" fill="rgb(210,146,28)" fg:x="4500" fg:w="2"/><text x="99.2164%" y="591.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (2 samples, 0.04%)</title><rect x="98.9664%" y="565" width="0.0440%" height="15" fill="rgb(209,183,41)" fg:x="4500" fg:w="2"/><text x="99.2164%" y="575.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.02%)</title><rect x="98.9883%" y="549" width="0.0220%" height="15" fill="rgb(209,224,45)" fg:x="4501" fg:w="1"/><text x="99.2383%" y="559.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::_{{closure}} (1 samples, 0.02%)</title><rect x="98.9883%" y="533" width="0.0220%" height="15" fill="rgb(224,209,51)" fg:x="4501" fg:w="1"/><text x="99.2383%" y="543.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="98.9883%" y="517" width="0.0220%" height="15" fill="rgb(223,17,39)" fg:x="4501" fg:w="1"/><text x="99.2383%" y="527.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (3 samples, 0.07%)</title><rect x="99.0103%" y="677" width="0.0660%" height="15" fill="rgb(234,204,37)" fg:x="4502" fg:w="3"/><text x="99.2603%" y="687.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (2 samples, 0.04%)</title><rect x="99.0323%" y="661" width="0.0440%" height="15" fill="rgb(236,120,5)" fg:x="4503" fg:w="2"/><text x="99.2823%" y="671.50"></text></g><g><title>tokio::runtime::task::state::State::load (1 samples, 0.02%)</title><rect x="99.0543%" y="645" width="0.0220%" height="15" fill="rgb(248,97,27)" fg:x="4504" fg:w="1"/><text x="99.3043%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="99.0543%" y="629" width="0.0220%" height="15" fill="rgb(240,66,17)" fg:x="4504" fg:w="1"/><text x="99.3043%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="99.0543%" y="613" width="0.0220%" height="15" fill="rgb(210,79,3)" fg:x="4504" fg:w="1"/><text x="99.3043%" y="623.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (1 samples, 0.02%)</title><rect x="99.0763%" y="677" width="0.0220%" height="15" fill="rgb(214,176,27)" fg:x="4505" fg:w="1"/><text x="99.3263%" y="687.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (1 samples, 0.02%)</title><rect x="99.0763%" y="661" width="0.0220%" height="15" fill="rgb(235,185,3)" fg:x="4505" fg:w="1"/><text x="99.3263%" y="671.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running::_{{closure}} (1 samples, 0.02%)</title><rect x="99.0763%" y="645" width="0.0220%" height="15" fill="rgb(227,24,12)" fg:x="4505" fg:w="1"/><text x="99.3263%" y="655.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (4,142 samples, 91.09%)</title><rect x="8.0713%" y="709" width="91.0930%" height="15" fill="rgb(252,169,48)" fg:x="367" fg:w="4142"/><text x="8.3213%" y="719.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (4,120 samples, 90.61%)</title><rect x="8.5551%" y="693" width="90.6092%" height="15" fill="rgb(212,65,1)" fg:x="389" fg:w="4120"/><text x="8.8051%" y="703.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::waker::waker_ref (3 samples, 0.07%)</title><rect x="99.0983%" y="677" width="0.0660%" height="15" fill="rgb(242,39,24)" fg:x="4506" fg:w="3"/><text x="99.3483%" y="687.50"></text></g><g><title>tokio::runtime::task::waker::raw_waker (3 samples, 0.07%)</title><rect x="99.0983%" y="661" width="0.0660%" height="15" fill="rgb(249,32,23)" fg:x="4506" fg:w="3"/><text x="99.3483%" y="671.50"></text></g><g><title>tokio::runtime::coop::budget (4,180 samples, 91.93%)</title><rect x="7.3235%" y="789" width="91.9287%" height="15" fill="rgb(251,195,23)" fg:x="333" fg:w="4180"/><text x="7.5735%" y="799.50">tokio::runtime::coop::budget</text></g><g><title>tokio::runtime::coop::with_budget (4,180 samples, 91.93%)</title><rect x="7.3235%" y="773" width="91.9287%" height="15" fill="rgb(236,174,8)" fg:x="333" fg:w="4180"/><text x="7.5735%" y="783.50">tokio::runtime::coop::with_budget</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (4,179 samples, 91.91%)</title><rect x="7.3455%" y="757" width="91.9068%" height="15" fill="rgb(220,197,8)" fg:x="334" fg:w="4179"/><text x="7.5955%" y="767.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}}</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (4,167 samples, 91.64%)</title><rect x="7.6094%" y="741" width="91.6428%" height="15" fill="rgb(240,108,37)" fg:x="346" fg:w="4167"/><text x="7.8594%" y="751.50">tokio::runtime::task::LocalNotified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (4,167 samples, 91.64%)</title><rect x="7.6094%" y="725" width="91.6428%" height="15" fill="rgb(232,176,24)" fg:x="346" fg:w="4167"/><text x="7.8594%" y="735.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (4 samples, 0.09%)</title><rect x="99.1643%" y="709" width="0.0880%" height="15" fill="rgb(243,35,29)" fg:x="4509" fg:w="4"/><text x="99.4143%" y="719.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (2 samples, 0.04%)</title><rect x="99.2523%" y="741" width="0.0440%" height="15" fill="rgb(210,37,18)" fg:x="4513" fg:w="2"/><text x="99.5023%" y="751.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (2 samples, 0.04%)</title><rect x="99.2523%" y="725" width="0.0440%" height="15" fill="rgb(224,184,40)" fg:x="4513" fg:w="2"/><text x="99.5023%" y="735.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (1 samples, 0.02%)</title><rect x="99.2742%" y="709" width="0.0220%" height="15" fill="rgb(236,39,29)" fg:x="4514" fg:w="1"/><text x="99.5242%" y="719.50"></text></g><g><title>syscall (1 samples, 0.02%)</title><rect x="99.2742%" y="693" width="0.0220%" height="15" fill="rgb(232,48,39)" fg:x="4514" fg:w="1"/><text x="99.5242%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.2742%" y="677" width="0.0220%" height="15" fill="rgb(236,34,42)" fg:x="4514" fg:w="1"/><text x="99.5242%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.2742%" y="661" width="0.0220%" height="15" fill="rgb(243,106,37)" fg:x="4514" fg:w="1"/><text x="99.5242%" y="671.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (1 samples, 0.02%)</title><rect x="99.2962%" y="741" width="0.0220%" height="15" fill="rgb(218,96,6)" fg:x="4515" fg:w="1"/><text x="99.5462%" y="751.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (4,189 samples, 92.13%)</title><rect x="7.2135%" y="805" width="92.1267%" height="15" fill="rgb(235,130,12)" fg:x="328" fg:w="4189"/><text x="7.4635%" y="815.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_searching (4 samples, 0.09%)</title><rect x="99.2523%" y="789" width="0.0880%" height="15" fill="rgb(231,95,0)" fg:x="4513" fg:w="4"/><text x="99.5023%" y="799.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::transition_worker_from_searching (4 samples, 0.09%)</title><rect x="99.2523%" y="773" width="0.0880%" height="15" fill="rgb(228,12,23)" fg:x="4513" fg:w="4"/><text x="99.5023%" y="783.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (4 samples, 0.09%)</title><rect x="99.2523%" y="757" width="0.0880%" height="15" fill="rgb(216,12,1)" fg:x="4513" fg:w="4"/><text x="99.5023%" y="767.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (1 samples, 0.02%)</title><rect x="99.3182%" y="741" width="0.0220%" height="15" fill="rgb(219,59,3)" fg:x="4516" fg:w="1"/><text x="99.5682%" y="751.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (1 samples, 0.02%)</title><rect x="99.3182%" y="725" width="0.0220%" height="15" fill="rgb(215,208,46)" fg:x="4516" fg:w="1"/><text x="99.5682%" y="735.50"></text></g><g><title>&lt;tokio::runtime::scheduler::inject::pop::Pop&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.04%)</title><rect x="99.4062%" y="789" width="0.0440%" height="15" fill="rgb(254,224,29)" fg:x="4520" fg:w="2"/><text x="99.6562%" y="799.50"></text></g><g><title>tokio::runtime::scheduler::inject::synced::Synced::pop (2 samples, 0.04%)</title><rect x="99.4062%" y="773" width="0.0440%" height="15" fill="rgb(232,14,29)" fg:x="4520" fg:w="2"/><text x="99.6562%" y="783.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (1 samples, 0.02%)</title><rect x="99.4502%" y="725" width="0.0220%" height="15" fill="rgb(208,45,52)" fg:x="4522" fg:w="1"/><text x="99.7002%" y="735.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_one (1 samples, 0.02%)</title><rect x="99.4502%" y="709" width="0.0220%" height="15" fill="rgb(234,191,28)" fg:x="4522" fg:w="1"/><text x="99.7002%" y="719.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (1 samples, 0.02%)</title><rect x="99.4502%" y="693" width="0.0220%" height="15" fill="rgb(244,67,43)" fg:x="4522" fg:w="1"/><text x="99.7002%" y="703.50"></text></g><g><title>parking_lot_core::parking_lot::hash (1 samples, 0.02%)</title><rect x="99.4502%" y="677" width="0.0220%" height="15" fill="rgb(236,189,24)" fg:x="4522" fg:w="1"/><text x="99.7002%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (2 samples, 0.04%)</title><rect x="99.4502%" y="789" width="0.0440%" height="15" fill="rgb(239,214,33)" fg:x="4522" fg:w="2"/><text x="99.7002%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (2 samples, 0.04%)</title><rect x="99.4502%" y="773" width="0.0440%" height="15" fill="rgb(226,176,41)" fg:x="4522" fg:w="2"/><text x="99.7002%" y="783.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="99.4502%" y="757" width="0.0440%" height="15" fill="rgb(248,47,8)" fg:x="4522" fg:w="2"/><text x="99.7002%" y="767.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (2 samples, 0.04%)</title><rect x="99.4502%" y="741" width="0.0440%" height="15" fill="rgb(218,81,44)" fg:x="4522" fg:w="2"/><text x="99.7002%" y="751.50"></text></g><g><title>syscall (1 samples, 0.02%)</title><rect x="99.4722%" y="725" width="0.0220%" height="15" fill="rgb(213,98,6)" fg:x="4523" fg:w="1"/><text x="99.7222%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.4722%" y="709" width="0.0220%" height="15" fill="rgb(222,85,22)" fg:x="4523" fg:w="1"/><text x="99.7222%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.4722%" y="693" width="0.0220%" height="15" fill="rgb(239,46,39)" fg:x="4523" fg:w="1"/><text x="99.7222%" y="703.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back (6 samples, 0.13%)</title><rect x="99.4942%" y="789" width="0.1320%" height="15" fill="rgb(237,12,29)" fg:x="4524" fg:w="6"/><text x="99.7442%" y="799.50"></text></g><g><title>&lt;tokio::runtime::scheduler::inject::pop::Pop&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.13%)</title><rect x="99.4942%" y="773" width="0.1320%" height="15" fill="rgb(214,77,8)" fg:x="4524" fg:w="6"/><text x="99.7442%" y="783.50"></text></g><g><title>tokio::runtime::scheduler::inject::synced::Synced::pop (5 samples, 0.11%)</title><rect x="99.5162%" y="757" width="0.1100%" height="15" fill="rgb(217,168,37)" fg:x="4525" fg:w="5"/><text x="99.7662%" y="767.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="99.6041%" y="741" width="0.0220%" height="15" fill="rgb(221,217,23)" fg:x="4529" fg:w="1"/><text x="99.8541%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (1 samples, 0.02%)</title><rect x="99.6261%" y="773" width="0.0220%" height="15" fill="rgb(243,229,36)" fg:x="4530" fg:w="1"/><text x="99.8761%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (1 samples, 0.02%)</title><rect x="99.6261%" y="757" width="0.0220%" height="15" fill="rgb(251,163,40)" fg:x="4530" fg:w="1"/><text x="99.8761%" y="767.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="99.6261%" y="741" width="0.0220%" height="15" fill="rgb(237,222,12)" fg:x="4530" fg:w="1"/><text x="99.8761%" y="751.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.02%)</title><rect x="99.6261%" y="725" width="0.0220%" height="15" fill="rgb(248,132,6)" fg:x="4530" fg:w="1"/><text x="99.8761%" y="735.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::next_remote_task (2 samples, 0.04%)</title><rect x="99.6261%" y="789" width="0.0440%" height="15" fill="rgb(227,167,50)" fg:x="4530" fg:w="2"/><text x="99.8761%" y="799.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.02%)</title><rect x="99.6481%" y="773" width="0.0220%" height="15" fill="rgb(242,84,37)" fg:x="4531" fg:w="1"/><text x="99.8981%" y="783.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.02%)</title><rect x="99.6481%" y="757" width="0.0220%" height="15" fill="rgb(212,4,50)" fg:x="4531" fg:w="1"/><text x="99.8981%" y="767.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.02%)</title><rect x="99.6481%" y="741" width="0.0220%" height="15" fill="rgb(230,228,32)" fg:x="4531" fg:w="1"/><text x="99.8981%" y="751.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task (16 samples, 0.35%)</title><rect x="99.3402%" y="805" width="0.3519%" height="15" fill="rgb(248,217,23)" fg:x="4517" fg:w="16"/><text x="99.5902%" y="815.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::tune_global_queue_interval (1 samples, 0.02%)</title><rect x="99.6701%" y="789" width="0.0220%" height="15" fill="rgb(238,197,32)" fg:x="4532" fg:w="1"/><text x="99.9201%" y="799.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::tuned_global_queue_interval (1 samples, 0.02%)</title><rect x="99.6701%" y="773" width="0.0220%" height="15" fill="rgb(236,106,1)" fg:x="4532" fg:w="1"/><text x="99.9201%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="99.6921%" y="773" width="0.0220%" height="15" fill="rgb(219,228,13)" fg:x="4533" fg:w="1"/><text x="99.9421%" y="783.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.02%)</title><rect x="99.6921%" y="757" width="0.0220%" height="15" fill="rgb(238,30,35)" fg:x="4533" fg:w="1"/><text x="99.9421%" y="767.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="99.6921%" y="741" width="0.0220%" height="15" fill="rgb(236,70,23)" fg:x="4533" fg:w="1"/><text x="99.9421%" y="751.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (4,254 samples, 93.56%)</title><rect x="6.1799%" y="933" width="93.5562%" height="15" fill="rgb(249,104,48)" fg:x="281" fg:w="4254"/><text x="6.4299%" y="943.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (4,254 samples, 93.56%)</title><rect x="6.1799%" y="917" width="93.5562%" height="15" fill="rgb(254,117,50)" fg:x="281" fg:w="4254"/><text x="6.4299%" y="927.50">tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (4,254 samples, 93.56%)</title><rect x="6.1799%" y="901" width="93.5562%" height="15" fill="rgb(223,152,4)" fg:x="281" fg:w="4254"/><text x="6.4299%" y="911.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (4,252 samples, 93.51%)</title><rect x="6.2239%" y="885" width="93.5122%" height="15" fill="rgb(245,6,2)" fg:x="283" fg:w="4252"/><text x="6.4739%" y="895.50">tokio::runtime::context::runtime::enter_runtime</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (4,245 samples, 93.36%)</title><rect x="6.3778%" y="869" width="93.3583%" height="15" fill="rgb(249,150,24)" fg:x="290" fg:w="4245"/><text x="6.6278%" y="879.50">tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (4,245 samples, 93.36%)</title><rect x="6.3778%" y="853" width="93.3583%" height="15" fill="rgb(228,185,42)" fg:x="290" fg:w="4245"/><text x="6.6278%" y="863.50">tokio::runtime::context::scoped::Scoped&lt;T&gt;::set</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (4,245 samples, 93.36%)</title><rect x="6.3778%" y="837" width="93.3583%" height="15" fill="rgb(226,39,33)" fg:x="290" fg:w="4245"/><text x="6.6278%" y="847.50">tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (4,245 samples, 93.36%)</title><rect x="6.3778%" y="821" width="93.3583%" height="15" fill="rgb(221,166,19)" fg:x="290" fg:w="4245"/><text x="6.6278%" y="831.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (2 samples, 0.04%)</title><rect x="99.6921%" y="805" width="0.0440%" height="15" fill="rgb(209,109,2)" fg:x="4533" fg:w="2"/><text x="99.9421%" y="815.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (2 samples, 0.04%)</title><rect x="99.6921%" y="789" width="0.0440%" height="15" fill="rgb(252,216,26)" fg:x="4533" fg:w="2"/><text x="99.9421%" y="799.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (1 samples, 0.02%)</title><rect x="99.7141%" y="773" width="0.0220%" height="15" fill="rgb(227,173,36)" fg:x="4534" fg:w="1"/><text x="99.9641%" y="783.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::unpack (1 samples, 0.02%)</title><rect x="99.7141%" y="757" width="0.0220%" height="15" fill="rgb(209,90,7)" fg:x="4534" fg:w="1"/><text x="99.9641%" y="767.50"></text></g><g><title>std::panic::catch_unwind (4,274 samples, 94.00%)</title><rect x="5.7620%" y="1285" width="93.9960%" height="15" fill="rgb(250,194,11)" fg:x="262" fg:w="4274"/><text x="6.0120%" y="1295.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (4,274 samples, 94.00%)</title><rect x="5.7620%" y="1269" width="93.9960%" height="15" fill="rgb(220,72,50)" fg:x="262" fg:w="4274"/><text x="6.0120%" y="1279.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (4,274 samples, 94.00%)</title><rect x="5.7620%" y="1253" width="93.9960%" height="15" fill="rgb(222,106,48)" fg:x="262" fg:w="4274"/><text x="6.0120%" y="1263.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,274 samples, 94.00%)</title><rect x="5.7620%" y="1237" width="93.9960%" height="15" fill="rgb(216,220,45)" fg:x="262" fg:w="4274"/><text x="6.0120%" y="1247.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (4,274 samples, 94.00%)</title><rect x="5.7620%" y="1221" width="93.9960%" height="15" fill="rgb(234,112,18)" fg:x="262" fg:w="4274"/><text x="6.0120%" y="1231.50">std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4,274 samples, 94.00%)</title><rect x="5.7620%" y="1205" width="93.9960%" height="15" fill="rgb(206,179,9)" fg:x="262" fg:w="4274"/><text x="6.0120%" y="1215.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}} (4,272 samples, 93.95%)</title><rect x="5.8060%" y="1189" width="93.9521%" height="15" fill="rgb(215,115,40)" fg:x="264" fg:w="4272"/><text x="6.0560%" y="1199.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}}</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (4,272 samples, 93.95%)</title><rect x="5.8060%" y="1173" width="93.9521%" height="15" fill="rgb(222,69,34)" fg:x="264" fg:w="4272"/><text x="6.0560%" y="1183.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::blocking::pool::Task::run (4,256 samples, 93.60%)</title><rect x="6.1579%" y="1157" width="93.6002%" height="15" fill="rgb(209,161,10)" fg:x="280" fg:w="4256"/><text x="6.4079%" y="1167.50">tokio::runtime::blocking::pool::Task::run</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (4,256 samples, 93.60%)</title><rect x="6.1579%" y="1141" width="93.6002%" height="15" fill="rgb(217,6,38)" fg:x="280" fg:w="4256"/><text x="6.4079%" y="1151.50">tokio::runtime::task::UnownedTask&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (4,256 samples, 93.60%)</title><rect x="6.1579%" y="1125" width="93.6002%" height="15" fill="rgb(229,229,48)" fg:x="280" fg:w="4256"/><text x="6.4079%" y="1135.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (4,256 samples, 93.60%)</title><rect x="6.1579%" y="1109" width="93.6002%" height="15" fill="rgb(225,21,28)" fg:x="280" fg:w="4256"/><text x="6.4079%" y="1119.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (4,255 samples, 93.58%)</title><rect x="6.1799%" y="1093" width="93.5782%" height="15" fill="rgb(206,33,13)" fg:x="281" fg:w="4255"/><text x="6.4299%" y="1103.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (4,255 samples, 93.58%)</title><rect x="6.1799%" y="1077" width="93.5782%" height="15" fill="rgb(242,178,17)" fg:x="281" fg:w="4255"/><text x="6.4299%" y="1087.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (4,255 samples, 93.58%)</title><rect x="6.1799%" y="1061" width="93.5782%" height="15" fill="rgb(220,162,5)" fg:x="281" fg:w="4255"/><text x="6.4299%" y="1071.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (4,255 samples, 93.58%)</title><rect x="6.1799%" y="1045" width="93.5782%" height="15" fill="rgb(210,33,43)" fg:x="281" fg:w="4255"/><text x="6.4299%" y="1055.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (4,255 samples, 93.58%)</title><rect x="6.1799%" y="1029" width="93.5782%" height="15" fill="rgb(216,116,54)" fg:x="281" fg:w="4255"/><text x="6.4299%" y="1039.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,255 samples, 93.58%)</title><rect x="6.1799%" y="1013" width="93.5782%" height="15" fill="rgb(249,92,24)" fg:x="281" fg:w="4255"/><text x="6.4299%" y="1023.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (4,255 samples, 93.58%)</title><rect x="6.1799%" y="997" width="93.5782%" height="15" fill="rgb(231,189,14)" fg:x="281" fg:w="4255"/><text x="6.4299%" y="1007.50">tokio::runtime::task::harness::poll_future::_{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (4,255 samples, 93.58%)</title><rect x="6.1799%" y="981" width="93.5782%" height="15" fill="rgb(230,8,41)" fg:x="281" fg:w="4255"/><text x="6.4299%" y="991.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (4,255 samples, 93.58%)</title><rect x="6.1799%" y="965" width="93.5782%" height="15" fill="rgb(249,7,27)" fg:x="281" fg:w="4255"/><text x="6.4299%" y="975.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (4,255 samples, 93.58%)</title><rect x="6.1799%" y="949" width="93.5782%" height="15" fill="rgb(232,86,5)" fg:x="281" fg:w="4255"/><text x="6.4299%" y="959.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}}</text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (1 samples, 0.02%)</title><rect x="99.7361%" y="933" width="0.0220%" height="15" fill="rgb(224,175,18)" fg:x="4535" fg:w="1"/><text x="99.9861%" y="943.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (1 samples, 0.02%)</title><rect x="99.7361%" y="917" width="0.0220%" height="15" fill="rgb(220,129,12)" fg:x="4535" fg:w="1"/><text x="99.9861%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.02%)</title><rect x="99.7361%" y="901" width="0.0220%" height="15" fill="rgb(210,19,36)" fg:x="4535" fg:w="1"/><text x="99.9861%" y="911.50"></text></g><g><title>tokio::runtime::context::set_current_task_id::_{{closure}} (1 samples, 0.02%)</title><rect x="99.7361%" y="885" width="0.0220%" height="15" fill="rgb(219,96,14)" fg:x="4535" fg:w="1"/><text x="99.9861%" y="895.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="99.7361%" y="869" width="0.0220%" height="15" fill="rgb(249,106,1)" fg:x="4535" fg:w="1"/><text x="99.9861%" y="879.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="99.7361%" y="853" width="0.0220%" height="15" fill="rgb(249,155,20)" fg:x="4535" fg:w="1"/><text x="99.9861%" y="863.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="99.7361%" y="837" width="0.0220%" height="15" fill="rgb(244,168,9)" fg:x="4535" fg:w="1"/><text x="99.9861%" y="847.50"></text></g><g><title>malloc (1 samples, 0.02%)</title><rect x="99.7801%" y="1253" width="0.0220%" height="15" fill="rgb(216,23,50)" fg:x="4537" fg:w="1"/><text x="100.0301%" y="1263.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="99.7801%" y="1237" width="0.0220%" height="15" fill="rgb(224,219,20)" fg:x="4537" fg:w="1"/><text x="100.0301%" y="1247.50"></text></g><g><title>[libc.so.6] (1 samples, 0.02%)</title><rect x="99.7801%" y="1221" width="0.0220%" height="15" fill="rgb(222,156,15)" fg:x="4537" fg:w="1"/><text x="100.0301%" y="1231.50"></text></g><g><title>std::sys::unix::thread::guard::current (3 samples, 0.07%)</title><rect x="99.7581%" y="1285" width="0.0660%" height="15" fill="rgb(231,97,17)" fg:x="4536" fg:w="3"/><text x="100.0081%" y="1295.50"></text></g><g><title>pthread_getattr_np (3 samples, 0.07%)</title><rect x="99.7581%" y="1269" width="0.0660%" height="15" fill="rgb(218,70,48)" fg:x="4536" fg:w="3"/><text x="100.0081%" y="1279.50"></text></g><g><title>realloc (1 samples, 0.02%)</title><rect x="99.8021%" y="1253" width="0.0220%" height="15" fill="rgb(212,196,52)" fg:x="4538" fg:w="1"/><text x="100.0521%" y="1263.50"></text></g><g><title>[libc.so.6] (4,281 samples, 94.15%)</title><rect x="5.6961%" y="1397" width="94.1500%" height="15" fill="rgb(243,203,18)" fg:x="259" fg:w="4281"/><text x="5.9461%" y="1407.50">[libc.so.6]</text></g><g><title>[libc.so.6] (4,281 samples, 94.15%)</title><rect x="5.6961%" y="1381" width="94.1500%" height="15" fill="rgb(252,125,41)" fg:x="259" fg:w="4281"/><text x="5.9461%" y="1391.50">[libc.so.6]</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (4,279 samples, 94.11%)</title><rect x="5.7400%" y="1365" width="94.1060%" height="15" fill="rgb(223,180,33)" fg:x="261" fg:w="4279"/><text x="5.9900%" y="1375.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4,279 samples, 94.11%)</title><rect x="5.7400%" y="1349" width="94.1060%" height="15" fill="rgb(254,159,46)" fg:x="261" fg:w="4279"/><text x="5.9900%" y="1359.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4,279 samples, 94.11%)</title><rect x="5.7400%" y="1333" width="94.1060%" height="15" fill="rgb(254,38,10)" fg:x="261" fg:w="4279"/><text x="5.9900%" y="1343.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4,279 samples, 94.11%)</title><rect x="5.7400%" y="1317" width="94.1060%" height="15" fill="rgb(208,217,32)" fg:x="261" fg:w="4279"/><text x="5.9900%" y="1327.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (4,279 samples, 94.11%)</title><rect x="5.7400%" y="1301" width="94.1060%" height="15" fill="rgb(221,120,13)" fg:x="261" fg:w="4279"/><text x="5.9900%" y="1311.50">std::thread::Builder::spawn_unchecked_::_{{closure}}</text></g><g><title>std::sys_common::thread_info::set (1 samples, 0.02%)</title><rect x="99.8241%" y="1285" width="0.0220%" height="15" fill="rgb(246,54,52)" fg:x="4539" fg:w="1"/><text x="100.0741%" y="1295.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.02%)</title><rect x="99.8241%" y="1269" width="0.0220%" height="15" fill="rgb(242,34,25)" fg:x="4539" fg:w="1"/><text x="100.0741%" y="1279.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.02%)</title><rect x="99.8241%" y="1253" width="0.0220%" height="15" fill="rgb(247,209,9)" fg:x="4539" fg:w="1"/><text x="100.0741%" y="1263.50"></text></g><g><title>std::sys_common::thread_info::THREAD_INFO::__getit (1 samples, 0.02%)</title><rect x="99.8241%" y="1237" width="0.0220%" height="15" fill="rgb(228,71,26)" fg:x="4539" fg:w="1"/><text x="100.0741%" y="1247.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::register_dtor (1 samples, 0.02%)</title><rect x="99.8241%" y="1221" width="0.0220%" height="15" fill="rgb(222,145,49)" fg:x="4539" fg:w="1"/><text x="100.0741%" y="1231.50"></text></g><g><title>__cxa_thread_atexit_impl (1 samples, 0.02%)</title><rect x="99.8241%" y="1205" width="0.0220%" height="15" fill="rgb(218,121,17)" fg:x="4539" fg:w="1"/><text x="100.0741%" y="1215.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="99.8680%" y="1381" width="0.0440%" height="15" fill="rgb(244,50,7)" fg:x="4541" fg:w="2"/><text x="100.1180%" y="1391.50"></text></g><g><title>[libc.so.6] (2 samples, 0.04%)</title><rect x="99.8680%" y="1365" width="0.0440%" height="15" fill="rgb(246,229,37)" fg:x="4541" fg:w="2"/><text x="100.1180%" y="1375.50"></text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect x="99.8680%" y="1349" width="0.0440%" height="15" fill="rgb(225,18,5)" fg:x="4541" fg:w="2"/><text x="100.1180%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.9120%" y="1381" width="0.0220%" height="15" fill="rgb(213,204,8)" fg:x="4543" fg:w="1"/><text x="100.1620%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.9120%" y="1365" width="0.0220%" height="15" fill="rgb(238,103,6)" fg:x="4543" fg:w="1"/><text x="100.1620%" y="1375.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.9120%" y="1349" width="0.0220%" height="15" fill="rgb(222,25,35)" fg:x="4543" fg:w="1"/><text x="100.1620%" y="1359.50"></text></g><g><title>epoll_wait (1 samples, 0.02%)</title><rect x="99.9340%" y="1381" width="0.0220%" height="15" fill="rgb(213,203,35)" fg:x="4544" fg:w="1"/><text x="100.1840%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.9340%" y="1365" width="0.0220%" height="15" fill="rgb(221,79,53)" fg:x="4544" fg:w="1"/><text x="100.1840%" y="1375.50"></text></g><g><title>pthread_setname_np (1 samples, 0.02%)</title><rect x="99.9560%" y="1381" width="0.0220%" height="15" fill="rgb(243,200,35)" fg:x="4545" fg:w="1"/><text x="100.2060%" y="1391.50"></text></g><g><title>prctl (1 samples, 0.02%)</title><rect x="99.9560%" y="1365" width="0.0220%" height="15" fill="rgb(248,60,25)" fg:x="4545" fg:w="1"/><text x="100.2060%" y="1375.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.9560%" y="1349" width="0.0220%" height="15" fill="rgb(227,53,46)" fg:x="4545" fg:w="1"/><text x="100.2060%" y="1359.50"></text></g><g><title>all (4,547 samples, 100%)</title><rect x="0.0000%" y="1429" width="100.0000%" height="15" fill="rgb(216,120,32)" fg:x="0" fg:w="4547"/><text x="0.2500%" y="1439.50"></text></g><g><title>tokio-runtime-w (4,288 samples, 94.30%)</title><rect x="5.6961%" y="1413" width="94.3039%" height="15" fill="rgb(220,134,1)" fg:x="259" fg:w="4288"/><text x="5.9461%" y="1423.50">tokio-runtime-w</text></g><g><title>[unknown] (7 samples, 0.15%)</title><rect x="99.8461%" y="1397" width="0.1539%" height="15" fill="rgb(237,168,5)" fg:x="4540" fg:w="7"/><text x="100.0961%" y="1407.50"></text></g><g><title>std::sys::unix::rand::hashmap_random_keys (1 samples, 0.02%)</title><rect x="99.9780%" y="1381" width="0.0220%" height="15" fill="rgb(231,100,33)" fg:x="4546" fg:w="1"/><text x="100.2280%" y="1391.50"></text></g><g><title>std::sys::unix::rand::imp::fill_bytes (1 samples, 0.02%)</title><rect x="99.9780%" y="1365" width="0.0220%" height="15" fill="rgb(236,177,47)" fg:x="4546" fg:w="1"/><text x="100.2280%" y="1375.50"></text></g><g><title>std::sys::unix::rand::imp::getrandom_fill_bytes (1 samples, 0.02%)</title><rect x="99.9780%" y="1349" width="0.0220%" height="15" fill="rgb(235,7,49)" fg:x="4546" fg:w="1"/><text x="100.2280%" y="1359.50"></text></g><g><title>std::sys::unix::rand::imp::getrandom (1 samples, 0.02%)</title><rect x="99.9780%" y="1333" width="0.0220%" height="15" fill="rgb(232,119,22)" fg:x="4546" fg:w="1"/><text x="100.2280%" y="1343.50"></text></g><g><title>std::sys::unix::rand::imp::getrandom::getrandom (1 samples, 0.02%)</title><rect x="99.9780%" y="1317" width="0.0220%" height="15" fill="rgb(254,73,53)" fg:x="4546" fg:w="1"/><text x="100.2280%" y="1327.50"></text></g><g><title>getrandom (1 samples, 0.02%)</title><rect x="99.9780%" y="1301" width="0.0220%" height="15" fill="rgb(251,35,20)" fg:x="4546" fg:w="1"/><text x="100.2280%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.9780%" y="1285" width="0.0220%" height="15" fill="rgb(241,119,20)" fg:x="4546" fg:w="1"/><text x="100.2280%" y="1295.50"></text></g></svg></svg>